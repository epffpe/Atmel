################################################################################
#                                                                              #
#      IAR Universal Linker V4.53O/WIN                                         #
#                                                                              #
#           Link time     =  01/Oct/2003  08:40:37                             #
#           Target CPU    =  A90                                               #
#           List file     =  C:\user\AvrStudio4-test\15082003\SimpleLcdDemo\De #
#                            bug\List\LCDdemo.map                              #
#           Output file 1 =  C:\user\AvrStudio4-test\15082003\SimpleLcdDemo\De #
#                            bug\Exe\LCDdemo.d90                               #
#                            Format: debug                                     #
#                            UBROF version 8.0.2                               #
#                            Using library modules for C-SPY (-r)              #
#           Command line  =  C:\user\AvrStudio4-test\15082003\SimpleLcdDemo\De #
#                            bug\Obj\LCD_driver.r90                            #
#                            C:\user\AvrStudio4-test\15082003\SimpleLcdDemo\De #
#                            bug\Obj\LCD_functions.r90                         #
#                            C:\user\AvrStudio4-test\15082003\SimpleLcdDemo\De #
#                            bug\Obj\main.r90                                  #
#                            C:\IAR2\EW23\avr\lib\cl3s-ec-sf.r90 -o            #
#                            C:\user\AvrStudio4-test\15082003\SimpleLcdDemo\De #
#                            bug\Exe\LCDdemo.d90                               #
#                            -r -l                                             #
#                            C:\user\AvrStudio4-test\15082003\SimpleLcdDemo\De #
#                            bug\List\LCDdemo.map                              #
#                            -xms -IC:\IAR2\EW23\avr\LIB\ -f                   #
#                            C:\IAR2\EW23\avr\config\lnkm169s.xcl              #
#                            (-D_..X_INTVEC_SIZE=5C -D_..X_FLASH_TEND=FF       #
#                            -D_..X_FLASH_NEND=3FFF -D_..X_FLASH_END=3FFF      #
#                            -D_..X_SRAM_BASE=100 -D_..X_SRAM_TEND=100         #
#                            -D_..X_SRAM_END=4FF -D_..X_EEPROM_END=1FF         #
#                            -D_..X_CSTACK_SIZE=100 -D_..X_RSTACK_SIZE=40      #
#                            -D_..X_HEAP_SIZE=80 -ca90                         #
#                            -Z(CODE)INTVEC=0-(_..X_INTVEC_SIZE-1) -H1895      #
#                            -h(CODE)0-_..X_INTVEC_SIZE                        #
#                            -Z(CODE)TINY_F=_..X_INTVEC_SIZE-_..X_FLASH_TEND   #
#                            -Z(CODE)NEAR_F,SWITCH,INITTAB,DIFUNCT=_..X_INTVEC #
#                            _SIZE-_..X_FLASH_END                              #
#                            -Z(CODE)CODE=_..X_INTVEC_SIZE-_..X_FLASH_END      #
#                            -Z(CODE)TINY_ID,NEAR_ID,CHECKSUM=_..X_INTVEC_SIZE #
#                            -_..X_FLASH_END                                   #
#                            -Z(DATA)TINY_I,TINY_Z,TINY_N=_..X_SRAM_BASE-_..X_ #
#                            SRAM_TEND                                         #
#                            -Z(DATA)NEAR_I,NEAR_Z,NEAR_N=_..X_SRAM_BASE-_..X_ #
#                            SRAM_END                                          #
#                            -Z(DATA)RSTACK+_..X_RSTACK_SIZE=_..X_SRAM_BASE-_. #
#                            .X_SRAM_END                                       #
#                            -Z(DATA)CSTACK+_..X_CSTACK_SIZE=_..X_SRAM_BASE-_. #
#                            .X_SRAM_END                                       #
#                            -Z(DATA)HEAP+_..X_HEAP_SIZE=_..X_SRAM_BASE-_..X_S #
#                            RAM_END                                           #
#                            -Z(XDATA)EEPROM_I,EEPROM_N=0-_..X_EEPROM_END      #
#                            -e_Printf_1=_Printf                               #
#                            -e_small_write=_formatted_write                   #
#                            -e_small_write_P=_formatted_write_P               #
#                            -e_Scanf_1=_Scanf                                 #
#                            -e_medium_read=_formatted_read                    #
#                            -e_medium_read_P=_formatted_read_P -w29)          #
#                                                                              #
#                        Copyright 1987-2002 IAR Systems. All rights reserved. #
################################################################################





                ****************************************
                *                                      *
                *           CROSS REFERENCE            *
                *                                      *
                ****************************************

                  There are no program entries.




                ****************************************
                *                                      *
                *            RUNTIME MODEL             *
                *                                      *
                ****************************************

  R4              = REG
  R5              = REG
  __64bit_doubles = disabled
  __cpu           = 3
  __cpu_name      = AT90Mega169
  __enhanced_core = enabled
  __has_elpm      = false
  __memory_model  = 2
  __rt_version    = 2.30



                ****************************************
                *                                      *
                *              MODULE MAP              *
                *                                      *
                ****************************************


  DEFINED ABSOLUTE ENTRIES
  PROGRAM MODULE, NAME : ?ABS_ENTRY_MOD

Absolute parts
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _..X_HEAP_SIZE          00000080 
           _..X_RSTACK_SIZE        00000040 
           _..X_CSTACK_SIZE        00000100 
           _..X_EEPROM_END         000001FF 
           _..X_SRAM_END           000004FF 
           _..X_SRAM_TEND          00000100 
           _..X_SRAM_BASE          00000100 
           _..X_FLASH_END          00003FFF 
           _..X_FLASH_NEND         00003FFF 
           _..X_FLASH_TEND         000000FF 
           _..X_INTVEC_SIZE        0000005C 
    *************************************************************************

  FILE NAME : C:\user\AvrStudio4-test\15082003\SimpleLcdDemo\Debug\Obj\LCD_driver.r90
  PROGRAM MODULE, NAME : LCD_driver

  SEGMENTS IN THE MODULE
  ======================
ABSOLUTE (ABS)
  Relative segment, address: DATA 000000E4 - 000000E4 (1 bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   LCD_Init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_LCDCRA               000000E4 
    -------------------------------------------------------------------------
ABSOLUTE (ABS)
  Relative segment, address: DATA 000000E5 - 000000E5 (1 bytes), align: 0
  Segment part 2. ROOT.       Intra module refs:   LCD_Init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_LCDCRB               000000E5 
    -------------------------------------------------------------------------
ABSOLUTE (ABS)
  Relative segment, address: DATA 000000E6 - 000000E6 (1 bytes), align: 0
  Segment part 3. ROOT.       Intra module refs:   LCD_Init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_LCDFRR               000000E6 
    -------------------------------------------------------------------------
ABSOLUTE (ABS)
  Relative segment, address: DATA 000000E7 - 000000E7 (1 bytes), align: 0
  Segment part 4. ROOT.       Intra module refs:   LCD_Init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_LCDCCR               000000E7 
    -------------------------------------------------------------------------
NEAR_I
  Relative segment, address: DATA 00000100 - 00000131 (32 bytes), align: 0
  Segment part 12.            Intra module refs:   LCD_Init
                                                   LCD_SOF_interrupt
                                                   LCD_WriteDigit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LCD_Data                00000101 
           gLCD_Start_Scroll_Timer
                                   00000130        LCD_puts (LCD_functions)
           gLCD_Update_Required    00000100        LCD_puts (LCD_functions)
           gScroll                 0000012E        LCD_puts (LCD_functions)
           gScrollMode             0000012F        LCD_puts (LCD_functions)
           gTextBuffer             00000115        LCD_puts (LCD_functions)
           LOCAL                   ADDRESS         
           =====                   =======         
           LCD_SOF_interrupt::LCD_timer
                                   00000131 
    -------------------------------------------------------------------------
NEAR_F
  Relative segment, address: CODE 0000005C - 000000C7 (6c bytes), align: 0
  Segment part 15.            Intra module refs:   LCD_WriteDigit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LCD_character_table     0000005C 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000000CE - 000000F7 (2a bytes), align: 1
  Segment part 16.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LCD_Init                000000CE        main (main)
               non_banked function
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000000F8 - 00000161 (6a bytes), align: 1
  Segment part 17.            Intra module refs:   LCD_SOF_interrupt
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LCD_WriteDigit          000000F8 
               non_banked function
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000162 - 00000297 (136 bytes), align: 1
  Segment part 18.            Intra module refs:   Segment part 9
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LCD_SOF_interrupt       00000162 
               interrupt, non_banked function
               calls direct
               stack 1 = 00000000 ( 00000015 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
ABSOLUTE (ABS)
  Relative segment, address: DATA 0000001F, align: 0
  Segment part 5. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EECR                 0000001F 
    -------------------------------------------------------------------------
ABSOLUTE (ABS)
  Relative segment, address: DATA 00000020, align: 0
  Segment part 6. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEDR                 00000020 
    -------------------------------------------------------------------------
ABSOLUTE (ABS)
  Relative segment, address: DATA 00000021, align: 0
  Segment part 7. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEARL                00000021 
    -------------------------------------------------------------------------
ABSOLUTE (ABS)
  Relative segment, address: DATA 00000022, align: 0
  Segment part 8. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEARH                00000022 
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: CODE 00000000 - 0000005B (5c bytes), align: 1
  Segment part 9. ROOT.
    -------------------------------------------------------------------------
NEAR_ID
  Relative segment, address: CODE 00000394 - 000003C5 (32 bytes), align: 0
  Segment part 13.            Intra module refs:   LCD_Data
    -------------------------------------------------------------------------
INITTAB
  Relative segment, address: CODE 000000C8 - 000000CD (6 bytes), align: 0
  Segment part 14.            Intra module refs:   LCD_Data
                                                   Segment part 7 (main)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?<Segment init: NEAR_I>
                                   000000C8 

    *************************************************************************

  FILE NAME : C:\user\AvrStudio4-test\15082003\SimpleLcdDemo\Debug\Obj\LCD_functions.r90
  PROGRAM MODULE, NAME : LCD_functions

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 00000298 - 000002F7 (60 bytes), align: 1
  Segment part 7.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LCD_puts                00000298        main (main)
               non_banked function

    *************************************************************************

  FILE NAME : C:\user\AvrStudio4-test\15082003\SimpleLcdDemo\Debug\Obj\main.r90
  PROGRAM MODULE, NAME : main

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 000002F8 - 00000309 (12 bytes), align: 1
  Segment part 10.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           main                    000002F8        ?cstartup_call_main (?C_STARTUP)
               non_banked function
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
NEAR_I
  Relative segment, address: DATA 00000132 - 00000141 (10 bytes), align: 0
  Segment part 7.             Intra module refs:   main
    -------------------------------------------------------------------------
NEAR_ID
  Relative segment, address: CODE 000003C6 - 000003D5 (10 bytes), align: 0
  Segment part 8.             Intra module refs:   Segment part 7

    *************************************************************************

  FILE NAME : C:\IAR2\EW23\avr\lib\cl3s-ec-sf.r90
  PROGRAM MODULE, NAME : ?RESET

  SEGMENTS IN THE MODULE
  ======================
INTVEC
  Common segment, address: CODE 00000000 - 00000003 (4 bytes), align: 1
  Segment part 0. ROOT.

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?C_STARTUP

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 0000030A, align: 1
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?C_STARTUP              0000030A        Segment part 0 (?RESET)
           __RESTART               0000030A 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000030A - 00000315 (c bytes), align: 1
  Segment part 4.             Intra module refs:   ?C_STARTUP
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000316 - 00000319 (4 bytes), align: 1
  Segment part 6.             Intra module refs:   Segment part 4
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?call_low_level_init    00000316 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000031A - 00000321 (8 bytes), align: 1
  Segment part 7.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?need_segment_init      0000031A        ?<Segment init: NEAR_I> (LCD_driver)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000322 - 0000032D (c bytes), align: 1
  Segment part 8.             Intra module refs:   ?call_low_level_init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?cstartup_call_main     00000322 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?US_SHR_L02

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 0000032E - 00000339 (c bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?US_SHR_L02             0000032E        LCD_WriteDigit (LCD_driver)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?REGISTER_CGREGR4_L10

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 0000033A, align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?Register_R4_is_cg_reg
                                   0000033A        LCD_SOF_interrupt (LCD_driver)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?REGISTER_CGREGR5_L10

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 0000033A, align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?Register_R5_is_cg_reg
                                   0000033A        LCD_SOF_interrupt (LCD_driver)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : low_level_init

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 0000033A - 0000033D (4 bytes), align: 1
  Segment part 3.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __low_level_init        0000033A        ?call_low_level_init (?C_STARTUP)
               non_banked function

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?segment_init

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 0000033E - 00000351 (14 bytes), align: 1
  Segment part 8.             Intra module refs:   __flashcpy
                                                   __segment_init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __memclr                0000033E 
               non_banked function
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000352 - 00000359 (8 bytes), align: 1
  Segment part 9.             Intra module refs:   __segment_init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __flashcpy              00000352 
               non_banked function
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000035A - 0000038D (34 bytes), align: 1
  Segment part 10.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __segment_init          0000035A        ?need_segment_init (?C_STARTUP)
               non_banked function
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
INITTAB
  Relative segment, address: CODE 000000CE, align: 0
  Segment part 6.             Intra module refs:   __segment_init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?<Segment part INITTAB>
                                   000000CE 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?__exit

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 0000038E - 00000393 (6 bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __exit                  00000390 
           ?C_EXIT                 00000390 
           ?C_FUNCALL              0000038E 
           _exit                   0000038E        ?cstartup_call_main (?C_STARTUP)
           exit                    0000038E        ?cstartup_call_main (?C_STARTUP)

    *************************************************************************

  DEFINED ABSOLUTE ENTRIES
  PROGRAM MODULE, NAME : ?FILLER_BYTES

  SEGMENTS IN THE MODULE
  ======================
INTVEC
  Common segment, address: CODE 00000000 - 0000005B (5c bytes), align: 0
  Segment part 0.




                ****************************************
                *                                      *
                *      SEGMENTS IN ADDRESS ORDER       *
                *                                      *
                ****************************************


SEGMENT              SPACE   START ADDRESS    END ADDRESS      SIZE  TYPE  ALIGN
=======              =====   =============    ===========      ====  ====  =====
INTVEC               CODE         00000000 - 0000005B            5C   com    1
NEAR_F               CODE         0000005C - 000000C7            6C   rel    0
SWITCH               CODE              000000C8                       dse    0
INITTAB              CODE         000000C8 - 000000CD             6   rel    0
CODE                 CODE         000000CE - 00000393           2C6   rel    1
TINY_ID              CODE              00000394                       dse    0
NEAR_ID              CODE         00000394 - 000003D5            42   rel    0
ABSOLUTE (ABS)       DATA              0000001F                       rel    0
                     DATA              00000020                     
                     DATA              00000021                     
                     DATA              00000022                     
                     DATA         000000E4 - 000000E4             1 
                     DATA         000000E5 - 000000E5             1 
                     DATA         000000E6 - 000000E6             1 
                     DATA         000000E7 - 000000E7             1 
NEAR_I               DATA         00000100 - 00000141            42   rel    0
RSTACK               DATA         00000142 - 00000181            40   dse    0
CSTACK               DATA         00000182 - 00000281           100   dse    0

                ****************************************
                *                                      *
                *        END OF CROSS REFERENCE        *
                *                                      *
                ****************************************

  982 bytes of CODE memory
  390 bytes of DATA memory

Errors: none
Warnings: none

