MPASM  5.1    FUELGAUGEAPPNOTE_MAIN_VER1.ASM   12-18-2007  18:09:33         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;/**************************************************************/
                      00002 ;/*  File Name: FuelGaugeDemo_Main.asm
                      00003 ;*              Dependent rutines:
                      00004 ;*                      FuelGauge_ADC.asm
                      00005 ;*                      FuelGauge_Buzzer.asm
                      00006 ;*                      FuelGauge_Write_LCD.asm
                      00007 ;*                      FuelGauge_Math.asm
                      00008 ;*                      Binary_To_BCDConversion.asm
                      00009 ;*      
                      00010 ;*              Clock = 8 MHz, Internal Clock
                      00011 ;--------------------------------------------------------------
                      00012 ;     This is the main routin of the MCP3421 Fuel Gauge Demo Board.
                      00013 ;         This firmware is modified from the "FuelGageDemo_Main_Ver1.asm" for recharging battery. 
                      00014 ;        
                      00015 ;         This routine performs the following tasks:
                      00016 ;               (1) Get Battery Voltage using U5
                      00017 ;               (2) Get Voltage drop on the current sensor using U1
                      00018 ;                       ADC Device Address:
                      00019 ;                                U5 = A3 --> Get voltage
                      00020 ;                                U1 = A0 --> Get Current
                      00021 ;                       Note:   MCP3421 Config sets:  18 bits.
                      00022 ;                                       ADC results  = ADC_Res1 + ADC_Res2 + ADC_Res3 
                      00023 ;                                       Multiply the ADC value with d'15625'  ---> h'3D09' ---> 1 LSB = 
                            15.625 uV
                      00024 ;                                                                                       ---> Multilier1(
                            00) + Multilier2(0x3D) +Multilier3(0x09) 
                      00025 ;                               Results are in 6 resisters  ---> Product1 + Product2 + Product3 + Produc
                            t4 + Product5 + Product6
                      00026 ;
                      00027 ;               (3) Calculate Discharging Current using the voltage and resistor value
                      00028 ;               (4) Converts 48 binary to BCD
                      00029 ;               (5) Display the Battery Voltage and Current on LCD
                      00030 ;               (6) Calculate Fuel used
                      00031 ;               (7) Beeps if the battery voltage is less than 0.75V (when it uses 1.5V AAA battery)
                      00032 ;
                      00033 ;       This Demo Board Routin disabled the Rechargeable Function. 
                      00034 ;       Note:   The battery rechargeable function is still there, but made invisable since it is not pro
                            viding the rechargeable battery with this demo board. 
                      00035 ;                       Any customer who need this rechargeable feature can contact Microchip Technology
                             Inc for further information. 
                      00036 ;               When the battery recharge function is enabled, this routine addes the folloing tasks:
                      00037 ;               (8) Calculate Fuel Remain
                      00038 ;               (9) Display the Fuel Used and Fuel Remain
                      00039 ;               (10)Recharge the Battery
                      00040 ;               (11)Stop the Recharge at Battery Volts = 4.0V when it uses the following battery type:
                      00041 ;                                       Battery Manufacturer: www.batteryspace.com (Powerizer)
                      00042 ;                                       Battery Type: 3.7V, 170 mAH, Polymer Li-Ion Cell
                      00043 ;                                       P/N: PL052025                                    
                      00044 ;-------------------------------------------------------------------------
                      00045 ;       Ver 1.0
                      00046 ;       Date: 7-28-2007
                      00047 ;               AIPD
                      00048 ;               Microchip Technology Inc 
MPASM  5.1    FUELGAUGEAPPNOTE_MAIN_VER1.ASM   12-18-2007  18:09:33         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00049 ;
                      00050 ;------------------------------------------------------------------------
                      00051 ;************************************************************************
                      00052 ;               LEGAL NOTICE
                      00053 ;
                      00054 ;  The information contained in this document is proprietary and 
                      00055 ;  confidential information of Microchip Technology Inc.  Therefore all 
                      00056 ;  parties are required to sign a non-disclosure agreement before  
                      00057 ;  receiving this document.
                      00058 ;
                      00059 ;  The information contained in this Application Note is for suggestion 
                      00060 ;  only.  It is your responsibility to ensure that your application meets 
                      00061 ;  with your specifications.  No representation or warranty is given and 
                      00062 ;  no liability is assumed by Microchip Technology Incorporated with 
                      00063 ;  respect to the accuracy or use of such information or infringement of 
                      00064 ;  patents or other intellectual property arising from such use or 
                      00065 ;  otherwise.
                      00066 ;
                      00067 ;                Software License Agreement
                      00068 ;
                      00069 ; The software supplied herewith by Microchip Technology Incorporated 
                      00070 ; (the "Company") for its PICmicro® Microcontroller is intended and 
                      00071 ; supplied to you, the Company's customer, for use solely and 
                      00072 ; exclusively on Microchip PICmicro Microcontroller products. The 
                      00073 ; software is owned by the Company and/or its supplier, and is 
                      00074 ; protected under applicable copyright laws. All rights are reserved. 
                      00075 ;  Any use in violation of the foregoing restrictions may subject the 
                      00076 ; user to criminal sanctions under applicable laws, as well as to 
                      00077 ; civil liability for the breach of the terms and conditions of this 
                      00078 ; license.
                      00079 ;
                      00080 ; THIS SOFTWARE IS PROVIDED IN AN "AS IS" CONDITION. NO WARRANTIES, 
                      00081 ; WHETHER EXPRESS, IMPLIED OR STATUTORY, INCLUDING, BUT NOT LIMITED 
                      00082 ; TO, IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A 
                      00083 ; PARTICULAR PURPOSE APPLY TO THIS SOFTWARE. THE COMPANY SHALL NOT, 
                      00084 ; IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL OR 
                      00085 ; CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
                      00086 
                      00087 
                      00088 ;************************************************************************
                      00089 
                      00090         list            p=18f4550
                      00091         #include        <p18f4550.inc>
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ;  $Id: P18F4550.INC,v 1.10 2006/10/25 17:47:56 nairnj Exp $
                      00005 ;  MPASM PIC18F4550 processor include
                      00006 ; 
                      00007 ;  (c) Copyright 1999-2006 Microchip Technology, All rights reserved
                      00008 ;==========================================================================
                      00009 
                      01642         LIST
MPASM  5.1    FUELGAUGEAPPNOTE_MAIN_VER1.ASM   12-18-2007  18:09:33         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00092         #include        FuelGauge_Project.inc
                      00001 ;/****************************************/
                      00002 ;/*  File Name: FuelGauge_Project.inc
                      00003 ;/***************************************/
                      00004 
                      00005 
                      00006 #define sw_1_dir        TRISC,7                 ;Scroll Push-button switch S1, RRC7 on PCB
                      00007 #define sw_1            PORTC,7
                      00008 
                      00009 #define sw_2_dir        TRISB,0                 ;Select Push-button switch S2, RB0 on PCB
                      00010 #define sw_2            PORTB,0
                      00011 
                      00012 #define sw_3_dir        TRISB,1                 ;Select Push-button switch S3, RB1 on PCB
                      00013 #define sw_3            PORTB,1
                      00014 
                      00015 #define sw_4_dir        TRISB,2                 ;Select Push-button switch S3, RB1 on PCB
                      00016 #define sw_4            PORTB,2
                      00017 
                      00018 
                      00019 
                      00020 #define SCL_dir         TRISA,4                 ; I2C SCL & SDA ...
                      00021 #define SCLK_I2C        PORTA,4
                      00022 #define SDA_dir         TRISA,5
                      00023 #define SDA_I2C         PORTA,5
                      00024 
                      00025 
                      00026 ; define test points
                      00027 #define Sync_LED11      PORTD,6
                      00028 #define TP16_LED12      PORTD,7
                      00029 #define TP17_LED13      PORTD,3
                      00030 
                      00031 
                      00032 
                      00033 #define         DELAYTIME       .50                     ;Debounce Delay Constant ~10ms
                      00034 
                      00093         #include        FuelGaugeAppNote_Main.inc
                      00001 ;/****************************************/
                      00002 ;/*  File Name: FuelGaugeDemo_Main.inc
                      00003 ;/***************************************/
                      00004 
                      00005 ;/**** The folloing routines are used in "FuelGauge_Buzzer.asm" **************/ 
  0000                00006         global  delay_100ms, delay_1s
                      00007 
                      00008 
                      00009 ;/**** The following variables are used in "FuelGauge_Write_LCD.asm" **************/    
  0000                00010         global  FoundFistDigit 
                      00011 ;/      global  ADC_Sign, Gain_Selected, FoundFistDigit
                      00012 
                      00013 ;/**** The following variables are used in "FuelGauge_ADC.asm" ********************/    
  0000                00014         global  Config_Data, ADC_Sign, Gain_Selected, ADC_Value1, ADC_Value2, ADC_Value3
  0000                00015         global  IsitForU5_Volt
                      00016 
                      00017 ;/**** The following variables are used in "Binary_To_BCDConversion.asm" **********/    
MPASM  5.1    FUELGAUGEAPPNOTE_MAIN_VER1.ASM   12-18-2007  18:09:33         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00018 ;/      global  countT1,countT2,countT3,countT4,countT5,countT6
                      00019 
                      00020 ;/**** The following variables are used in "FuelGauge_Write_LCD.asm" **********/        
                      00021 
  0000                00022         global  digitT1,digitT2,digitT3,digitT4,digitT5,digitT6,digitT7
  0000                00023         global  digitT8,digitT9,digitT10,digitT11,digitT12,digitT13
                      00024 
                      00025 ;/**** The folloing variables are used in the "FuelGauge_MathLib.asm" **************/   
                      00026 
  0000                00027         global  Multiplier1,Multiplier2,Multiplier3
  0000                00028         global  Product1, Product2, Product3, Product4, Product5,Product6
  0000                00029         global  Multipland1, Multipland2, Multipland3
                      00030 ;       global  IsitForU5_Volt, Gain_Selected
                      00031 
  0000                00032         global  Dividend1, Dividend2, Dividend3, Dividend4, Dividend5, Dividend6
  0000                00033         global  Divisor1, Divisor2, Divisor3
                      00034 
  0000                00035         global  Carry_fromAdd 
  0000                00036         global  AddByteA 
  0000                00037         global  AddByteB
                      00038 
                      00039 ; Function Lists:
                      00040 
                      00041 ;/**** The following routins are used in "FuelGauge_ADC.asm" ********************/      
                      00042 
  0000                00043         extern  ADC_Write_Config, ADC_Read_400KHz
                      00044 
                      00045 ;/**** The folloing routines are in the "FuelGauge_MathLib.asm" **************/ 
  0000                00046         extern  SubtractByteA, SubtractByteB
  0000                00047         extern  Subtract_6Bytes_6Bytes 
  0000                00048         extern  Multiply_24x24Bits_ADC, Multiply_3x3bytes
  0000                00049         extern  Divide_6by_3Bytes
  0000                00050         extern  Add_Two_6Bytes
                      00051 
                      00052 
                      00053 ;/**** The folloing routines are in the "FuelGauge_Buzzer.asm" **************/  
  0000                00054         extern  Buzzer_ON, Buzzer_OFF, Buzzer1p2KHz_ON, Buzzer1p1KHz_ON
  0000                00055         extern  Buzzer1p1To1p5KHz_ON
  0000                00056         extern  BuzzerStartUp_ON
                      00057 
                      00058 
                      00059 ;/**** The folloing routines are in the "FuelGauge_Write_LCD.asm" **************/       
  0000                00060         extern  Display_Results, Display_Results_Volts, Display_Results_Current
  0000                00061         extern  Disp_FuelRemPerct, Disp_FuelRemmAH, Display_FuelUsed, Disp_StdUnderCharged
  0000                00062         extern  Disp_ChargeCompleted, Disp_PressS1, Disp_DisconnectJP2, Disp_ConnectJP1, Disp_BatLowerTh
                            an0_75V
  0000                00063         extern  Disp_PlseWaitAtL1, Disp_InitAtL2
  0000                00064         extern  Disp_AtTP9_PressS1, Disp_ConntBattery 
                      00065 ;       extern  Bin48_bcd_volts, Bin48_bcd_currents
                      00066 
  0000                00067         extern  LCDInit,temp_wr, d_write, i_write, LCDLine_1, LCDLine_2
                      00068 
                      00094 
MPASM  5.1    FUELGAUGEAPPNOTE_MAIN_VER1.ASM   12-18-2007  18:09:33         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00095         ERRORLEVEL 0,-301,-302,-305     ; Messages, Warnings and Errors Printed
                      00096                                                 ; Ignore [301] => Processor Mismatch. 
                      00097                                                 ; Ignore [302] => Register in operand not in bank 0. 
                      00098 
                      00099 ; See more details in <p18f4550.inc>:\Microchip\MPASM Suite\ P18F4550.INC 
                      00100         CONFIG  FOSC = INTOSC_HS     ;Internal oscillator, HS for USB 
                      00101         CONFIG  FCMEN = OFF
                      00102         CONFIG  IESO = OFF
                      00103         CONFIG  PWRT = OFF            
                      00104         CONFIG  BOR  = ON                               ;Brown-out Reset disabled in hardware and softwa
                            re
                      00105         CONFIG  BORV  = 2                               ;Brown-out Voltage bits
                      00106         CONFIG  WDT = OFF 
                      00107         CONFIG  MCLRE = ON  
                      00108         CONFIG  PBADEN = OFF 
                      00109         CONFIG  LVP = OFF  
                      00110     CONFIG      XINST = OFF                             ;Instruction set extension and Indexed Addressin
                            g mode disabled (Legacy mode)
                      00111 
                      00112 
                      00113         
                      00114 variables       UDATA
                      00115 
000000                00116 bitcnt          RES 1
000001                00117 digcnt          RES 1
                      00118 
000002                00119 countT1         RES 1                                   ;lsb
000003                00120 countT2         RES 1   
000004                00121 countT3         RES 1   
000005                00122 countT4         RES 1   
000006                00123 countT5         RES 1                                   ;msb for gain=1
000007                00124 countT6         RES 1                                   ;msb for gain = 8,4,2
                      00125 
                      00126 ;/* The following parameters are defined in subroutine */
                      00127 
000008                00128 digitT1         RES 1                                   ;lsd
000009                00129 digitT2         RES 1
00000A                00130 digitT3         RES 1
00000B                00131 digitT4         RES 1
00000C                00132 digitT5         RES 1
00000D                00133 digitT6         RES 1
00000E                00134 digitT7         RES 1
00000F                00135 digitT8         RES 1
000010                00136 digitT9         RES 1
000011                00137 digitT10        RES 1
000012                00138 digitT11        RES 1
000013                00139 digitT12        RES 1
000014                00140 digitT13        RES 1                                   ;msd
                      00141 
Warning[205]: Found directive in column 1. (radix)
                      00142 radix dec               ; Very Important --> Specify default in Radix  
                      00143 
                      00144 
MPASM  5.1    FUELGAUGEAPPNOTE_MAIN_VER1.ASM   12-18-2007  18:09:33         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000015                00145 FoundFistDigit res 1
                      00146 
                      00147 ;variables      UDATA
000016                00148 ptr_pos         RES 1
000017                00149 ptr_count       RES 1
000018                00150 temp_1          RES 1
000019                00151 temp_2          RES 1
00001A                00152 temp_3          RES 1
                      00153 
                      00154           
                      00155 ; Varuables for multiplication:
                      00156 
00001B                00157 Product1        res 1
00001C                00158 Product2        res 1
00001D                00159 Product3        res 1
00001E                00160 Product4        res 1
00001F                00161 Product5        res 1
000020                00162 Product6        res 1
000021                00163 Multipland1     res     1
000022                00164 Multipland2     res     1
000023                00165 Multipland3     res     1
000024                00166 Multiplier1     res     3
000027                00167 Multiplier2     res     3
00002A                00168 Multiplier3     res     3
                      00169 ;BitCount       res 1
                      00170 ;--------------------------
                      00171 
00002D                00172 ADC_Value1      res 1
00002E                00173 ADC_Value2      res 1
00002F                00174 ADC_Value3      res 1
                      00175 ;ADC_Value4     res 1
                      00176 
000030                00177 ADC_Value1_temp res 1
000031                00178 ADC_Value2_temp res 1
000032                00179 ADC_Value3_temp res 1
                      00180 
                      00181 
000033                00182 Config_Data     res 1
000034                00183 IsitForU5_Volt res 1
                      00184 
000035                00185 ADC_Sign        res 1
000036                00186 Gain_Selected   res 1
                      00187 ;-------------------------
000037                00188 Dividend1       res 1
000038                00189 Dividend2       res 1
000039                00190 Dividend3       res 1
00003A                00191 Dividend4       res 1
00003B                00192 Dividend5       res 1
00003C                00193 Dividend6       res 1
                      00194 
00003D                00195 Divisor1        res 1
00003E                00196 Divisor2        res 1
00003F                00197 Divisor3        res 1
MPASM  5.1    FUELGAUGEAPPNOTE_MAIN_VER1.ASM   12-18-2007  18:09:33         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00198 
000040                00199 Carry_AddTotal res 1
000041                00200 Voltage_Dispayed res 1
                      00201 
000042                00202 FSR0_TEMP       res 1   
000043                00203 PCLATH_TEMP res 1
000044                00204 STATUS_TEMP res 1
000045                00205 W_TEMP          res 1
000046                00206 BSR_Temp        res 1
                      00207 
000047                00208 Timer0_Interrupt res 1
                      00209 
                      00210 ;Variables for Addition
000048                00211 AddByteA                res 6
00004E                00212 AddByteB                res 6
000054                00213 Carry_fromAdd   res 1
000055                00214 Current_Used    res 6
                      00215 ;---------------------
                      00216 
00005B                00217 I_remain_uAS    res 6
000061                00218 I_remain_mAH1   res 1
000062                00219 I_remain_mAH2   res 1
000063                00220 I_remain_mAH3   res 1
000064                00221 I_remain_mAH4   res 1
000065                00222 I_remain_mAH5   res 1
000066                00223 I_remain_mAH6   res 1
                      00224 
000067                00225 I_Init1_mAH             res 1
000068                00226 I_Init2_mAH             res 1
000069                00227 I_Init3_mAH             res 1
00006A                00228 I_Init4_mAH             res 1
00006B                00229 I_Init5_mAH             res 1
00006C                00230 I_Init6_mAH             res 1
                      00231 
00006D                00232 I_Init_uAS              res 6
                      00233 
000073                00234 Disp_FuelUsed   res 1
000074                00235 Disp_RemainFuel res 1
                      00236 
000075                00237 RB0Int_Found    res 1   
000076                00238 SelBettryType res 1
000077                00239 Delay_Returned  res 1
000078                00240 OUTER           res 1   
000079                00241 INNER           res 1
                      00242 
                      00243 ;Users_Battery  res 1
00007A                00244 PORTBInt_Found  res 1
00007B                00245 ChargingBat             res 1
00007C                00246 FirstPowered    res 1
00007D                00247 LessThan1or2V   res 1
00007E                00248 LowerThan0_75V  res 1
00007F                00249 HigherThan4V    res 1
000080                00250 NotChargedBat   res 1
MPASM  5.1    FUELGAUGEAPPNOTE_MAIN_VER1.ASM   12-18-2007  18:09:33         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00251 ;---------------------
                      00252 
                      00253 
                      00254 ;---------------------
                      00255 RESET_VEC       code 0x0000
000000                00256 RESET_VECTOR
000000 EF?? F???      00257         goto    Start                           
                      00258 
                      00259 HIGH_INT_VEC    code 0x0008             
000008 EF?? F???      00260         goto    ISR                             
                      00261 
                      00262 LOW_INT_VEC             code 0x0018
                      00263 
000018 EF?? F???      00264         goto    ISR
                      00265 
                      00266 
                      00267 REST    code
                      00268         
                      00269 
                      00270 ;------------------------------------------------------------------------------+
                      00271 ;                                                                              |
                      00272 ;    ISR()                                                                     |
                      00273 ;                                                                              |
                      00274 ;------------------------------------------------------------------------------+
                      00275 ;                                                                              |
                      00276 ;    The interrupt service routine generates the needed events.                |
                      00277 ;    It also handles standard interrupts, like delay routines or timers.       |
                      00278 ;    It should be as short as possible, to provide best reaction times.        |
                      00279 ;                                                                              |
                      00280 ;                                                                              |
                      00281 ;------------------------------------------------------------------------------+
000000                00282 ISR     
000000 010?           00283         banksel W_TEMP
000002 6E??           00284         movwf   W_TEMP                                          ;Save off current W register contents
000004 CFD8 F???      00285         movff   STATUS,STATUS_TEMP
000008 CFE0 F???      00286         movff   BSR, BSR_Temp
                      00287                                                          
00000C CFFA F???      00288         movff   PCLATH,PCLATH_TEMP                              ;Save PCLATH
000010 C000 F???      00289         movff   FSR0,FSR0_TEMP                                  ;Save FSR
                      00290 
                      00291 
000014                00292 CheckTIMER0_Int
                      00293 
000014 A4F2           00294         btfss   INTCON,TMR0IF                                   ; Check if Timer1 Interrupt  Flag Set
000016 D???           00295         bra             CheckRBO_Int                                    ; ... No, then end search
000018 AAF2           00296         btfss   INTCON,TMR0IE                                   ; Check if Timer1 Interrupt Enabled
00001A D???           00297         bra             CheckRBO_Int
                      00298 
00001C 010?           00299         banksel Timer0_Interrupt                
00001E 2A00           00300         incf    Timer0_Interrupt,1
                      00301 
000020 94F2           00302         bcf             INTCON,TMR0IF
000022 D???           00303         bra             Endisr
MPASM  5.1    FUELGAUGEAPPNOTE_MAIN_VER1.ASM   12-18-2007  18:09:33         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00304 
                      00305 ;--------------------------
                      00306 
000024                00307 CheckRBO_Int
000024 A2F2           00308         BTFSS   INTCON, INT0IF                                  ;INT0 FLAG
000026 EF?? F???      00309         GOTO    CheckINT1_Int                                   ;Check Int1(PortB1) Interrupt   
00002A 92F2           00310         bcf             INTCON, INT0IF                                  ; INT0 FLAG
00002C A8F2           00311         BTFSS   INTCON, INT0IE                                  ; PortB RBO INTERRUPT ENABLE BIT
00002E EF?? F???      00312         GOTO    CheckINT1_Int                                   ;Check Int1(PortB1) Interrupt
                      00313 ;       GOTO    RB0_Interrupt   
                      00314 
000032                00315 RB0_Interrupt
                      00316 ;--------
000032 B081           00317         btfsc   PORTB,0 
000034 EF?? F???      00318         goto    End_RB0_Interrupt                               ;No, its not a true SW event
                      00319 ;--------
000038 EC?? F???      00320         call    Debounce_RB0
00003C 0801           00321         sublw   .1                                                              ;Is Switch Closed?      
00003E A4D8           00322         btfss   STATUS,Z                                        
000040 EF?? F???      00323         goto    End_RB0_Interrupt                               ;No
000044 010?           00324         banksel RB0Int_Found
000046 2A00           00325         incf    RB0Int_Found,1                                  ;YES, interrupt occured
000048 9683           00326         bcf             PORTD,3                                                 ;TURN ON LED13 
                      00327 
00004A                00328 Wait_RBOSW_done
00004A 010F           00329         banksel PORTB
00004C A081           00330         btfss   PORTB,0                         
00004E EF?? F???      00331         GOTO    Wait_RBOSW_done 
000052 8683           00332         bsf             PORTD,3                                                 ;TURN OFF LED13
                      00333 
000054                00334 End_RB0_Interrupt 
000054 92F2           00335         BCF             INTCON, INT0IF          
000056 EF?? F???      00336         GOTO    Endisr
                      00337 
                      00338 ;--------------------------
                      00339 
00005A                00340 CheckINT1_Int
00005A A0F0           00341         BTFSS   INTCON3, INT1IF                                 ; INT1 FLAG, RB1 pin
00005C EF?? F???      00342         GOTO    CheckINT2_Int                                   ;Check Int2(PortB2) Interrupt   
                      00343 
000060 A6F0           00344         BTFSS   INTCON3, INT1IE                                 ; PortB RB1 INTERRUPT ENABLE BIT
000062 EF?? F???      00345         GOTO    CheckINT2_Int                                   ;Check Int1(PortB1) Interrupt
000066                00346 RB1_Interrupt
                      00347 ;--------
000066 B281           00348         btfsc   PORTB,1 
000068 EF?? F???      00349         goto    End_RB1_Interrupt                               ; No, its not a true SW event
                      00350 ;--------
                      00351 
00006C EC?? F???      00352         call    Debounce_RB1
000070 0801           00353         sublw   .1                                                              ;Is Switch Closed?      
000072 A4D8           00354         btfss   STATUS,Z                                        
000074 EF?? F???      00355         goto    End_RB1_Interrupt                               ;No
000078 010?           00356         banksel PORTBInt_Found
MPASM  5.1    FUELGAUGEAPPNOTE_MAIN_VER1.ASM   12-18-2007  18:09:33         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00007A 82??           00357         bsf             PORTBInt_Found,1                                ; YES, RB1 interrupt occured
                      00358 
                      00359         
00007C                00360 Wait_RB1SW_done
00007C 9683           00361         bcf             PORTD,3                                                 ; TURN ON LED13
00007E 010F           00362         banksel PORTB
000080 A281           00363         btfss   PORTB,1                 
000082 EF?? F???      00364         GOTO    Wait_RB1SW_done 
                      00365 
000086                00366 End_RB1_Interrupt 
000086 8683           00367         bsf             PORTD,3                                                 ; TURN OFF LED13 
                      00368 ;       bcf             PORTD,3                                                 ; TURN ON LED13 
000088 010F           00369         banksel INTCON3
00008A 90F0           00370         BCF             INTCON3, INT1IF
00008C 92F0           00371         BCF             INTCON3, INT2IF
00008E EF?? F???      00372         GOTO    Endisr
                      00373 ;-----------------------------
                      00374 
000092                00375 CheckINT2_Int
000092 010F           00376         banksel INTCON3
000094 A2F0           00377         BTFSS   INTCON3, INT2IF                                 ; INT2 FLAG, RB2 pin
000096 EF?? F???      00378         GOTO    CheckRB4567_Int                                 ;(RB4, RB5, RB6, RB7) Interrupt         
00009A A8F0           00379         BTFSS   INTCON3, INT2IE                                 ; PortB RB1 INTERRUPT ENABLE BIT
00009C EF?? F???      00380         GOTO    CheckRB4567_Int                                 ;(RB4, RB5, RB6, RB7) Interrupt         
0000A0                00381 RB2_Interrupt
                      00382 ;--------
0000A0 B481           00383         btfsc   PORTB,2 
0000A2 EF?? F???      00384         goto    End_RB2_Interrupt                               ;No, its not a true SW event
                      00385 ;--------
                      00386 
0000A6 9683           00387         bcf             PORTD,3                                                 ;TURN ON LED13 
                      00388 
0000A8 EC?? F???      00389         call    Debounce_RB2
0000AC 0801           00390         sublw   .1                                                              ;Is Switch Closed?      
0000AE A4D8           00391         btfss   STATUS,Z                                        
0000B0 EF?? F???      00392         goto    End_RB2_Interrupt                               ;No
0000B4 010?           00393         banksel PORTBInt_Found
0000B6 84??           00394         bsf             PORTBInt_Found,2                                ; YES, RB2 interrupt occured
0000B8 9683           00395         bcf             PORTD,3                                                 ; TURN ON LED13 
                      00396 
0000BA                00397 Wait_RB2SW_done
0000BA 010F           00398         banksel PORTB
0000BC A481           00399         btfss   PORTB,2                 
                      00400 
0000BE EF?? F???      00401         GOTO    Wait_RB2SW_done 
0000C2 9683           00402         bcf             PORTD,3                                                 ; TURN OFF LED13
                      00403 
0000C4                00404 End_RB2_Interrupt 
0000C4 010F           00405         banksel INTCON3
0000C6 90F0           00406         BCF             INTCON3, INT1IF
0000C8 92F0           00407         BCF             INTCON3, INT2IF
0000CA EF?? F???      00408         GOTO    Endisr
                      00409 ;-----------------------------
MPASM  5.1    FUELGAUGEAPPNOTE_MAIN_VER1.ASM   12-18-2007  18:09:33         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00410 
0000CE                00411 CheckRB4567_Int                                                 ;(RB4, RB5, RB6, RB7) Interrupt
0000CE A0F2           00412         BTFSS   INTCON, RBIF                            ; Int flag for RB4,5,6,7
0000D0 EF?? F???      00413         GOTO    Endisr                  
0000D4 A6F2           00414         BTFSS   INTCON, RBIE                            ; PortB RB4,5,6,7 INTERRUPT ENABLE BIT
0000D6 EF?? F???      00415         GOTO    Endisr                  
0000DA                00416 CheckRB4567_6_Interrupt
                      00417 ;--------
0000DA BC81           00418         btfsc   PORTB,6 
0000DC EF?? F???      00419         goto    End_RB6_Interrupt                       ; No, its not a true SW event
                      00420 ;--------
0000E0 EC?? F???      00421         call    Debounce_RB6
0000E4 0801           00422         sublw   .1                                                      ;Is Switch Closed?      
0000E6 A4D8           00423         btfss   STATUS,Z                                        
0000E8 EF?? F???      00424         goto    CheckRB4567_7_Interrupt         ;No
0000EC 010?           00425         banksel PORTBInt_Found
0000EE 8C??           00426         bsf             PORTBInt_Found,6                        ; YES, RB6 interrupt occured
0000F0 9683           00427         bcf             PORTD,3                                         ; TURN ON LED13 
                      00428 
                      00429 
0000F2                00430 Wait_till_RB6SW_done
0000F2 010F           00431         banksel PORTB
0000F4 AC81           00432         btfss   PORTB,6                                         ; sw1 = RB6
0000F6 EF?? F???      00433         GOTO    Wait_till_RB6SW_done    
0000FA 8683           00434         bsf             PORTD,3                                         ; TURN OFF LED13
                      00435 
0000FC                00436 End_RB6_Interrupt 
0000FC 90F2           00437         BCF             INTCON, RBIF
0000FE EF?? F???      00438         GOTO    Endisr
                      00439 ;-------------------------------
000102                00440 CheckRB4567_7_Interrupt
                      00441 
                      00442 ;--------
000102 BE81           00443         btfsc   PORTB,7 
000104 EF?? F???      00444         goto    End_RB7_Interrupt                       ; No, its not a true SW event
                      00445 ;--------
                      00446 
000108 EC?? F???      00447         call    Debounce_RB7
00010C 0801           00448         sublw   .1                                                      ;Is Switch Closed?      
00010E A4D8           00449         btfss   STATUS,Z                                        
000110 EF?? F???      00450         goto    CheckRB4567_4_Interrupt         ;No
000114 010?           00451         banksel PORTBInt_Found
000116 8E??           00452         bsf             PORTBInt_Found,7                        ; YES, RB7 interrupt occured
000118 9683           00453         bcf             PORTD,3                                         ; TURN ON LED13 
                      00454 
00011A                00455 Wait_till_RB7SW_done
00011A 010F           00456         banksel PORTB
00011C AE81           00457         btfss   PORTB,7                                         ; Probably not connected
00011E EF?? F???      00458         GOTO    Wait_till_RB7SW_done    
000122 8683           00459         bsf             PORTD,3                                         ; TURN OFF LED13
                      00460 
000124                00461 End_RB7_Interrupt 
000124 90F2           00462         BCF             INTCON, RBIF
MPASM  5.1    FUELGAUGEAPPNOTE_MAIN_VER1.ASM   12-18-2007  18:09:33         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000126 EF?? F???      00463         GOTO    Endisr
                      00464 ;------------------------------
00012A                00465 CheckRB4567_4_Interrupt
                      00466 ;--------
00012A B881           00467         btfsc   PORTB,4 
00012C EF?? F???      00468         goto    End_RB4_Interrupt                       ; No, its not a true SW event
                      00469 ;--------
                      00470 
000130 EC?? F???      00471         call    Debounce_RB4
000134 0801           00472         sublw   .1                                                      ;Is Switch Closed?      
000136 A4D8           00473         btfss   STATUS,Z                                        
000138 EF?? F???      00474         goto    CheckRB4567_5_Interrupt         ;No
00013C 010?           00475         banksel PORTBInt_Found
00013E 88??           00476         bsf             PORTBInt_Found,4                        ; YES, RB4 interrupt occured
000140 9683           00477         bcf             PORTD,3                                         ; TURN ON LED13 
                      00478 
000142                00479 Wait_till_RB4SW_done
000142 010F           00480         banksel PORTB
000144 A881           00481         btfss   PORTB,4                 
000146 EF?? F???      00482         GOTO    Wait_till_RB4SW_done    
00014A 8683           00483         bsf             PORTD,3                                         ; TURN OFF LED13
                      00484 
00014C                00485 End_RB4_Interrupt 
00014C 90F2           00486         BCF             INTCON, RBIF
00014E EF?? F???      00487         GOTO    Endisr
                      00488 ;-----------------------------
000152                00489 CheckRB4567_5_Interrupt
                      00490 ;--------
000152 BA81           00491         btfsc   PORTB,5 
000154 EF?? F???      00492         goto    End_RB5_Interrupt                       ; No, its not a true SW event
                      00493 ;--------
                      00494 
000158 EC?? F???      00495         call    Debounce_RB5
00015C 0801           00496         sublw   .1                                                      ;Is Switch Closed?      
00015E A4D8           00497         btfss   STATUS,Z                                        
000160 EF?? F???      00498         goto    End_RB5_Interrupt                       ;No
000164 010?           00499         banksel PORTBInt_Found
000166 8A??           00500         bsf             PORTBInt_Found,5                        ; YES, RB4 interrupt occured
000168 9683           00501         bcf             PORTD,3                                         ; TURN ON LED13 
                      00502 
00016A                00503 Wait_till_RB5SW_done
00016A 010F           00504         banksel PORTB
00016C AA81           00505         btfss   PORTB,5                 
00016E EF?? F???      00506         GOTO    Wait_till_RB5SW_done    
000172 8683           00507         bsf             PORTD,3                                         ; TURN OFF LED13
                      00508 
000174                00509 End_RB5_Interrupt 
000174 90F2           00510         BCF             INTCON, RBIF
000176 EF?? F???      00511         GOTO    Endisr
                      00512 ;-------------------------------
                      00513                 
00017A                00514 Endisr  
                      00515 
MPASM  5.1    FUELGAUGEAPPNOTE_MAIN_VER1.ASM   12-18-2007  18:09:33         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00017A C??? FFE0      00516         movff   BSR_Temp, BSR
00017E 6E??           00517         movwf   W_TEMP                                  ;Save off current W register contents
000180 C??? FFD8      00518         movff   STATUS_TEMP,STATUS                      ;Restore STATUS
                      00519 
000184 C??? F000      00520         movff   FSR0_TEMP,FSR0                          ;Restore FSR
000188 0011           00521         RETFIE  0x01                                    
                      00522 ;------------------------------------------------------------------------------
                      00523 
                      00524 
                      00525 PROG_main       CODE
                      00526 
000000                00527 stan_table                              ;table for standard code
                      00528 ;-----------------------------------------
000000 2020 4D20 6369 00529         data    "   Microchip    "      ;0
       6F72 6863 7069 
       2020 2020 
000010 7546 6C65 4720 00530         data    "Fuel Gauge Demo "      ;16
       7561 6567 4420 
       6D65 206F 
                      00531 
000020 4220 7461 6574 00532         data    " Battery In-Use "              ;32
       7972 4920 2D6E 
       7355 2065 
000030 3120 3037 6D20 00533         data    " 170 mAH, 3.7V  "              ;48
       4841 202C 2E33 
       5637 2020 
                      00534 
000040 6142 7474 7265 00535         data    "BatteryVolt.<50%"              ;64 
       5679 6C6F 2E74 
       353C 2530 
000050 3153 203A 6F66 00536         data    "S1: for Charging"              ;80 
       2072 6843 7261 
       6967 676E 
                      00537 
000060 5520 646E 7265 00538         data    " Under Charging "              ;96 
       4320 6168 6772 
       6E69 2067 
000070 3153 203A 7453 00539         data    "S1: StopCharging"              ;112
       706F 6843 7261 
       6967 676E 
                      00540 
                      00541 ; For Demo Unit
000080 6944 6373 6E6F 00542         data    "Disconnect JP2 &"              ;128    ---> For Demo Unit with Non-Rechargeable battery
       656E 7463 4A20 
       3250 2620 
000090 6F43 6E6E 4A74 00543         data    "ConntJP1,Push S1"              ;144
       3150 502C 7375 
       2068 3153 
                      00544 ;---------------------------------------
                      00545 
                      00546 ; Training and App Note version with rechargeable Battery
0000A0 6944 6373 6E6F 00547         data    "Disconnect JP1 &"              ;160    ---> For rechargeable battery
       656E 7463 4A20 
MPASM  5.1    FUELGAUGEAPPNOTE_MAIN_VER1.ASM   12-18-2007  18:09:33         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

       3150 2620 
0000B0 6F43 6E6E 4A74 00548         data    "ConntJP2,Push S1"              ;176
       3250 502C 7375 
       2068 3153 
                      00549 ;---------------------------------------
                      00550 ;       data    " Please Wait ..."              ;160            
                      00551 ;       data    " Initializing .."              ;176            
                      00552 ;---------------------------------------
                      00553 ; Demo Unit
                      00554 ;       data    "Connect 1.5V Bat"              ;192      ---> 1.5V, 1500 mAH
                      00555 ;       data    "at TP9. Press S1"              ;208
                      00556 ;---------------------------------------
                      00557 ; for Training Unit:    
0000C0 3253 313A 352E 00558         data    "S2:1.5V  Battery"              ;192      ---> 1.5V, 1500 mAH
       2056 4220 7461 
       6574 7972 
0000D0 3353 4C3A 5069 00559         data    "S3:LiPoly,170mAH"              ;208
       6C6F 2C79 3731 
       6D30 4841 
                      00560 ;---------------------------------------
                      00561  
0000E0 4141 2C41 2E31 00562         data    "AAA,1.5V,1500mAH"              ;224
       5635 312C 3035 
       6D30 4841 
0000F0 7546 6C65 6552 00563         data    "FuelRemanUnknown"              ;240                    ; 240 is the last words  
       616D 556E 6B6E 
       6F6E 6E77 
                      00564 
                      00565 
                      00566 ;------------------------------------------
000100 0000           00567         nop
000102 0000           00568         nop
                      00569 
                      00570 
                      00571 
000104                00572 Start   
000104 0000           00573         nop
000106 0000           00574         nop
000108 0000           00575         nop
00010A 0000           00576         nop
00010C 0000           00577         nop
00010E 0000           00578         nop
000110 0000           00579         nop
000112 0000           00580         nop
000114 0000           00581         nop
000116 0000           00582         nop     
000118 0000           00583         nop
00011A 0000           00584         nop
00011C 0000           00585         nop
00011E 0000           00586         nop
000120 0000           00587         nop
000122 0000           00588         nop
000124 0000           00589         nop
MPASM  5.1    FUELGAUGEAPPNOTE_MAIN_VER1.ASM   12-18-2007  18:09:33         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00590 
                      00591 
000126 EC?? F???      00592         call    FuelGaugeInit
00012A EC?? F???      00593         call    BuzzerStartUp_ON
00012E EC?? F???      00594         call    delay_100ms
000132 EC?? F???      00595         call    delay_100ms
                      00596 
                      00597 
                      00598 
000136 EC?? F???      00599         call    LCDInit
                      00600 
00013A 0000           00601         nop
00013C 0000           00602         nop
00013E 0000           00603         nop
000140 0000           00604         nop
000142 0000           00605         nop
000144 0000           00606         nop
000146 0000           00607         nop
000148 0000           00608         nop
00014A 0000           00609         nop
00014C 0000           00610         nop
00014E 0000           00611         nop
000150 0000           00612         nop
000152 0000           00613         nop
000154 0000           00614         nop
                      00615 
                      00616 ; This program is using only non-rechargeable battery 
000156 010?           00617         banksel SelBettryType   
000158 6A??           00618         clrf    SelBettryType                   ; 0: AAA BAttery, 1: Rechargeable Battery: Li_polymer, 1
                            70 mAH, 4.2V
                      00619 ;-----------------------------------------------------------
                      00620 
                      00621 
                      00622 ; ----Enables Interrupts: TMR0, PortB ----------------------
                      00623 
00015A 6AD0           00624         clrf    RCON                    ; disabled interrupt priority
00015C 0E17           00625         movlw   b'00010111'             ; IPEN = RCON<7> --> Interrupt priority
00015E 6ED0           00626         movwf   RCON
                      00627 
000160 0E05           00628         movlw   b'00000101'             ; All PortB Pull-up Disabled, (RB0, RB1, RB2) --> Interrupt-on-r
                            ising edge              
000162 6EF1           00629         movwf   INTCON2                 ; TMR0--> High Priority, PortB --> High Priority
                      00630 
000164 0EF8           00631         movlw   b'11111000'             ; (RB1, RB2) --> High Priority, Interrupt enabled.              
000166 6EF0           00632         movwf   INTCON3                 ; 
                      00633 
000168 0EF8           00634         movlw   b'11111000'             ; Enable TMR0 and PORTB Interrupt (RB0, RB1, RB2, RB4, RB5, RB6,
                             RB7)
00016A 6EF2           00635         movwf   INTCON                  ; To Enable Timer0 Interrupt
                      00636 
00016C 010?           00637         banksel PORTBInt_Found
00016E 6A??           00638         clrf    PORTBInt_Found
                      00639 
MPASM  5.1    FUELGAUGEAPPNOTE_MAIN_VER1.ASM   12-18-2007  18:09:33         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00640 ;---------- Display Greetings ------------------
                      00641 
000170 0000           00642         nop     
000172 010?           00643         banksel ptr_pos
000174 0E00           00644         movlw   .0                              ;send "Microchip" to LCD
000176 6E??           00645         movwf   ptr_pos
000178 EC?? F???      00646         call    stan_char_1
                      00647 
                      00648 
00017C 010?           00649         banksel ptr_pos
00017E 0E10           00650         movlw   .16                             ;send "Fuel Gauge Demo" to LCD
000180 6E??           00651         movwf   ptr_pos
000182 EC?? F???      00652         call    stan_char_2
                      00653 
000186 EC?? F???      00654         call    Buzzer_OFF      
                      00655 
                      00656 ;-------------------------------------------
00018A EC?? F???      00657         call    delay_1s
00018E EC?? F???      00658         call    delay_1s
000192 EC?? F???      00659         call    delay_1s
                      00660 
000196 010?           00661         banksel RB0Int_Found
000198 6A??           00662         clrf    RB0Int_Found
                      00663 ;       goto    SelectBatteryType       
                      00664 ;;      call    Wait_SW3Interrupt
                      00665 
                      00666 
                      00667 
                      00668 ;-------------------------------------------------------------------------------------
                      00669 ; Note: 
                      00670 ; The following commands need to be enabled for 
                      00671 ; Demo Unit with 1.5 AAA Battery
                      00672 ;;---------------------------------------------
                      00673 ;       banksel ptr_pos
                      00674 ;       movlw   .128                            ;"DisConnect JP2"               ;128
                      00675 ;       movwf   ptr_pos
                      00676 ;       call    stan_char_1
                      00677 ;
                      00678 ;
                      00679 ;       banksel ptr_pos
                      00680 ;       movlw   .144                            ;;"Connect JP1: S1 "            ;144
                      00681 ;       movwf   ptr_pos
                      00682 ;       call    stan_char_2
                      00683 ;
                      00684 ;       call    delay_1s                        ;delay for display
                      00685 ;       call    delay_1s                        ;delay for display
                      00686 ;
                      00687 ;;--------------------------------------------------------
                      00688 
                      00689 ;;-----------------------------------------------------------------
                      00690 ;       banksel PORTBInt_Found
                      00691 ;       clrf    PORTBInt_Found
                      00692 ;
MPASM  5.1    FUELGAUGEAPPNOTE_MAIN_VER1.ASM   12-18-2007  18:09:33         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00693 ;S1forReadyToStart                                      ; Checking SW1 (RB6)
                      00694 ;       banksel PORTBInt_Found
                      00695 ;       btfss   PORTBInt_Found,6                ; SW1 (RB6)                             
                      00696 ;       bra             S1forReadyToStart
                      00697 ;
                      00698 ;       banksel PORTBInt_Found
                      00699 ;       clrf    PORTBInt_Found
                      00700 ;
                      00701 ;
                      00702 ;;-----------------------------
                      00703 ;; Instruction to connect battery
                      00704 ;;-----------------------------
                      00705 ;       banksel ptr_pos
                      00706 ;       movlw   .192                            ;"Connect 1.5V Bat"             ;192      ---> 1.5V, 150
                            0 mAH
                      00707 ;       movwf   ptr_pos
                      00708 ;       call    stan_char_1
                      00709 ;
                      00710 ;       banksel ptr_pos
                      00711 ;       movlw   .208                            ;"at TP9. Press S1"             ;208
                      00712 ;       movwf   ptr_pos
                      00713 ;       call    stan_char_2
                      00714 ;;-----------------------------
                      00715 ;
                      00716 ;       banksel PORTBInt_Found
                      00717 ;       clrf    RB0Int_Found
                      00718 ;       clrf    PORTBInt_Found
                      00719 ;
                      00720 ;S1forBatteryConnect                                    ; Checking SW1 (RB6)
                      00721 ;       banksel PORTBInt_Found
                      00722 ;       btfss   PORTBInt_Found,6                ; SW1 (RB6)                             
                      00723 ;       bra             S1forBatteryConnect
                      00724 ;
                      00725 ;       banksel PORTBInt_Found
                      00726 ;       clrf    PORTBInt_Found
                      00727 ;;      goto    Bat_AAA1_5V
                      00728 ;
                      00729 ;;; ---------------------- Above are for Demo Unit.--------------------------------- 
                      00730 ;;; Enable the above for Demo Unit -------------------------------------------------
                      00731 ;
                      00732 
                      00733 ;-------------------------------------------------
                      00734 
                      00735 ;-------------------- Testing From Here ------------- lee
                      00736 
                      00737 ; To rearrange the Jumper SW:
00019A 010?           00738         banksel ptr_pos
00019C 0E80           00739         movlw   .128                            ;"DisConnect JP2"               ;128
00019E 6E??           00740         movwf   ptr_pos
0001A0 EC?? F???      00741         call    stan_char_1
                      00742 
                      00743 
0001A4 010?           00744         banksel ptr_pos
MPASM  5.1    FUELGAUGEAPPNOTE_MAIN_VER1.ASM   12-18-2007  18:09:33         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0001A6 0E90           00745         movlw   .144                            ;;"Connect JP1: S1 "            ;144
0001A8 6E??           00746         movwf   ptr_pos
0001AA EC?? F???      00747         call    stan_char_2
                      00748 
0001AE EC?? F???      00749         call    delay_1s                        ;delay for display
0001B2 EC?? F???      00750         call    delay_1s                        ;delay for display
                      00751 
0001B6 010?           00752         banksel PORTBInt_Found
0001B8 6A??           00753         clrf    PORTBInt_Found
                      00754 
                      00755 
0001BA                00756 S1forReadyToStart                                       ; Checking SW1 (RB6)
0001BA 010?           00757         banksel PORTBInt_Found
0001BC AC??           00758         btfss   PORTBInt_Found,6                ; SW1 (RB6)                             
0001BE D???           00759         bra             S1forReadyToStart
                      00760 
0001C0 010?           00761         banksel PORTBInt_Found
0001C2 6A??           00762         clrf    RB0Int_Found
0001C4 6A??           00763         clrf    PORTBInt_Found
                      00764 
                      00765 
                      00766 ;--------------------------------------
0001C6 EC?? F???      00767         call    Disp_ConntBattery                       ; ---> Connect Battery: --> 16 Characters
0001CA EC?? F???      00768         call    Disp_AtTP9_PressS1              ; ---> +V toTP9,Push S1 --> 16 Characters
                      00769 ;--------------------------------------
                      00770 
0001CE 010?           00771         banksel PORTBInt_Found
0001D0 6A??           00772         clrf    PORTBInt_Found
                      00773 
0001D2                00774 S1forBatteryConnect                                     ; Checking SW1 (RB6)
0001D2 010?           00775         banksel PORTBInt_Found
0001D4 AC??           00776         btfss   PORTBInt_Found,6                ; SW1 (RB6)                             
0001D6 D???           00777         bra             S1forBatteryConnect
                      00778 
0001D8 010?           00779         banksel PORTBInt_Found
0001DA 6A??           00780         clrf    PORTBInt_Found
                      00781 
                      00782 
                      00783 
                      00784 
                      00785 ;------------------------------------------------
                      00786 ; Disabled Instructions:
                      00787 ; The following are for Training unit, and disabled in Demo Unit
                      00788 ; The commands select Rechargeable or Non-Rechargeable Battery
                      00789 ;------------------------------------------------
0001DC                00790 SelectBatteryType
                      00791 
                      00792 ;-----------------------------
0001DC 010?           00793         banksel ptr_pos                         ; Is it AAA Battery ?
0001DE 0EC0           00794         movlw   .192                            ;"SW3: AAA Battery"             ;192 ---> 1.5V, 1500 mAH
0001E0 6E??           00795         movwf   ptr_pos
0001E2 EC?? F???      00796         call    stan_char_1
                      00797 
MPASM  5.1    FUELGAUGEAPPNOTE_MAIN_VER1.ASM   12-18-2007  18:09:33         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0001E6 010?           00798         banksel ptr_pos                         ; Is it rechargeable 42V Battery ?
0001E8 0ED0           00799         movlw   .208                            ; "SW2: 170mAH,4.2V"    ;208 
0001EA 6E??           00800         movwf   ptr_pos
0001EC EC?? F???      00801         call    stan_char_2
                      00802 ;-----------------------------
                      00803 
                      00804 
0001F0 010?           00805         banksel PORTBInt_Found
0001F2 6A??           00806         clrf    PORTBInt_Found
                      00807 
                      00808 
0001F4 010?           00809         banksel RB0Int_Found
0001F6 6A??           00810         clrf    RB0Int_Found
                      00811 
                      00812 
                      00813 
0001F8                00814 CheckRB0orRB1                                           ; RB0 ---> SW3 ---> Recharegable: 
                      00815                                                                         ; Display (V,I,RemainFuel, Used 
                            Fuel), 
                      00816                                                                         ; and Charging battery if less t
                            han 50% and Beeps for charging.   
                      00817                                                                         ;  RB1 ---> SW2 ----> AAA Batter
                            y --> Display (V,I, and Used Fuel).  
0001F8 010?           00818         banksel RB0Int_Found
0001FA 0EFF           00819         movlw   b'11111111'
0001FC 16??           00820         andwf   RB0Int_Found
0001FE B4D8           00821         btfsc   STATUS,Z                                ; Z -->1: Register is zero, Z -->0: Register is 
                            not zero        
000200 EF?? F???      00822         goto    CheckifSW2Selected              
                      00823 
000204 010?           00824         banksel SelBettryType
000206 80??           00825         bsf             SelBettryType,0                 ; 1: Rechargeable Battery: Li_polymer, 170 mAH, 
                            4.2V
                      00826                                                                         ; 0: AAA BAttery
000208 EF?? F???      00827         goto    Bat_LiPoly170mAH
                      00828 
00020C 010?           00829         banksel RB0Int_Found
00020E 6A??           00830         clrf    RB0Int_Found
                      00831 
000210                00832 CheckifSW2Selected                                      ; Checking SW2 (RB1)
000210 010?           00833         banksel PORTBInt_Found
000212 A2??           00834         btfss   PORTBInt_Found,1                ; Z -->1: Register is zero, Z -->0: Register is not zero
                                    
000214 EF?? F???      00835         goto    CheckRB0orRB1
                      00836 
000218 010?           00837         banksel SelBettryType   
00021A 6A??           00838         clrf    SelBettryType                   ; 1: Rechargeable Battery: Li_polymer, 170 mAH, 4.2V
                      00839                                                                         ; 0: AAA BAttery
00021C 010?           00840         banksel RB0Int_Found
00021E 6A??           00841         clrf    RB0Int_Found
                      00842 
000220 EF?? F???      00843         goto    Bat_AAA1_5V
                      00844 ;------ Above are for Training unit: Select Rechargeable or Non-Rechargeable Battery --------------
MPASM  5.1    FUELGAUGEAPPNOTE_MAIN_VER1.ASM   12-18-2007  18:09:33         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00845 
                      00846 
                      00847 
                      00848 
                      00849 
                      00850 
000224                00851 Bat_AAA1_5V
                      00852 ;------"Display Battery Type: for non-Rechargeable Battery" -------
000224 0000           00853         nop     
000226 010?           00854         banksel ptr_pos
000228 0E20           00855         movlw   .32                             ;" Battery In-Use "             ;32
00022A 6E??           00856         movwf   ptr_pos
00022C EC?? F???      00857         call    stan_char_1
000230 0000           00858         nop
000232 0000           00859         nop
                      00860 
000234 010?           00861         banksel ptr_pos
000236 0EE0           00862         movlw   .224                            ;       data    "AAA,1.5V,1500mAH"              ;224
000238 6E??           00863         movwf   ptr_pos
00023A EC?? F???      00864         call    stan_char_2
                      00865 
                      00866 ;---------------------
00023E EC?? F???      00867         call    delay_1s
000242 EC?? F???      00868         call    delay_1s
000246 EC?? F???      00869         call    delay_1s
                      00870 
00024A EF?? F???      00871         goto    Prepare_ToBegin 
                      00872 ;       goto    Check_SW3Int
                      00873         
00024E                00874 Bat_LiPoly170mAH
00024E                00875 Battery_Inused                  ; Display battery: P/N: PL-02550 = 127 mAH, 3.7V in load, 4.2 V with no 
                            load    
                      00876 ;--------"Display Battery Type: for Rechargeable Battery" -------
00024E 0000           00877         nop     
000250 010?           00878         banksel ptr_pos
000252 0E20           00879         movlw   .32                             ;" Battery In-Use "             ;32
000254 6E??           00880         movwf   ptr_pos
000256 EC?? F???      00881         call    stan_char_1
00025A 0000           00882         nop
00025C 0000           00883         nop
                      00884 
00025E 010?           00885         banksel ptr_pos
000260 0E30           00886         movlw   .48                             ;" 170 mAH, 3.7V  "             ;48
000262 6E??           00887         movwf   ptr_pos
000264 EC?? F???      00888         call    stan_char_2
                      00889 
                      00890 ;---------------------
000268 EC?? F???      00891         call    delay_1s
00026C EC?? F???      00892         call    delay_1s
000270 EC?? F???      00893         call    delay_1s
                      00894 ;---------------------
000274 010?           00895         banksel RB0Int_Found
000276 6A??           00896         clrf    RB0Int_Found
MPASM  5.1    FUELGAUGEAPPNOTE_MAIN_VER1.ASM   12-18-2007  18:09:33         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000278 EF?? F???      00897         goto    Prepare_ToBegin 
                      00898 
                      00899 ;------ "Greeting until MCU prepare data to display" --------
00027C                00900 Prepare_ToBegin
                      00901 ;---------------------------
                      00902 ;       nop     
                      00903 ;       banksel ptr_pos
                      00904 ;       movlw   .160                            ;"Please Wait ...."             ;160
                      00905 ;       movwf   ptr_pos
                      00906 ;       call    stan_char_1
                      00907 ;
                      00908 ;       banksel ptr_pos
                      00909 ;       movlw   .176                            ;" Initialization "             ;176
                      00910 ;       movwf   ptr_pos
                      00911 ;       call    stan_char_2
                      00912 ;---------------------------
                      00913 
00027C EC?? F???      00914         call    Disp_PlseWaitAtL1
000280 EC?? F???      00915         call    Disp_InitAtL2
                      00916 
                      00917 
                      00918 
                      00919         
000284 EF?? F???      00920         goto    Start_VoltMeasurement   
                      00921 
                      00922 ;-----------------------------------------------------------
                      00923 
                      00924 
                      00925 
                      00926 
000288                00927 BatterySelted_170mAh
                      00928 ;-----------------------------------------------------------
                      00929 
                      00930 ;  I_Init_mAH ---> 3 bytes
                      00931 ;  example: 1000 mAH = 3E8 mAH in hex 
                      00932 ;                    170mAH = AA hex mAH        
                      00933 ;                         10 mAH = 0A hex mAH  --> tested
                      00934 ;                        100 mAH = 64 hex mAH
                      00935 ;----------------------------------------
                      00936 ; for 170mAH Battery: 170mAH = AA hex mAH       
                      00937 
000288 010?           00938         banksel I_Init1_mAH
00028A 0EAA           00939         movlw   0xAA            ; 170 mAH 
00028C 6E??           00940         movwf   I_Init1_mAH             ; LSB
00028E 0E00           00941         movlw   0x00
000290 6E??           00942         movwf   I_Init2_mAH
000292 0E00           00943         movlw   0x00
000294 6E??           00944         movwf   I_Init3_mAH             ; MSB
                      00945 
                      00946 ; Store initial currents in 6 bytes
                      00947 ; Unit = mAseconds
                      00948 ; example: I_init_mAH = 1000 mAH = 1000mA x60x60 =  3600000mA in dec =  36EE80 hex in mA
                      00949 ;                           170mAH = 170 x 60x60 = 612000mA in dec = 956A0 hex in mA    
MPASM  5.1    FUELGAUGEAPPNOTE_MAIN_VER1.ASM   12-18-2007  18:09:33         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00950 ;
                      00951 
                      00952 ; Initial Value of T_CurrentRemain = I_Init/10 = 
                      00953 ; test with 2* Current_Used =2*( 1365322 uAs) = 29AA94 hex
                      00954 
                      00955 ; Now let start with Battery in uAseconds with:
                      00956 ;        10 mAH = 10000*3600 uASec = 3600000 dec = 2255100 hex
                      00957 ;        1000 mAH = 1000*1000*3600 uASeconds =  D693A400 in hex 
                      00958 ;        170mAH = 170*1000*3600 = 612000000 uAs in dec = 247A6100 hex in uAs
                      00959 
                      00960 ; for 170 mAH battery 
                      00961 ;       banksel I_remain_uAS
                      00962 ;       movlw   0x00
                      00963 ;       movwf   I_remain_uAS            ; LSB
                      00964 ;       movlw   0x61
                      00965 ;       movwf   I_remain_uAS+1
                      00966 ;       movlw   0x7A
                      00967 ;       movwf   I_remain_uAS+2
                      00968 ;       movlw   0x24
                      00969 ;       movwf   I_remain_uAS+3
                      00970 ;       movlw   0x00
                      00971 ;       movwf   I_remain_uAS+4
                      00972 ;       movlw   0x00
                      00973 ;       movwf   I_remain_uAS+5          ; MSB
                      00974 ;----------------------------------------------------------------
                      00975 ; In uAS unit
000296 010?           00976         banksel I_Init_uAS
000298 0E00           00977         movlw   0x00
00029A 6E??           00978         movwf   I_Init_uAS                      ; LSB
00029C 0E61           00979         movlw   0x61
00029E 6E??           00980         movwf   I_Init_uAS+1
0002A0 0E7A           00981         movlw   0x7A
0002A2 6E??           00982         movwf   I_Init_uAS+2
0002A4 0E24           00983         movlw   0x24
0002A6 6E??           00984         movwf   I_Init_uAS+3
0002A8 0E00           00985         movlw   0x00
0002AA 6E??           00986         movwf   I_Init_uAS+4
0002AC 0E00           00987         movlw   0x00
0002AE 6E??           00988         movwf   I_Init_uAS+5            ; MSB
                      00989 ;---------------------------------------------------------------
                      00990 
                      00991 ;----------- To Display User Slected Battery Type --------------
                      00992 ;       banksel countT6
                      00993 ;       clrf    countT6 
                      00994 ;       clrf    countT6                         ; MSB for gain =2,4,8
                      00995 ;       clrf    countT5                         ; MSB for gain =1
                      00996 ;       clrf    countT4
                      00997 ;
                      00998 ;       banksel I_Init3_mAH
                      00999 ;       movff   I_Init3_mAH,countT3             
                      01000 ;       movff   I_Init2_mAH,countT2
                      01001 ;       movff   I_Init1_mAH,countT1     ; LSB
                      01002 ;
MPASM  5.1    FUELGAUGEAPPNOTE_MAIN_VER1.ASM   12-18-2007  18:09:33         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01003 ;       call    Bin48_bcd_volts
                      01004 ;       call    Disp_BatteryType_170mAH
0002B0 EF?? F???      01005         goto    Start_VoltMeasurement           
                      01006 ;--------------------------------------------------------------
                      01007 
0002B4                01008 BatterySelted_1000mAh
                      01009 ;--------------------------------------------------------------
                      01010 
                      01011 ;  I_Init_mAH ---> 3 bytes
                      01012 ;  example: 1000 mAH = 3E8 mAH in hex 
                      01013 ;                    170mAH = AA hex mAH        
                      01014 ;                         10 mAH = 0A hex mAH  --> tested
                      01015 ;                        100 mAH = 64 hex mAH
                      01016 ;----------------------------------------
                      01017 ; for 1000mAH Battery
                      01018 ; 1000mAH = 3E8 mAH in hex
                      01019 
0002B4 010?           01020         banksel I_Init1_mAH
0002B6 0EE8           01021         movlw   0xE8            ; 1000 mAH 
0002B8 6E??           01022         movwf   I_Init1_mAH             ; LSB
0002BA 0E03           01023         movlw   0x03
0002BC 6E??           01024         movwf   I_Init2_mAH
0002BE 0E00           01025         movlw   0x00
0002C0 6E??           01026         movwf   I_Init3_mAH             ; MSB
                      01027 
                      01028 ; Store initial currents in 6 bytes
                      01029 ; Unit = mAseconds
                      01030 ; example: I_init_mAH = 1000 mAH = 1000mA x60x60 =  3600000mA in dec =  36EE80 hex in mA
                      01031 ;                           170mAH = 170 x 60x60 = 612000mA in dec = 956A0 hex in mA    
                      01032 ;
                      01033 
                      01034 ; Initial Value of T_CurrentRemain = I_Init_mAH/10 = 
                      01035 ; test with 2* Current_Used =2*( 1365322 uAs) = 29AA94 hex
                      01036 
                      01037 ; Now let start with Battery in uAseconds with:
                      01038 ;        10 mAH = 10000*3600 uASec = 3600000 dec = 2255100 hex
                      01039 ;        1000 mAH = 1000*1000*3600 uASeconds =  D693A400 in hex 
                      01040 ;        170mAH = 170*1000*3600 = 612000000 uAs in dec = 247A6100 hex in uAs
                      01041 
                      01042 ; for 170 mAH battery 
                      01043 ;       banksel I_remain_uAS
                      01044 ;       movlw   0x00
                      01045 ;       movwf   I_remain_uAS            ; LSB
                      01046 ;       movlw   0x61
                      01047 ;       movwf   I_remain_uAS+1
                      01048 ;       movlw   0x7A
                      01049 ;       movwf   I_remain_uAS+2
                      01050 ;       movlw   0x24
                      01051 ;       movwf   I_remain_uAS+3
                      01052 ;       movlw   0x00
                      01053 ;       movwf   I_remain_uAS+4
                      01054 ;       movlw   0x00
                      01055 ;       movwf   I_remain_uAS+5          ; MSB
MPASM  5.1    FUELGAUGEAPPNOTE_MAIN_VER1.ASM   12-18-2007  18:09:33         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01056 ;
                      01057 ;--- for 1000 mA battery in uAs -------------
0002C2 010?           01058         banksel I_Init_uAS
0002C4 0E00           01059         movlw   0x00
0002C6 6E??           01060         movwf   I_Init_uAS              ; LSB
0002C8 0EA4           01061         movlw   0xA4
0002CA 6E??           01062         movwf   I_Init_uAS+1
0002CC 0E93           01063         movlw   0x93
0002CE 6E??           01064         movwf   I_Init_uAS+2
0002D0 0ED6           01065         movlw   0xD6
0002D2 6E??           01066         movwf   I_Init_uAS+3
0002D4 0E00           01067         movlw   0x00
0002D6 6E??           01068         movwf   I_Init_uAS+4
0002D8 0E00           01069         movlw   0x00
0002DA 6E??           01070         movwf   I_Init_uAS+5            ; MSB
                      01071 
0002DC EF?? F???      01072         goto    Start_VoltMeasurement           
                      01073 
                      01074 
                      01075 ;--------------------------------------------------------------
0002E0 010F           01076         banksel PORTC
0002E2 8C94           01077         bsf             TRISC,6                 ; tristate the PROG pin to input (high impedance) during
                             charging 
                      01078                                                         ; ---> Important to keep the PROG pin in high im
                            pedance
                      01079                                                         ; during charing mode. If it is low, it draws a 
                            lot of current and the STAUS pin will show
                      01080                                                         ; unpredictable value !
                      01081 ;---------------------------------------------------------------
                      01082 
                      01083 
0002E4                01084 Start_VoltMeasurement
                      01085 
0002E4 8683           01086         bsf             PORTD,3                                 ; TURN OFF LED13 
0002E6 010?           01087         banksel RB0Int_Found
0002E8 6A??           01088         clrf    RB0Int_Found    
                      01089 
                      01090 
0002EA                01091 test_buzzer1
0002EA EC?? F???      01092         call    Buzzer_OFF
                      01093 
                      01094 
0002EE 0000           01095         nop
0002F0 0000           01096         nop
                      01097 
0002F2 010?           01098         banksel Timer0_Interrupt
0002F4 6A??           01099         clrf    Timer0_Interrupt
                      01100 
0002F6 010?           01101         banksel Disp_FuelUsed
0002F8 6A??           01102         clrf    Disp_FuelUsed
0002FA 6A??           01103         clrf    Disp_RemainFuel
                      01104 
0002FC 010?           01105         banksel RB0Int_Found
MPASM  5.1    FUELGAUGEAPPNOTE_MAIN_VER1.ASM   12-18-2007  18:09:33         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0002FE 6A??           01106         clrf    RB0Int_Found    
                      01107 
000300 010?           01108         banksel FirstPowered
000302 6A??           01109         clrf    FirstPowered
                      01110 ;----------------------------------------------------
000304                01111 Volts_Measurement
                      01112 ; Measure Volts and Display the Results
                      01113 ;-----------------------------------
                      01114 
                      01115 ;Write configuration register
000304 010?           01116         banksel Config_Data
                      01117 ;       movlw   b'10011100'             ; Continuous mode, 18 bit mode, gain = 1
                      01118 ;       movlw   b'10001100'             ; change later to 18 bit, one-shot, gain=1
                      01119 ;       movlw   b'10001111'             ; change later to 18 bit, one-shot, gain=8
                      01120 ;       movlw   b'10011100'             ; Continuous mode, 18 bit mode, gain = 1
000306 0E8C           01121         movlw   b'10001100'             ; change later to 18 bit, one-shot, gain=1
000308 6E??           01122         movwf   Config_Data             ; put this code before calling ADC_Write_Config
                      01123 
                      01124 ; ---- Gain Select -------------------------
00030A 6A??           01125         clrf    Gain_Selected
                      01126 ;       bsf             Gain_Selected,0                 ; Gain=2
                      01127 ;       bsf             Gain_Selected,1                 ; Gain=4
                      01128 ;       bsf             Gain_Selected,2                 ; Gain=8
                      01129 ;------------------------------------------
                      01130 
                      01131 
00030C 010?           01132         banksel Gain_Selected
00030E B0??           01133         btfsc   Gain_Selected,0
000310 D???           01134         bra             Set_Gain_2
000312 B2??           01135         btfsc   Gain_Selected,1
000314 D???           01136         bra             Set_Gain_4
000316 B4??           01137         btfsc   Gain_Selected,2
000318 D???           01138         bra             Set_Gain_8
                      01139 
00031A                01140 Set_Gain_1      
00031A 010?           01141         banksel Config_Data     
00031C 90??           01142         bcf     Config_Data,0
00031E 92??           01143         bcf     Config_Data,1
000320 D???           01144         bra     Now_WriteConf
                      01145 
000322                01146 Set_Gain_2      
000322 010?           01147         banksel Config_Data     
000324 80??           01148         bsf     Config_Data,0
000326 92??           01149         bcf     Config_Data,1
000328 D???           01150         bra     Now_WriteConf
00032A                01151 Set_Gain_4      
00032A 010?           01152         banksel Config_Data     
00032C 90??           01153         bcf     Config_Data,0
00032E 82??           01154         bsf     Config_Data,1
000330 D???           01155         bra     Now_WriteConf
000332                01156 Set_Gain_8
000332 010?           01157         banksel Config_Data     
000334 80??           01158         bsf     Config_Data,0
MPASM  5.1    FUELGAUGEAPPNOTE_MAIN_VER1.ASM   12-18-2007  18:09:33         PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000336 82??           01159         bsf     Config_Data,1
000338 D???           01160         bra     Now_WriteConf
                      01161 
                      01162 
00033A                01163 Now_WriteConf
                      01164 ; turn on sync pulse
00033A 8C83           01165         bsf             Sync_LED11
00033C 010?           01166         banksel IsitForU5_Volt
00033E 80??           01167         bsf             IsitForU5_Volt,0                ; 1: for battery voltage, 0: for current measure
                            ment
000340 EC?? F???      01168         call    ADC_Write_Config                ; put in initialization loop
000344 9C83           01169         bcf             Sync_LED11
                      01170 
                      01171 
000346                01172 Reading_ADC_Value
000346 EC?? F???      01173         call    ADC_Read_400KHz                         ; U5: for voltage
00034A 9C83           01174         bcf             Sync_LED11
                      01175 ;       ADC Values ---> ADC_Value1 (MSB) + ADC_Value2 + ADC_Value3 (LSB)  
                      01176 
00034C 010?           01177         banksel ADC_Value1
00034E C??? F???      01178         movff   ADC_Value1,     ADC_Value1_temp         ; copy these values to use in "Chk_BatIfLowertha
                            n1V" and "Chk_BatIfLowerthan2V"
000352 C??? F???      01179         movff   ADC_Value2,     ADC_Value2_temp
000356 C??? F???      01180         movff   ADC_Value3,     ADC_Value3_temp
                      01181         
00035A EC?? F???      01182         call    Convert_ADCvalues
00035E EC?? F???      01183         call    Display_Voltage
                      01184 
000362 EC?? F???      01185         call    Current_Measurement
000366 EC?? F???      01186         call    Display_Current
                      01187 
00036A EC?? F???      01188         call    delay_1s
00036E EC?? F???      01189         call    delay_1s
                      01190 
                      01191 
                      01192 ; Check Battery Type Here:
                      01193 
000372 010?           01194         banksel SelBettryType
000374 A0??           01195         btfss   SelBettryType,0                 ; 1: Rechargeable Battery: Li_polymer, 170 mAH, 4.2V
                      01196                                                                         ; 0: AAA BAttery
000376 D???           01197         bra             DoforAAABattery 
000378 D???           01198         bra             DoforLiPolymer
                      01199 
00037A                01200 DoforAAABattery
                      01201 ;/*********************************************************************/
                      01202 ;/** (1) Display only: (V, I, Fuel Used)
                      01203 ;/** (2) Check if Battery Voltage < 0.75V (or 50%) 
                      01204 ;/** (3) Make Buzz on if the Battery Volt < 50%
                      01205 ;/** (4) Repeats (1) - (3)
                      01206 ;/********************************************************************/
00037A 010?           01207         banksel LowerThan0_75V
00037C 6A??           01208         clrf    LowerThan0_75V
                      01209 
MPASM  5.1    FUELGAUGEAPPNOTE_MAIN_VER1.ASM   12-18-2007  18:09:33         PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00037E EC?? F???      01210         call    Chk_BatIfLowerthan0_75V 
                      01211 
000382 010?           01212         banksel LowerThan0_75V
000384 A0??           01213         btfss   LowerThan0_75V, 0               ;       LowerThan0_75V(1) --> Battery volt less than 0.7
                            5V,     
                      01214                                                                         ;   LowerThan0_75V(0) --> Batter
                            y volt higher than 0.75V, 
000386 EF?? F???      01215         goto    Continue_NormalMeas
                      01216 ;       call    Disp_BatLessThan2V
                      01217 
00038A EC?? F???      01218         call    Disp_BatLowerThan0_75V
                      01219 
                      01220 ;----------     
00038E EC?? F???      01221         call    Buzzer1p1To1p5KHz_ON
000392 EC?? F???      01222         call    Buzzer_OFF
                      01223 ;---------
000396 EF?? F???      01224         goto    Continue_NormalMeas     
                      01225 
00039A                01226 DoforLiPolymer
                      01227 
                      01228 ;------------------------------------------------------------
                      01229 ; This routine is for 170 mAh, 3.7V, Rechargeable Battery 
                      01230 ;------------------------------------------------------------
                      01231 ;------- Check if it is  in charging mode  -----------------
00039A 010?           01232         banksel ChargingBat
00039C B0??           01233         btfsc   ChargingBat,0
00039E EF?? F???      01234         goto    ItsUnderChaging
0003A2 EF?? F???      01235         goto    NotInChargingMode
                      01236 
0003A6                01237 ItsUnderChaging
0003A6 EC?? F???      01238         call    ChargingBattery                         ; Its in charging mode
                      01239 
0003AA EF?? F???      01240         goto    Volts_Measurement
                      01241 
                      01242 
0003AE                01243 NotInChargingMode
                      01244 ; Check if battery is less than 2V before continue measurement
                      01245 
0003AE 010?           01246         banksel FirstPowered
0003B0 A0??           01247         btfss   FirstPowered,0
0003B2 EF?? F???      01248         goto    ChkIfChargedBat
                      01249 ;       bra             CheckIfNotConnected
0003B6 EF?? F???      01250         goto    CheckIfLessThan2V
                      01251 
0003BA                01252 ChkIfChargedBat
0003BA 010?           01253         banksel FirstPowered
0003BC 80??           01254         bsf             FirstPowered,0          ; come here only once after reset 
                      01255 
0003BE EC?? F???      01256         call    IsBatHigherThan4V       
                      01257 
0003C2 010?           01258         banksel HigherThan4V
0003C4 B0??           01259         btfsc   HigherThan4V,0                  ;1: higher than 4V, 0: less than 4V
0003C6 EF?? F???      01260         goto    ItsFullyChargedBat
MPASM  5.1    FUELGAUGEAPPNOTE_MAIN_VER1.ASM   12-18-2007  18:09:33         PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01261 ; Not fully charged battery
0003CA 010?           01262         banksel NotChargedBat
0003CC 80??           01263         bsf             NotChargedBat, 0                ; 0--> not fully charged battery
0003CE 010?           01264         banksel HigherThan4V
0003D0 6A??           01265         clrf    HigherThan4V    
                      01266 
0003D2 EF?? F???      01267         goto    CheckIfLessThan2V               
                      01268 
0003D6                01269 ItsFullyChargedBat
0003D6 010?           01270         banksel NotChargedBat
0003D8 6A??           01271         clrf    NotChargedBat
                      01272 
0003DA 010?           01273         banksel HigherThan4V
0003DC 6A??           01274         clrf    HigherThan4V    
                      01275 
                      01276         
                      01277 ;------------------------------------------------------
0003DE                01278 CheckIfLessThan2V
                      01279 ;-----------------------------
                      01280 ; Check Battery Volts and do the following actions:
                      01281 ; (a) Go to normal measurement if greater than 2V
                      01282 ; (b) Choice if User want to recharge ---> not selected --> go to normal measuremnt, if selected ---> do
                             the charging
                      01283 ;----------------------------- 
0003DE 010?           01284         banksel LessThan1or2V
0003E0 6A??           01285         clrf    LessThan1or2V
                      01286 
0003E2 EC?? F???      01287         call    Chk_BatIfLowerthan2V    
                      01288 
0003E6 010?           01289         banksel LessThan1or2V
0003E8 A2??           01290         btfss   LessThan1or2V, 1                ;       LessThan1or2V(0) --> Battery volt less than 1V, 
                                    
                      01291                                                                         ;   LessThan1or2V(1) --> Battery
                             volt less than 2V, 
0003EA EF?? F???      01292         goto    Continue_NormalMeas
                      01293 
0003EE EC?? F???      01294         call    Disp_BatLessThan2V
0003F2 EC?? F???      01295         call    ChekIfWantRecharge
                      01296 
0003F6 0801           01297         sublw   .1                                              ;Want to recharge battery ?     
0003F8 A4D8           01298         btfss   STATUS,Z                                        
0003FA EF?? F???      01299         goto    Continue_NormalMeas     ;No, Don't want to recharge battery ...
0003FE EC?? F???      01300         call    RechargeBattery                 ;Yes, Want to recharge
000402 EF?? F???      01301         goto    Continue_NormalMeas
                      01302                 
                      01303 ;------------------------------------------------------
                      01304 
000406                01305 skip_simulation_U5              ; Voltage
000406                01306 Continue_NormalMeas
                      01307 ;       goto    Comput_BatteryFuel
                      01308 
                      01309 
                      01310 ;---- Battey Fuel Computation ----------
MPASM  5.1    FUELGAUGEAPPNOTE_MAIN_VER1.ASM   12-18-2007  18:09:33         PAGE 29


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000406                01311 Comput_BatteryFuel
                      01312 ;----- Now multiply the measured current with time ----
                      01313 ; Algorithm:
                      01314 ; Actual Current coming out from the battery = (Current Measured in uA)* (Time_Interval_in second) betwe
                            en current and previous measuements
                      01315 ; Time_Inerval in second is recorded using Timer0 interrupt for every second based on 8 MHz internal osc
                            illator  
                      01316 ; The Time_Interval is recorded in "Timer0_Interrupt". 
                      01317 
                      01318 
000406                01319 CurrentMult_Timer0Int                           ; Current draw = Measured current * No. of Timer0 Interr
                            upt
                      01320 
                      01321 ; Preparing to calculate the current draws during the last time interval (No. of Timer0 Interrupt)
000406 010?           01322         banksel Dividend1                       ; ---> Current in uA
000408 C??? F???      01323         movff   Dividend1,AddByteA      ; LSB 
00040C C??? F???      01324         movff   Dividend2,AddByteA+1
000410 C??? F???      01325         movff   Dividend3,AddByteA+2
000414 C??? F???      01326         movff   Dividend4,AddByteA+3
000418 C??? F???      01327         movff   Dividend5,AddByteA+4    ; MSB for gain =1
00041C C??? F???      01328         movff   Dividend6,AddByteA+5    ; MSB for gain =2,4,8
                      01329 
000420 010?           01330         banksel Dividend1                       ; ---> Current in uA
000422 C??? F???      01331         movff   Dividend1,AddByteB      ; LSB 
000426 C??? F???      01332         movff   Dividend2,AddByteB+1
00042A C??? F???      01333         movff   Dividend3,AddByteB+2
00042E C??? F???      01334         movff   Dividend4,AddByteB+3
000432 C??? F???      01335         movff   Dividend5,AddByteB+4    ; MSB for gain =1
000436 C??? F???      01336         movff   Dividend6,AddByteB+5    ; MSB for gain =2,4,8
                      01337         
                      01338 ;--- wait for Timer0 interrupt at least for once --------
00043A                01339 Wait_ForTMR0Int
00043A 0EFF           01340         movlw   0xff            
00043C 010?           01341         banksel Timer0_Interrupt
00043E 16??           01342         andwf   Timer0_Interrupt                ; make it sure the Timer0_Interrupt is not zero
000440 B4D8           01343         btfsc   STATUS,Z                                ; Z -->1: Register is zero, Z -->0: Register is 
                            not zero
000442 EF?? F???      01344         goto    Wait_ForTMR0Int
                      01345 
000446 010?           01346         banksel Carry_AddTotal
000448 6A??           01347         clrf    Carry_AddTotal
                      01348 
                      01349 
00044A                01350 Add_IforNtimes
                      01351 ; current just measured * No of seconds (using Timer0 interval: Interrupt occurs every second):
                      01352 ; Add the measured current to AddByteB N-1 times, N = Number of timer0 interrupt. 
                      01353 ; Timer0 Interrupt event --> every 1 second.  
                      01354 
00044A 010?           01355         banksel Timer0_Interrupt
00044C 2E00           01356         decfsz  Timer0_Interrupt,1
                      01357 ;       decfsnz Timer0_Interrupt,1              ; ---> causes a compiler error
00044E EF?? F???      01358         goto    Keep_AddsCurrents
000452 EF?? F???      01359         goto    Done_CurrentXInt
MPASM  5.1    FUELGAUGEAPPNOTE_MAIN_VER1.ASM   12-18-2007  18:09:33         PAGE 30


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01360 
                      01361 
000456                01362 Keep_AddsCurrents
000456 010?           01363         banksel Dividend1                       ; ---> Current just measured in uA
000458 C??? F???      01364         movff   Dividend1,AddByteA      ; LSB 
00045C C??? F???      01365         movff   Dividend2,AddByteA+1
000460 C??? F???      01366         movff   Dividend3,AddByteA+2
000464 C??? F???      01367         movff   Dividend4,AddByteA+3
000468 C??? F???      01368         movff   Dividend5,AddByteA+4    ; MSB for gain =1
00046C C??? F???      01369         movff   Dividend6,AddByteA+5    ; MSB for gain =2,4,8
                      01370 
                      01371 
                      01372 ; AddBytesB = AddByteA (Dividend) + AddByteB (Dividend) ---> AddByteA (Dividend)*No.of Timer0 Interrupt
                      01373 
000470 EC?? F???      01374         call    Add_Two_6Bytes          ; When current is discharged
                      01375 
                      01376 ;----------------
                      01377 ;       Add_Two_6Bytes -->  AddBytesA + AddBytesB =Carry_fromAdd + AddBytesB
                      01378 ; Add results = Carry_fromAdd + AddByteB_6 + AddByteB_5 + AddByteB_4 +AddByteB_3 +AddByteB_2 +AddByteB_1
                      01379 ;----------------
                      01380         
000474 EF?? F???      01381         goto    Add_IforNtimes  
                      01382 
                      01383 ;-----------------------------------------------------------------------
                      01384 
000478                01385 Done_CurrentXInt
                      01386 
000478                01387 Current_NoTimerInt
                      01388 
                      01389 ; calculate total current used ---> Current_Used = Current_Used + current measured now (AddByteB)
                      01390         
000478 010?           01391         banksel ADC_Sign
                      01392 ;       bsf             ADC_Sign,0 ; for now until testing done
                      01393 
00047A A0??           01394         btfss   ADC_Sign,0
00047C EF?? F???      01395         goto    Add_toTotalCurrentRemain                ; Current is charged into the battery   
000480 D???           01396         bra             Add_toTotalCurrentUsed                  ; Current is coming out from the battey 
                            --> consumed
                      01397 
                      01398 
000482                01399 Add_toTotalCurrentUsed
                      01400 
                      01401 ;------------------------------------------------------------------------
                      01402 ;Calculate Current_Used = Current_Used (AddByteA) + Current measured * N of timer0 interrupt (AddByteB)
                      01403 ;------------------------------------------------------------------------
                      01404 
                      01405 ; AddByteB Array has currents added for the last interval events
                      01406 
                      01407 ; current_used array has the sum of all current used 
                      01408 ; rearrange array       
000482 010?           01409         banksel Current_Used                    ; Current_used = Total current used
000484 C??? F???      01410         movff   Current_Used,AddByteA   ; LSB
000488 C??? F???      01411         movff   Current_Used+1,AddByteA+1       
MPASM  5.1    FUELGAUGEAPPNOTE_MAIN_VER1.ASM   12-18-2007  18:09:33         PAGE 31


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00048C C??? F???      01412         movff   Current_Used+2,AddByteA+2       
000490 C??? F???      01413         movff   Current_Used+3,AddByteA+3       
000494 C??? F???      01414         movff   Current_Used+4,AddByteA+4       
000498 C??? F???      01415         movff   Current_Used+5,AddByteA+5
                      01416 
                      01417 
00049C EC?? F???      01418         call    Add_Two_6Bytes          ; When current is discharged
                      01419 
                      01420 ;----------------
                      01421 ;       Add_Two_6Bytes -->  AddBytesA + AddBytesB =Carry_fromAdd + AddBytesB
                      01422 ; Add results = Carry_fromAdd + AddByteB_6 + AddByteB_5 + AddByteB_4 + AddByteB_3 + AddByteB_2 + AddByte
                            B_1
                      01423 ;----------------
                      01424 
                      01425 ; rearrange array ---> Added the result (AddByteB) to the Current_Used
0004A0 010?           01426         banksel AddByteB
0004A2 C??? F???      01427         movff   AddByteB, Current_Used  ; LSB
0004A6 C??? F???      01428         movff   AddByteB+1, Current_Used+1      
0004AA C??? F???      01429         movff   AddByteB+2, Current_Used+2      
0004AE C??? F???      01430         movff   AddByteB+3, Current_Used+3      
0004B2 C??? F???      01431         movff   AddByteB+4, Current_Used+4      
0004B6 C??? F???      01432         movff   AddByteB+5, Current_Used+5 ; MSB
                      01433 
                      01434 ;       goto    Calc_RemainCurrent                      ; it has total current used in 6 bytes
                      01435                                                                                 ; now calculate remainin
                            g currents
0004BA EF?? F???      01436         goto    Display_TotalUsedFuel
                      01437 ;-------------------------------------------------------------------------------
                      01438 ; when battery is charged !
0004BE                01439 Add_toTotalCurrentRemain
0004BE EF?? F???      01440         goto    Ok_ToAddCurrent
                      01441 
                      01442 ;--------- The following routine is disabled -----------------------------------
0004C2                01443 Check_IfOverCharging
                      01444 ; Note: Before keep add, it is important to find out if the battery is over charging. 
                      01445 ;       The following routine test if the I_Init_uAS > 170 mA. 
                      01446  
                      01447 ;--------------------------------------------------------------
                      01448 ;       SubtractByteA+5 (MSB)  ....... SubtractByteA (LSB)
                      01449 ;     - SubtractByteB+5 (MSB) ......... SubtractByteB (LSB)
                      01450 ;    =  SubtractByteA+5 (MSB)  ....... SubtractByteA (LSB)
                      01451 ;-------------------------------------------------------------- 
                      01452 
0004C2 010?           01453         banksel AddByteB        ; AddbyteB has a measured current during the current looping 
0004C4 C??? F???      01454         movff   AddByteB, SubtractByteB ; LSB
0004C8 C??? F???      01455         movff   AddByteB+1, SubtractByteB+1
0004CC C??? F???      01456         movff   AddByteB+2, SubtractByteB+1
0004D0 C??? F???      01457         movff   AddByteB+3, SubtractByteB+1
0004D4 C??? F???      01458         movff   AddByteB+4, SubtractByteB+1
0004D8 C??? F???      01459         movff   AddByteB+5, SubtractByteB+5 ; MSB
                      01460 
                      01461 
                      01462 ; 170 mAH in uAS unit
MPASM  5.1    FUELGAUGEAPPNOTE_MAIN_VER1.ASM   12-18-2007  18:09:33         PAGE 32


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0004DC 010?           01463         banksel SubtractByteA
0004DE 0E00           01464         movlw   0x00
0004E0 6E??           01465         movwf   SubtractByteA           ; LSB
0004E2 0E61           01466         movlw   0x61
0004E4 6E??           01467         movwf   SubtractByteA+1
0004E6 0E7A           01468         movlw   0x7A
0004E8 6E??           01469         movwf   SubtractByteA+2
0004EA 0E24           01470         movlw   0x24
0004EC 6E??           01471         movwf   SubtractByteA+3
0004EE 0E00           01472         movlw   0x00
0004F0 6E??           01473         movwf   SubtractByteA+4
0004F2 0E00           01474         movlw   0x00
0004F4 6E??           01475         movwf   SubtractByteA+5         ; MSB
                      01476 
0004F6 EC?? F???      01477         call    Subtract_6Bytes_6Bytes   
                      01478 
                      01479 ;--------------------------------------------------------------
                      01480 ;       SubtractByteA+5 (MSB)  ....... SubtractByteA (LSB)
                      01481 ;     - Current_Used+5 (MSB) ......... Current_Used (LSB)
                      01482 ;    =  SubtractByteA+5 (MSB)  ....... SubtractByteA (LSB)
                      01483 ;
                      01484 ;       Note:   Carry  = 0: Success --> A > B or A == B
                      01485 ;                       Carry  = 1: Fail --->  A < or  B
                      01486 ;-------------------------------------------------------------- 
                      01487 
                      01488 
                      01489 
                      01490 ; need to check the following return:
0004FA B0D8           01491         btfsc   STATUS,C                                ; C:0 ---> successful
0004FC EF?? F???      01492         goto    FullyCharged                    ; Unsuccessful: SubtractByteA < SubtractByteB ---> 170 m
                            A <  FuelCharged
000500 EF?? F???      01493         goto    Ok_ToAddCurrent                 ; Successful_sub:  SubtractByteA > SubtractByteB ---> 17
                            0 mA > FuelCharging
                      01494 
000504                01495 FullyCharged                                            ; This routine will be improved later. For now, 
                            it just do not add to the initial current anymore. 
                      01496 ;       goto    Calc_RemainCurrent
000504 EF?? F???      01497         goto    Display_TotalUsedFuel   
                      01498 ;--------- The following routine is disabled -------------------
                      01499 
                      01500 
000508                01501 Ok_ToAddCurrent
                      01502 
                      01503 ;-----------------------------------------
                      01504 ; Add remaining Current -->  I_Remain_uAS =  I_Remain_uAS + Measured Current (AddBytesB)              
                      01505 ;-----------------------------------------
                      01506 ; rearrange array       
000508 010?           01507         banksel I_Init_uAS                      ; Current_remains
00050A C??? F???      01508         movff   I_Init_uAS, AddByteA    ; LSB
00050E C??? F???      01509         movff   I_Init_uAS+1, AddByteA+1        
000512 C??? F???      01510         movff   I_Init_uAS+2, AddByteA+2        
000516 C??? F???      01511         movff   I_Init_uAS+3, AddByteA+3        
00051A C??? F???      01512         movff   I_Init_uAS+4, AddByteA+4        
MPASM  5.1    FUELGAUGEAPPNOTE_MAIN_VER1.ASM   12-18-2007  18:09:33         PAGE 33


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00051E C??? F???      01513         movff   I_Init_uAS+5, AddByteA+5
                      01514         
000522 EC?? F???      01515         call    Add_Two_6Bytes          ; When current is charged into battery ---> add to the register 
                            for remaining current
                      01516 
                      01517 ; rearrange array ---> current remaining ---> used different arrays in a case not to mass up due to erro
                            rs !
000526 010?           01518         banksel AddByteB
000528 C??? F???      01519         movff   AddByteB, I_Init_uAS    ; LSB
00052C C??? F???      01520         movff   AddByteB+1, I_Init_uAS+1        
000530 C??? F???      01521         movff   AddByteB+2, I_Init_uAS+2        
000534 C??? F???      01522         movff   AddByteB+3, I_Init_uAS+3        
000538 C??? F???      01523         movff   AddByteB+4, I_Init_uAS+4        
00053C C??? F???      01524         movff   AddByteB+5, I_Init_uAS+5 ; MSB
                      01525 ;----------------------------------------------------------------
                      01526 
                      01527 
                      01528 ;---------------- Displaying Fuel Used --------------------------
                      01529 
000540                01530 Display_TotalUsedFuel
                      01531 
                      01532 ;---------------------------------------------------------------
                      01533 ; (b) Fuel_used in mAH = Current_Used/(1000*3600),  mAH
                      01534 ;---------------------------------------------------------------
                      01535 ; Algorithm:
                      01536 ; When it converting a small number of used fule in uAS to mAH,
                      01537 ; the fixed point division (1000*3600) loses remainders after decimal point (gives no remainder in some 
                            cases). 
                      01538 ; This gives a zero value below (3600)*(1000) uAs. 
                      01539 ; So, instead of dividing the "Current_Used" by (3600)*(1000),
                      01540 ; it divides by "Current_Used" by only (36).
                      01541 ; The 10^5 factor will be taken care of at the LCD display.
                      01542 ; For example:
                      01543 ;  "Current_Used" = 1000.01085mAH = 3600039062uAs
                      01544 ; "Current_Used" --> 3600039062uAs/36 = 100001085.1 -->5F5E53D --> 100001085 (dec)
                      01545 ; In LCD display --> 1000.01085 mAH by shifting a decimal point 5 points to the right. 
                      01546 ;----------------------------------------------------------------- 
                      01547 
                      01548 ; now, let it converts the uA in Current_Used to mAH ---> divide by 36 (dec) = 24 (hex),  (deficit --> 1
                            0^5)
000540 010?           01549         banksel Divisor1
000542 0E24           01550         movlw   0x24
000544 6E??           01551         movwf   Divisor1                ; LSB
000546 0E00           01552         movlw   0x00
000548 6E??           01553         movwf   Divisor2                ; 
00054A 0E00           01554         movlw   0x00
00054C 6E??           01555         movwf   Divisor3                ; MSB
                      01556 ;----------------------------------------
00054E 010?           01557         banksel Current_Used
000550 C??? F???      01558         movff   Current_Used, Product6  ; LSB
000554 C??? F???      01559         movff   Current_Used+1, Product5
000558 C??? F???      01560         movff   Current_Used+2, Product4
00055C C??? F???      01561         movff   Current_Used+3, Product3
MPASM  5.1    FUELGAUGEAPPNOTE_MAIN_VER1.ASM   12-18-2007  18:09:33         PAGE 34


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000560 C??? F???      01562         movff   Current_Used+4, Product2
000564 C??? F???      01563         movff   Current_Used+5, Product1 ; MSB
                      01564 
                      01565 ;----------------------------------------
000568 EC?? F???      01566         call    Divide_6by_3Bytes               ; Current_Used(6 bytes) div. (1000*3600 --> 3 byes) = cu
                            rrent in mAH
                      01567                                                 
                      01568 ; return  = Dividend6(MSB) + Dividend5 + ---- Dividend1 (LSB)
                      01569 ;         = Current_Used in mAH
                      01570 ;-----------------------------------------
                      01571 
00056C 010?           01572         banksel countT1
00056E 6A??           01573         clrf    countT1
000570 6A??           01574         clrf    countT2
000572 6A??           01575         clrf    countT3
000574 6A??           01576         clrf    countT4
000576 6A??           01577         clrf    countT5
000578 6A??           01578         clrf    countT6
                      01579 ;---------------------------------
                      01580 
00057A 010?           01581         banksel Dividend1
00057C C??? F???      01582         movff   Dividend6,countT6       ; MSB for gain =2,4,8
000580 C??? F???      01583         movff   Dividend5,countT5       ; MSB for gain =1
000584 C??? F???      01584         movff   Dividend4,countT4
000588 C??? F???      01585         movff   Dividend3,countT3
00058C C??? F???      01586         movff   Dividend2,countT2
000590 C??? F???      01587         movff   Dividend1,countT1       ; LSB
                      01588 
000594 EC?? F???      01589         call    Bin48_bcd_volts
000598                01590 Display_UsedFuel                ; in mAH
                      01591 
000598 EC?? F???      01592         call    Display_FuelUsed
                      01593 
00059C EC?? F???      01594         call    delay_1s
0005A0 EC?? F???      01595         call    delay_1s
                      01596 
                      01597 ;-------------------------------
0005A4 010?           01598         banksel SelBettryType
0005A6 A0??           01599         btfss   SelBettryType,0                 ; 1: Rechargeable Battery: Li_polymer, 170 mAH, 4.2V
                      01600                                                                         ; 0: AAA BAttery
0005A8 EF?? F???      01601         goto    Volts_Measurement
0005AC D???           01602         bra             Calc_RemainFuels
                      01603 ;------------------------------
0005AE                01604 Calc_RemainFuels
                      01605 
                      01606 ; Check if the battery is started with fully charged battery or not
                      01607 
0005AE 010?           01608         banksel NotChargedBat
0005B0 A0??           01609         btfss   NotChargedBat,0         ; 0---> fully charged, 1---> not fully charged battery
0005B2 EF?? F???      01610         goto    DoCalRemainFuels
                      01611 ;       bra             SkipCalRemainFuels
                      01612         
0005B6                01613 SkipCalRemainFuels
MPASM  5.1    FUELGAUGEAPPNOTE_MAIN_VER1.ASM   12-18-2007  18:09:33         PAGE 35


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01614 
                      01615 ;-----------------------------
0005B6 010?           01616         banksel ptr_pos
0005B8 0EF0           01617         movlw   .240                            ;"FuelRemanUnknown"             ;240 
0005BA 6E??           01618         movwf   ptr_pos
0005BC EC?? F???      01619         call    stan_char_1
                      01620 
0005C0 EC?? F???      01621         call    Disp_StdUnderCharged
                      01622 
                      01623 ;       banksel ptr_pos
                      01624 ;       movlw   .256                            ;"StartedUnderChgd"             ;256
                      01625 ;       movwf   ptr_pos
                      01626 ;       call    stan_char_2
                      01627 ;-----------------------------
                      01628 
                      01629 
0005C4 EC?? F???      01630         call    delay_1s
0005C8 EC?? F???      01631         call    delay_1s                ;delay for display
                      01632 
0005CC 0000           01633         nop
0005CE 0000           01634         nop
                      01635 
0005D0 EF?? F???      01636         goto    Volts_Measurement
                      01637 
                      01638 
0005D4                01639 DoCalRemainFuels
                      01640 
                      01641 ;-----------------------------------------
                      01642 ; calculate remaining battery fuel:
                      01643 ; I_remaining = T_IStored Current - I_Used
                      01644 ;------------------------------------
                      01645 
0005D4 010?           01646         banksel I_Init_uAS
0005D6 C??? F???      01647         movff   I_Init_uAS, SubtractByteA       ; LSB
0005DA C??? F???      01648         movff   I_Init_uAS+1, SubtractByteA+1
0005DE C??? F???      01649         movff   I_Init_uAS+2, SubtractByteA+2
0005E2 C??? F???      01650         movff   I_Init_uAS+3, SubtractByteA+3
0005E6 C??? F???      01651         movff   I_Init_uAS+4, SubtractByteA+4
0005EA C??? F???      01652         movff   I_Init_uAS+5, SubtractByteA+5 ; MSB
                      01653 
                      01654 
0005EE 010?           01655         banksel Current_Used
0005F0 C??? F???      01656         movff   Current_Used, SubtractByteB     ; LSB
0005F4 C??? F???      01657         movff   Current_Used+1, SubtractByteB+1
0005F8 C??? F???      01658         movff   Current_Used+2, SubtractByteB+2
0005FC C??? F???      01659         movff   Current_Used+3, SubtractByteB+3
000600 C??? F???      01660         movff   Current_Used+4, SubtractByteB+4
000604 C??? F???      01661         movff   Current_Used+5, SubtractByteB+5 ; MSB
                      01662 
                      01663 
                      01664 ; --- Algorithm for Calculating Remaining Currents ------------
                      01665 ; (a) Remaining Currents = Initial Currents - Currents Used
                      01666 ; 
MPASM  5.1    FUELGAUGEAPPNOTE_MAIN_VER1.ASM   12-18-2007  18:09:33         PAGE 36


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01667 ; (b) Initial_Currents_uAs ----> SubtractByteA 
                      01668 ; (c) Current_Used(==Total Used Current in uAs) --->  SubtractByteB
                      01669 ; (d) Calculation: 
                      01670 ;         SubtractByteA = SubtractByteA - Current_Used
                      01671 ;         Remaining Currents <---- SubtractByteA
                      01672 ;--------------------------------------------------------------
                      01673 
                      01674 ;--------------------------------------------------------------
                      01675 ;       SubtractByteA+5 (MSB)  ....... SubtractByteA (LSB)
                      01676 ;     - Current_Used+5 (MSB) ......... Current_Used (LSB)
                      01677 ;    =  SubtractByteA+5 (MSB)  ....... SubtractByteA (LSB)
                      01678 ;-------------------------------------------------------------- 
                      01679 
000608 EC?? F???      01680         call    Subtract_6Bytes_6Bytes   
                      01681 ; need to check the following return:
00060C B0D8           01682         btfsc   STATUS,C        
00060E EF?? F???      01683         goto    FullyDischarged                 ; SubtractByteA < SubtractByteB ---> 170 mA < FuelUsed
000612 EF?? F???      01684         goto    Successful_sub                  ; SubtractByteA > SubtractByteB ---> 170 mA > FuelUsed
                      01685 
000616                01686 FullyDischarged                                         ; SubtractByteA < SubtractByteB ---> 170 mA < Fu
                            elUsed
                      01687                                                                         ; Battery is completely discharg
                            ed ! ---> Just shows the previous remaining fuel calculation
                      01688                                                                                 ; ---> Most likely aroun
                            d 0 mAH
000616 EF?? F???      01689         goto    Convert_uATomAH
                      01690 
                      01691 
                      01692 
00061A                01693 Successful_sub
                      01694 ;---------------------------------
                      01695 ; SubtractByteA+5   --> MSB
                      01696 ; SubtractByteA   --> LSB
                      01697 ;---------------------------------
                      01698 ;confirming --- OK
                      01699 ;Now, Update the Remaining Current(Fuel) Arrays 
                      01700 
00061A 010?           01701         banksel SubtractByteA
00061C C??? F???      01702         movff   SubtractByteA,I_remain_uAS      ; LSB
000620 C??? F???      01703         movff   SubtractByteA+1,I_remain_uAS+1
000624 C??? F???      01704         movff   SubtractByteA+2,I_remain_uAS+2
000628 C??? F???      01705         movff   SubtractByteA+3,I_remain_uAS+3
00062C C??? F???      01706         movff   SubtractByteA+4,I_remain_uAS+4
000630 C??? F???      01707         movff   SubtractByteA+5,I_remain_uAS+5          ; MSB
                      01708 ;----------------------------------
                      01709 
                      01710 ; Calculate % of remaining battery capacity
                      01711 ; Algorithm ---> (T_CurrentRemain/I_Init) x 100% ---> 100% can be treated in display routine
                      01712 ;  T_CurrentRemain ---> 6 bytes
                      01713 ;  I_Init ---> 3 bytes
                      01714 ;  Rearrange Divisor(I_Init)
                      01715 ;  example: 1000 mAH = 1000mA x60x60 =  3600000mA in dec =  36EE80 hex in mA
                      01716 ;                  170mAH = 170 x 60x60 = 612000mA in dec = 956A0 hex in mA     
MPASM  5.1    FUELGAUGEAPPNOTE_MAIN_VER1.ASM   12-18-2007  18:09:33         PAGE 37


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01717 
                      01718 ;----------------------------------------
                      01719 
000634                01720 Convert_uATomAH
                      01721 
                      01722 ; now let it converts the uA in T_CurrentRemain to mAH ---> divide by (1000*3600) --> 36EE80
000634 010?           01723         banksel Divisor1
000636 0E80           01724         movlw   0x80
000638 6E??           01725         movwf   Divisor1                ; LSB
00063A 0EEE           01726         movlw   0xEE
00063C 6E??           01727         movwf   Divisor2                ; 
00063E 0E36           01728         movlw   0x36
000640 6E??           01729         movwf   Divisor3                ; MSB
                      01730 ;----------------------------------------
000642 C??? F???      01731         movff   I_remain_uAS, Product6          ; LSB
000646 C??? F???      01732         movff   I_remain_uAS+1, Product5        
00064A C??? F???      01733         movff   I_remain_uAS+2, Product4        
00064E C??? F???      01734         movff   I_remain_uAS+3, Product3        
000652 C??? F???      01735         movff   I_remain_uAS+4, Product2
000656 C??? F???      01736         movff   I_remain_uAS+5, Product1                ; MSB
                      01737 
                      01738 ;----------------------------------------
00065A EC?? F???      01739         call    Divide_6by_3Bytes               ; T_CurrentRemain(6 bytes) div. (1000*3600 --> 3 byes) =
                             current in mAH
                      01740                                                                     ; This result will be divided again 
                            using I_Init for % of fuel. 
                      01741         ; return  = Dividend6(MSB) + Dividend5 + ---- Dividend1 (LSB)
                      01742 ;-----------------------------------------
                      01743 
00065E 010?           01744         banksel Dividend1
000660 C??? F???      01745         movff   Dividend1,I_remain_mAH1 ; LSB
000664 C??? F???      01746         movff   Dividend2,I_remain_mAH2 
000668 C??? F???      01747         movff   Dividend3,I_remain_mAH3
00066C C??? F???      01748         movff   Dividend4,I_remain_mAH4
000670 C??? F???      01749         movff   Dividend5,I_remain_mAH5
000674 C??? F???      01750         movff   Dividend6,I_remain_mAH6 ; MSB
                      01751 
                      01752 ;-------------------------------------------------
                      01753 
                      01754 ; (a) Fuel_Remaining in mAH = (I_Remain_mAH * 100,000 %)/I_Init_mAH
                      01755 ;      Note: The reasons using 100,000% is not to lose number after decimal when the numurate is divided
                            .
                      01756 ;                        The extra 1000 will be taken care of at the LCD display. 
                      01757 ; (b) Fuel_used in mAH = Current_Used/(1000*3600),  mAH
                      01758 ;--------------------------------------------------
                      01759 
                      01760 ;(a) Fuel_Remaining in mAH = (I_Remain_mAH * 100,000 %)/I_Init_mAH
                      01761 
                      01762 ; Multiply 100,000% to the  I_remain_mAH ---> It could be better to multiply before converting to mAH 
                      01763 ;                                                       --> revisit later !
                      01764 
                      01765 
                      01766 ; 3 bytes should be enough for mAH unit
MPASM  5.1    FUELGAUGEAPPNOTE_MAIN_VER1.ASM   12-18-2007  18:09:33         PAGE 38


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01767 ; example: 1000 mAH ---> 3E8 (mAH) in hex
                      01768 
000678 010?           01769         banksel I_remain_mAH1
00067A C??? F???      01770         movff   I_remain_mAH1, Multipland3      ; LSB
00067E C??? F???      01771         movff   I_remain_mAH2, Multipland2      ; 
000682 C??? F???      01772         movff   I_remain_mAH3, Multipland1      ; MSB
                      01773 
                      01774 ; 100000% --> 186A0 hex
000686 010?           01775         banksel Multiplier1                     
000688 0E01           01776         MOVLW   0x01                    ; MSB
00068A 6E??           01777         MOVWF   Multiplier1
00068C 0E86           01778         MOVLW   0x86
00068E 6E??           01779         MOVWF   Multiplier2
000690 0EA0           01780         MOVLW   0xA0
000692 6E??           01781         MOVWF   Multiplier3             ; LSB
                      01782 
000694 EC?? F???      01783         call    Multiply_3x3bytes               
                      01784 ; Return is: Product1 (MSB) + Product2 + Product3 + Product4 + Product5 + Product6 (LSB)
                      01785 ;----------------------------------------
                      01786 
000698 010?           01787         banksel I_Init1_mAH
00069A C??? F???      01788         movff   I_Init1_mAH, Divisor1           ; LSB
00069E C??? F???      01789         movff   I_Init2_mAH, Divisor2           
0006A2 C??? F???      01790         movff   I_Init3_mAH, Divisor3           ; MSB
                      01791 
                      01792 ;----------------------------------------
0006A6 EC?? F???      01793         call    Divide_6by_3Bytes                       ; The return result is the remaining fuel in %
                      01794 
                      01795 ; Division ---> (Product1 + Product2 + ..Product6)/(Divisor3+Divisor2+Divisor1) 
                      01796 ; Return --> Dividend6+Dividend5+...Dividend1
                      01797 ;------------------------------------------
                      01798    
                      01799 
                      01800 ; Now display the remaining fuel data in ratio
                      01801 ; Remember that the display will take care of x1000 factor
0006AA 010?           01802         banksel countT1
0006AC 6A??           01803         clrf    countT1
0006AE 6A??           01804         clrf    countT2
0006B0 6A??           01805         clrf    countT3
0006B2 6A??           01806         clrf    countT4
0006B4 6A??           01807         clrf    countT5
0006B6 6A??           01808         clrf    countT6
                      01809 ;---------------------------------
                      01810 
0006B8 010?           01811         banksel Dividend1
0006BA C??? F???      01812         movff   Dividend6,countT6       ; MSB for gain =2,4,8
0006BE C??? F???      01813         movff   Dividend5,countT5       ; MSB for gain =1
0006C2 C??? F???      01814         movff   Dividend4,countT4
0006C6 C??? F???      01815         movff   Dividend3,countT3
0006CA C??? F???      01816         movff   Dividend2,countT2
0006CE C??? F???      01817         movff   Dividend1,countT1       ; LSB
                      01818 
0006D2 EC?? F???      01819         call    Bin48_bcd_volts
MPASM  5.1    FUELGAUGEAPPNOTE_MAIN_VER1.ASM   12-18-2007  18:09:33         PAGE 39


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01820 
                      01821 ;-----------------------------------------
                      01822 ; Display the remaining fuel in percentage on Line 1:
0006D6 EC?? F???      01823         call    Disp_FuelRemPerct       
                      01824 ;-----------------------------------------
                      01825 
                      01826 ; Display remaining fuel in mAh on Line 2
0006DA 010?           01827         banksel countT1
0006DC 6A??           01828         clrf    countT1
0006DE 6A??           01829         clrf    countT2
0006E0 6A??           01830         clrf    countT3
0006E2 6A??           01831         clrf    countT4
0006E4 6A??           01832         clrf    countT5
0006E6 6A??           01833         clrf    countT6
                      01834 ;---------------------------------
0006E8 010?           01835         banksel I_remain_mAH1
0006EA C??? F???      01836         movff   I_remain_mAH1, countT1  ; LSB
0006EE C??? F???      01837         movff   I_remain_mAH2, countT2  ; 
0006F2 C??? F???      01838         movff   I_remain_mAH3, countT3  ; MSB
                      01839 
0006F6 EC?? F???      01840         call    Bin48_bcd_volts
                      01841 
                      01842 ;----------------------------------------
                      01843 ; Display remaining fuel in mAh on Line 2:
0006FA EC?? F???      01844         call    Disp_FuelRemmAH 
                      01845 ;----------------------------------------
0006FE EC?? F???      01846         call    delay_1s
000702 EC?? F???      01847         call    delay_1s                ;delay for display
                      01848 
000706 0000           01849         nop
000708 0000           01850         nop
                      01851 
00070A                01852 Skip_DispFuelUsed
00070A EF?? F???      01853         goto    Volts_Measurement
                      01854 ;---------------------------------------------------------------------- 
                      01855 ;----Standard code, Place characters on line-1-------------------------
00070E                01856 stan_char_1
00070E EC?? F???      01857         call    LCDLine_1               ;mvoe cursor to line 1 
                      01858 
000712 010?           01859         banksel ptr_count
000714 0E10           01860         movlw   .16                     ;1-full line of LCD
000716 6E??           01861         movwf   ptr_count
                      01862 
                      01863 
000718 0E??           01864         movlw   UPPER stan_table
00071A 6EF8           01865         movwf   TBLPTRU
00071C 0E??           01866         movlw   HIGH stan_table
00071E 6EF7           01867         movwf   TBLPTRH
000720 0E??           01868         movlw   LOW stan_table
000722 6EF6           01869         movwf   TBLPTRL
                      01870 
000724 010?           01871         banksel ptr_pos
000726 50??           01872         movf    ptr_pos,W
MPASM  5.1    FUELGAUGEAPPNOTE_MAIN_VER1.ASM   12-18-2007  18:09:33         PAGE 40


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000728 26F6           01873         addwf   TBLPTRL,F
00072A 6AE8           01874         clrf    WREG
00072C 22F7           01875         addwfc  TBLPTRH,F
00072E 22F8           01876         addwfc  TBLPTRU,F
                      01877 
000730                01878 stan_next_char_1
000730 0009           01879         tblrd   *+
000732 CFF5 F???      01880         movff   TABLAT,temp_wr                  
000736 EC?? F???      01881         call    d_write                 ;send character to LCD
                      01882 
00073A 2E??           01883         decfsz  ptr_count,F             ;move pointer to next char
00073C D???           01884         bra             stan_next_char_1
                      01885 
                      01886 ;       movlw   "\n"                    ;move data into TXREG
                      01887 ;       movwf   TXREG                   ;next line
                      01888 ;       btfss   TXSTA,TRMT              ;wait for data TX
                      01889 ;       goto    $-2
                      01890 ;       movlw   "\r"                    ;move data into TXREG
                      01891 ;       movwf   TXREG                   ;carriage return
                      01892 ;       btfss   TXSTA,TRMT              ;wait for data TX
                      01893 ;       goto    $-2
                      01894 
00073E 0012           01895         return
                      01896 
                      01897 ;----Standard code, Place characters on line-2--------------------------
000740                01898 stan_char_2     
000740 EC?? F???      01899         call    LCDLine_2               ;move cursor to line 2 
000744 0E10           01900         movlw   .16                     ;1-full line of LCD
000746 6E??           01901         movwf   ptr_count
000748 0E??           01902         movlw   UPPER stan_table
00074A 6EF8           01903         movwf   TBLPTRU
00074C 0E??           01904         movlw   HIGH stan_table
00074E 6EF7           01905         movwf   TBLPTRH
000750 0E??           01906         movlw   LOW stan_table
000752 6EF6           01907         movwf   TBLPTRL
000754 50??           01908         movf    ptr_pos,W
000756 26F6           01909         addwf   TBLPTRL,F
000758 6AE8           01910         clrf    WREG
00075A 22F7           01911         addwfc  TBLPTRH,F
00075C 22F8           01912         addwfc  TBLPTRU,F
                      01913 
00075E                01914 stan_next_char_2
00075E 0009           01915         tblrd   *+
000760 CFF5 F???      01916         movff   TABLAT,temp_wr
000764 EC?? F???      01917         call    d_write                 ;send character to LCD
                      01918 
000768 2E??           01919         decfsz  ptr_count,F             ;move pointer to next char
00076A D???           01920         bra     stan_next_char_2
                      01921 
                      01922 ; these are for RS232 ---> Nor used here
                      01923 ;       movlw   "\n"                    ;move data into TXREG
                      01924 ;       movwf   TXREG                   ;next line
                      01925 ;       btfss   TXSTA,TRMT              ;wait for data TX
MPASM  5.1    FUELGAUGEAPPNOTE_MAIN_VER1.ASM   12-18-2007  18:09:33         PAGE 41


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01926 ;       goto    $-2
                      01927 ;       movlw   "\r"                    ;move data into TXREG
                      01928 ;       movwf   TXREG                   ;carriage return
                      01929 ;       btfss   TXSTA,TRMT              ;wait for data TX
                      01930 ;       goto    $-2
                      01931 
00076C 0012           01932         return
                      01933 ;----------------------------------------------------------------------
                      01934 
                      01935 
                      01936 
                      01937 ;----------- 100ms Delay for 8 MHz clock, Tcy = 0.5 us ----------------
00076E                01938 delay_100ms                             ; 100 ms ---> 100000 us ---> 200000 Tcy
00076E 010?           01939         banksel temp_1
000770 0EFF           01940         movlw   0xFF
000772 6E??           01941         movwf   temp_1
000774 0EFF           01942         movlw   0xFF
000776 6E??           01943         movwf   temp_2
                      01944 
000778                01945 d100l1                                  ; This gives approximately: 255*3*255 + 255*3 + 255*4 = 196860 T
                            cy =  98.43 ms
000778 2E??           01946         decfsz  temp_1,F
00077A D???           01947         bra     d100l1
00077C 2E??           01948         decfsz  temp_2,F
00077E D???           01949         bra     d100l1
000780 0012           01950         return
                      01951 
                      01952 ;----------- 1s Delay for 8 MHz clock -----------------------------------
000782                01953 delay_1s                                        ; 1 s ---> 1000000 us ---> 2000000 Tcy
000782 010?           01954         banksel temp_1
000784 0EFF           01955         movlw   0xFF
000786 6E??           01956         movwf   temp_1
000788 6E??           01957         movwf   temp_2
00078A 0E0A           01958         movlw   0x0A
00078C 6E??           01959         movwf   temp_3
00078E                01960 d1l1                                       ; This gives approximately: 255*3*255*10 + 255*3 + 255*4 + 10
                            *5 = 1952585 Tcy =  976 ms
00078E 2E??           01961         decfsz  temp_1,F
000790 D???           01962         bra     d1l1
000792 2E??           01963         decfsz  temp_2,F
000794 D???           01964         bra     d1l1
000796 2E??           01965         decfsz  temp_3,F
000798 D???           01966         bra     d1l1
00079A 0012           01967         return  
                      01968 
                      01969 
                      01970 
00079C                01971 Wait_SW1Interrupt
                      01972         ; Stay here until SW1 has an interrupt event ...
00079C                01973 Delay_SW1Interrupt
00079C 9683           01974         bcf             PORTD,3                                 ; TURN ON LED13 
00079E 010?           01975         banksel PORTBInt_Found
0007A0 AC??           01976         btfss   PORTBInt_Found,6                ; sw1                   
MPASM  5.1    FUELGAUGEAPPNOTE_MAIN_VER1.ASM   12-18-2007  18:09:33         PAGE 42


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0007A2 D???           01977         bra             Delay_SW1Interrupt
0007A4 6A??           01978         clrf    PORTBInt_Found
0007A6 0012           01979         return
                      01980 
                      01981 
0007A8                01982 Wait_SW3Interrupt
                      01983         ; Stay here until SW3 (RB0) has an interrupt event ...
                      01984 
0007A8 010?           01985         banksel RB0Int_Found
0007AA 6A??           01986         clrf    RB0Int_Found    
0007AC                01987 Delay_SW3Interrupt
0007AC 9683           01988         bcf             PORTD,3                                 ; TURN ON LED13 
0007AE 0EFF           01989         movlw   b'11111111'
0007B0 16??           01990         andwf   RB0Int_Found
0007B2 B4D8           01991         btfsc   STATUS,Z                                ; Z -->1: Register is zero, Z -->0: Register is 
                            not zero        
0007B4 D???           01992         bra     Delay_SW3Interrupt      
0007B6 010?           01993         banksel RB0Int_Found
0007B8 6A??           01994         clrf    RB0Int_Found    
0007BA 0012           01995         return
                      01996         
                      01997 
                      01998 
                      01999 
                      02000 
                      02001 ;*** Two's complement the 24-bit number in A24_B *************
                      02002 ;*************************************************************
0007BC                02003 TwosComp24
                      02004 
0007BC 010?           02005         banksel ADC_Value1
0007BE 1E??           02006         comf    ADC_Value1,f            ; This is the one's complement...
0007C0 1E??           02007         comf    ADC_Value2,f
0007C2 1E??           02008         comf    ADC_Value3,f
0007C4 3E??           02009         incfsz  ADC_Value3,f            ; Now add one to get the two's...
0007C6 EF?? F???      02010         goto    TC24_Exit
0007CA 3E??           02011         incfsz  ADC_Value2,f
0007CC EF?? F???      02012         goto    TC24_Exit
0007D0 3E??           02013         incfsz  ADC_Value1,f
                      02014 
0007D2                02015 TC24_Exit
0007D2 0012           02016         return
                      02017 
                      02018 
                      02019 
                      02020 
                      02021 
                      02022 ;****************************************************************************
                      02023 ;DEBOUNCE() - Pushbutton Debouncing Routine
                      02024 ;                       - Returns 1 If Switch Is Closed
                      02025 ;           - Returns 0 If Switch Is Open
                      02026 ;****************************************************************************
0007D4                02027 Debounce_RB0
                      02028 ;       global  Debounce
MPASM  5.1    FUELGAUGEAPPNOTE_MAIN_VER1.ASM   12-18-2007  18:09:33         PAGE 43


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0007D4 0100           02029         banksel DELAYTIME
0007D6 0E32           02030         movlw   DELAYTIME               ; Delay
0007D8 EC?? F???      02031         call    Delay
0007DC B081           02032         btfsc   PORTB,0         ; Is The RB0 PIN 0 (Switch2) ZERO?
0007DE EF?? F???      02033         goto    Open                    
0007E2                02034 Closed
0007E2 0C01           02035         retlw   1                                       
0007E4                02036 Open    
0007E4 0C00           02037         retlw   0
                      02038 
0007E6                02039 Debounce_RB1
                      02040 ;       global  Debounce
0007E6 0100           02041         banksel DELAYTIME
0007E8 0E32           02042         movlw   DELAYTIME               ; Delay
0007EA EC?? F???      02043         call    Delay
0007EE 010F           02044         banksel PORTB
0007F0 B281           02045         btfsc   PORTB,1         ; Is The RB1  ZERO?
0007F2 EF?? F???      02046         goto    Open                    
0007F6                02047 Closed_RB1
0007F6 0C01           02048         retlw   1                                       
0007F8                02049 Open_RB1        
0007F8 0C00           02050         retlw   0
                      02051 
0007FA                02052 Debounce_RB2
                      02053 ;       global  Debounce
0007FA 0100           02054         banksel DELAYTIME
0007FC 0E32           02055         movlw   DELAYTIME               ; Delay
0007FE EC?? F???      02056         call    Delay
                      02057 
000802 010F           02058         banksel PORTB
000804 B481           02059         btfsc   PORTB,2         ; Is The RB2  ZERO?
000806 EF?? F???      02060         goto    Open                    
00080A                02061 Closed_RB2
00080A 0C01           02062         retlw   1                                       
00080C                02063 Open_RB2        
00080C 0C00           02064         retlw   0
                      02065 
                      02066 
                      02067 
00080E                02068 Debounce_RB4
                      02069 ;       global  Debounce
00080E 0100           02070         banksel DELAYTIME
000810 0E32           02071         movlw   DELAYTIME               ; Delay
000812 EC?? F???      02072         call    Delay
                      02073 
000816 010F           02074         banksel PORTB
000818 B881           02075         btfsc   PORTB,4         ; Is The RB4 ZERO?
00081A EF?? F???      02076         goto    Open                    
00081E                02077 Closed_RB4
00081E 0C01           02078         retlw   1                                       
000820                02079 Open_RB4        
000820 0C00           02080         retlw   0
                      02081         
MPASM  5.1    FUELGAUGEAPPNOTE_MAIN_VER1.ASM   12-18-2007  18:09:33         PAGE 44


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      02082 
000822                02083 Debounce_RB5
                      02084 ;       global  Debounce
000822 0100           02085         banksel DELAYTIME
000824 0E32           02086         movlw   DELAYTIME               ; Delay
000826 EC?? F???      02087         call    Delay
                      02088 
00082A 010F           02089         banksel PORTB
00082C BA81           02090         btfsc   PORTB,5         ; Is The RB5 ZERO?
00082E EF?? F???      02091         goto    Open                    
000832                02092 Closed_RB5
000832 0C01           02093         retlw   1                                       
000834                02094 Open_RB5        
000834 0C00           02095         retlw   0
                      02096 
                      02097 
000836                02098 Debounce_RB6
                      02099 ;       global  Debounce
000836 0100           02100         banksel DELAYTIME
000838 0E32           02101         movlw   DELAYTIME               ; Delay
00083A EC?? F???      02102         call    Delay
                      02103 
00083E 010F           02104         banksel PORTB
000840 BC81           02105         btfsc   PORTB,6         ; Is The RB6 ZERO?
000842 EF?? F???      02106         goto    Open                    
000846                02107 Closed_RB6
000846 0C01           02108         retlw   1                                       
000848                02109 Open_RB6        
000848 0C00           02110         retlw   0
                      02111 
00084A                02112 Debounce_RB7
                      02113 ;       global  Debounce
00084A 0100           02114         banksel DELAYTIME
00084C 0E32           02115         movlw   DELAYTIME               ; Delay
00084E EC?? F???      02116         call    Delay
                      02117 
000852 010F           02118         banksel PORTB
000854 BE81           02119         btfsc   PORTB,7         ; Is The RB7 ZERO?
000856 EF?? F???      02120         goto    Open                    
00085A                02121 Closed_RB7
00085A 0C01           02122         retlw   1                                       
00085C                02123 Open_RB7        
00085C 0C00           02124         retlw   0
                      02125 
                      02126         
                      02127 ;****************************************************************************
                      02128 ;Delay(W) - DelayTime = [ (1)+(2)+(2)+(W*768-W)+(W*3-1)+(2) ]*(OSC/4)cycles
                      02129 ;           (This includes the call & The movlw)
                      02130 ;         - Max Time When W=0xFF, [ 196356 Cycles * (OSC/4) ] ---> 98.1 ms
                      02131 ;         - Must Declare INNER & OUTER AS GPR'S
                      02132 ;****************************************************************************
00085E                02133 Delay
00085E 010?           02134         banksel Delay_Returned
MPASM  5.1    FUELGAUGEAPPNOTE_MAIN_VER1.ASM   12-18-2007  18:09:33         PAGE 45


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000860 6A??           02135         clrf    Delay_Returned
000862 0E32           02136         MOVLW   DELAYTIME               ; ADDED
000864 6E??           02137         movwf   OUTER
000866 6A??           02138         clrf    INNER
000868 2E??           02139 D1      decfsz  INNER,f
00086A EF?? F???      02140         goto    D1
00086E 2E??           02141 D2      decfsz  OUTER,f
000870 EF?? F???      02142         goto    D1
                      02143 
000874 80??           02144         bsf             Delay_Returned,0
000876 0012           02145         return
                      02146 
                      02147 ;------------------------------------------------------------------
000878                02148 Convert_ADCvalues
                      02149 
                      02150 ;-------Converting Acquired ADC Values to Real numbers ------------------
                      02151 ;skip_simulation_U5             ; Voltage
                      02152 ;Continue_NormalMeas
                      02153 
                      02154 ;---Rearrange the collected ADC data ------------------
000878 010?           02155         banksel Multipland1
00087A 6A??           02156         CLRF    Multipland1
00087C 6A??           02157         CLRF    Multipland2
00087E 6A??           02158         CLRF    Multipland3
                      02159 ;----------------------------   
                      02160 
000880 010?           02161         banksel ADC_Sign
000882 6A??           02162         clrf    ADC_Sign
                      02163 
000884 010?           02164         banksel ADC_Value1
000886 B2??           02165         btfsc   ADC_Value1,1
000888 D???           02166         bra             Its_NegativeSignA
00088A                02167 Its_PositiveSignA
00088A 010?           02168         banksel ADC_Sign
00088C 80??           02169         bsf             ADC_Sign,0                      ; Vin+ --> positive ---> current is moving out f
                            rom the battery
00088E EF?? F???      02170         goto    Test_Bit16A
000892                02171 Its_NegativeSignA
000892 90??           02172         bcf             ADC_Sign,0                      ; This is the case when current is chaged into b
                            attery
                      02173                                                                 ; This need to take care of I_TStored Cu
                            rrent
                      02174 
000894 EC?? F???      02175         call    TwosComp24      ; for negative numbers
                      02176 
000898                02177 Test_Bit16A
000898 010?           02178         banksel ADC_Value1
00089A B0??           02179         btfsc   ADC_Value1,0
00089C 80??           02180         bsf             Multipland1,0                   ; MSB = 1 ---> 2^16
                      02181 
                      02182 
                      02183 ;       movff   ADC_Value1,Multipland1  ; bit 0 (=B16) was taken care of already
00089E C??? F???      02184         movff   ADC_Value2,Multipland2
MPASM  5.1    FUELGAUGEAPPNOTE_MAIN_VER1.ASM   12-18-2007  18:09:33         PAGE 46


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0008A2 C??? F???      02185         movff   ADC_Value3,Multipland3
                      02186 ;------------------------------------------------------------------     
                      02187 
0008A6 010?           02188         banksel IsitForU5_Volt
0008A8 80??           02189         bsf             IsitForU5_Volt,0                ; for battery voltage
                      02190         
0008AA EC?? F???      02191         call    Multiply_24x24Bits_ADC  ; Raw ADC value (3 bytes) * LSB (3 byes)
                      02192                                                                         ; LSB = 15.625 uV
                      02193                                                                         ; Actual multiplication  = Raw A
                            DC values (3 bytes) * 15.625/Gain settings = true input values
                      02194 
                      02195 ; Input to the "MULTIPLY_24x24Bits_ADC" is:
                      02196 ;                                                                       Multipland1 (MSB) +  Multipland2
                             + Multipland3 (LSB)                    
                      02197 ;                                                                       These values are multiplied by 1
                            5.625. The 15.625 is stored in the "MULTIPLY_24x24Bits_ADC". 
                      02198 ;       
                      02199 ; Results: 
                      02200 ;                       Product1 (MSB) + Product2 + Product3 + Product4 + Product5 + Product6 (LSB)  
                      02201 ;                       for 18 bit MCP3421, Product1 and Product2 registers have all 0's.
                      02202 ;                       So, it needds to take care of Product3 - 4 - 5 - 6 only. 
                      02203 ;--------------------------------------------------------------------
                      02204 
0008AE 0012           02205         RETURN  
                      02206 
                      02207 
                      02208 
                      02209 ;----------- To display Battery Volts --------------------------------
0008B0                02210 Display_Voltage
0008B0 010?           02211         banksel Product1
0008B2 C??? F???      02212         movff   Product1,countT6        ; MSB for gain =2,4,8
0008B6 C??? F???      02213         movff   Product2,countT5        ; LSB for gain =1
0008BA C??? F???      02214         movff   Product3,countT4
0008BE C??? F???      02215         movff   Product4,countT3
0008C2 C??? F???      02216         movff   Product5,countT2
0008C6 C??? F???      02217         movff   Product6,countT1        ; LSB
                      02218 
                      02219 
0008CA EC?? F???      02220         call    Bin48_bcd_volts
0008CE EC?? F???      02221         call    Display_Results_Volts
0008D2 0012           02222         return
                      02223 ;--------------------------------------------------------------------
                      02224 
                      02225 
0008D4                02226 Current_Measurement
                      02227 ; 1. Get a voltage on the current sensor using U5
                      02228 ; 2. Divide the voltage by Resistor Value of the current sensor
                      02229 ;---------------------------------------------------------------------
                      02230 
                      02231 ;Write configuration register
0008D4 010?           02232         banksel Config_Data
                      02233 ;       movlw   b'10011100'             ; Continuous mode, 18 bit mode, gain = 1
                      02234 ;       movlw   b'10001100'             ; change later to 18 bit, one-shot, gain=1
MPASM  5.1    FUELGAUGEAPPNOTE_MAIN_VER1.ASM   12-18-2007  18:09:33         PAGE 47


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0008D6 0E8F           02235         movlw   b'10001111'             ; change later to 18 bit, one-shot, gain=8
                      02236 
0008D8 6E??           02237         movwf   Config_Data             ; put this code before calling ADC_Write_Config
                      02238 
                      02239 ;---- Gain Select ---------------------------
0008DA 010?           02240         banksel Gain_Selected
0008DC 6A??           02241         CLRF    Gain_Selected
0008DE 84??           02242         bsf             Gain_Selected,2                 ; Gain=8
                      02243 ;------------------------------------------
                      02244 
                      02245 
0008E0 B0??           02246         btfsc   Gain_Selected,0
0008E2 EF?? F???      02247         goto    Set_Gain_2_U1
0008E6 B2??           02248         btfsc   Gain_Selected,1
0008E8 EF?? F???      02249         goto    Set_Gain_4_U1
0008EC B4??           02250         btfsc   Gain_Selected,2
0008EE EF?? F???      02251         goto    Set_Gain_8_U1
                      02252 
0008F2                02253 Set_Gain_1_U1   
0008F2 010?           02254         banksel Config_Data     
0008F4 90??           02255         bcf             Config_Data,0
0008F6 92??           02256         bcf             Config_Data,1
0008F8 EF?? F???      02257         goto    Now_WriteConf_U1
                      02258 
0008FC                02259 Set_Gain_2_U1   
0008FC 010?           02260         banksel Config_Data     
0008FE 80??           02261         bsf             Config_Data,0
000900 92??           02262         bcf             Config_Data,1
000902 EF?? F???      02263         goto    Now_WriteConf_U1
000906                02264 Set_Gain_4_U1   
000906 010?           02265         banksel Config_Data     
000908 90??           02266         bcf             Config_Data,0
00090A 82??           02267         bsf             Config_Data,1
00090C EF?? F???      02268         goto    Now_WriteConf_U1
000910                02269 Set_Gain_8_U1
000910 010?           02270         banksel Config_Data     
000912 80??           02271         bsf             Config_Data,0
000914 82??           02272         bsf             Config_Data,1
000916 EF?? F???      02273         goto    Now_WriteConf_U1
                      02274 
                      02275 
00091A                02276 Now_WriteConf_U1
                      02277 
                      02278 ; turn on sync pulse
                      02279 ;       bsf             PORTC,7 ; old
00091A 8C83           02280         bsf             Sync_LED11
                      02281 
00091C 010?           02282         banksel IsitForU5_Volt
00091E 90??           02283         bcf             IsitForU5_Volt,0                ; for U1, current
000920 EC?? F???      02284         call    ADC_Write_Config        ; put in initialization loop
                      02285 
000924 9C83           02286         bcf             Sync_LED11
                      02287 
MPASM  5.1    FUELGAUGEAPPNOTE_MAIN_VER1.ASM   12-18-2007  18:09:33         PAGE 48


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      02288 
                      02289 
000926                02290 Reading_ADC_U1
                      02291 
000926 EC?? F???      02292         call    ADC_Read_400KHz
00092A 9C83           02293         bcf             Sync_LED11
                      02294 
                      02295 ;--- testing : Simulation with knwon ADC values -------------------
                      02296 
00092C D???           02297         bra             skip_simulation_U1
00092E                02298 Simulation_U1   ; for current
                      02299 
                      02300 ;       bra             For_0587mV      
                      02301 
00092E                02302 For_2_408v
00092E 010?           02303         banksel ADC_Value1
000930 0E01           02304         movlw   0x01
000932 6E??           02305         movwf   ADC_Value1
000934 0EFF           02306         movlw   0xFF
000936 6E??           02307         movwf   ADC_Value2
000938 0EFF           02308         movlw   0xFF
00093A 6E??           02309         movwf   ADC_Value3
                      02310 
00093C EF?? F???      02311         goto    skip_simulation_U1      
                      02312 ;----------------------
                      02313 
000940                02314 For_0587mV                              ; this gives 0.587 mV --> [()*8]*15.625uV = 0.587mV --> [()x8] =
                             37.568 --> [()x8 ] = 37.568*8 = 300.544 --> 12C'hex
                      02315                                                 ; (2) Now see what is the code after multiplication (mul
                            tiply_24x24)
000940 010?           02316         banksel ADC_Value1
000942 0E00           02317         movlw   0x00
000944 6E??           02318         movwf   ADC_Value1
000946 0E01           02319         movlw   0x01
000948 6E??           02320         movwf   ADC_Value2
00094A 0E2C           02321         movlw   0x2C
00094C 6E??           02322         movwf   ADC_Value3
                      02323 ;----------------------
                      02324 
00094E                02325 skip_simulation_U1      
                      02326 ;--- Rearrange the collected ADC data --------------
00094E 010?           02327         banksel Multipland1
000950 6A??           02328         CLRF    Multipland1
000952 6A??           02329         CLRF    Multipland2
000954 6A??           02330         CLRF    Multipland3
                      02331 
                      02332 ;---------------------------------------------------    
                      02333 
000956 010?           02334         banksel ADC_Sign
000958 6A??           02335         clrf    ADC_Sign
                      02336 
00095A 010?           02337         banksel ADC_Value1                              ; U1 ---> sensing at current sensor
00095C B2??           02338         btfsc   ADC_Value1,1
MPASM  5.1    FUELGAUGEAPPNOTE_MAIN_VER1.ASM   12-18-2007  18:09:33         PAGE 49


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00095E D???           02339         bra             Its_Negative_Sign_U1
000960                02340 Its_Positive_Sign_U1
000960 80??           02341         bsf             ADC_Sign,0                      ; Vin+ --> positive ---> current is moving out f
                            rom the battery
000962 EF?? F???      02342         goto    Test_Bit16_U1
000966                02343 Its_Negative_Sign_U1
000966 90??           02344         bcf             ADC_Sign,0                      ; This is the case when current is charged into 
                            battery
                      02345                                                                 ; This need to take care of I_TStored Cu
                            rrent
                      02346 
000968 EC?? F???      02347         call    TwosComp24      ; for negative numbers
                      02348 
00096C                02349 Test_Bit16_U1
00096C 010?           02350         banksel ADC_Value1
00096E B0??           02351         btfsc   ADC_Value1,0
000970 80??           02352         bsf             Multipland1,0                   ; MSB = 1 ---> 2^16
                      02353 
                      02354 ;       movff   ADC_Value1,Multipland1  ; bit 0 (=B16) is taken care of already
000972 C??? F???      02355         movff   ADC_Value2,Multipland2
000976 C??? F???      02356         movff   ADC_Value3,Multipland3
                      02357 
                      02358 ;------------------------------------
                      02359 
00097A 010?           02360         banksel IsitForU5_Volt
00097C 90??           02361         bcf             IsitForU5_Volt,0                ; for U1, current measurement
                      02362 
00097E EC?? F???      02363         call    Multiply_24x24Bits_ADC  ; Raw ADC value (3 bytes) * LSB (3 byes)
                      02364                                                                         ; LSB = 15.625 uV
                      02365                                                                         ; Actual multiplication  = Raw A
                            DC values (3 bytes) * 15.625/Gain settings = true input values
                      02366 
                      02367 
000982 010?           02368         banksel Product1
000984 C??? F???      02369         movff   Product1,countT6        ; MSB for gain =2,4,8
000988 C??? F???      02370         movff   Product2,countT5        ; LSB for gain =1
00098C C??? F???      02371         movff   Product3,countT4
000990 C??? F???      02372         movff   Product4,countT3
000994 C??? F???      02373         movff   Product5,countT2
000998 C??? F???      02374         movff   Product6,countT1        ; LSB
                      02375 
                      02376 ;------- Note ---------------------------------------------------
                      02377 ; The voltage measured here with gain of 8 has 10^-12 unit
                      02378 ;----------------------------------------------------------------
                      02379 
                      02380 ;       call    Bin48_bcd_volts
                      02381 ;       banksel VoltageOrCurrent
                      02382 ;       bcf             VoltageOrCurrent,0              ; this is current
                      02383 ;       call    Display_Results_Current
                      02384 
                      02385 ; test
                      02386 ;       btfsc   Gain_Selected,0
                      02387 ;       banksel VoltageOrCurrent
MPASM  5.1    FUELGAUGEAPPNOTE_MAIN_VER1.ASM   12-18-2007  18:09:33         PAGE 50


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      02388 ;       bcf             VoltageOrCurrent,0              ; this is current
                      02389 ;       clrf    Gain_Selected
                      02390 ;       call    Display_Results_Current
                      02391 
                      02392 ;------------------------------------------------------
                      02393 ; test results
                      02394 ; The voltage measured on the current sensor = 0.00005664 V. 
                      02395 ; I = 3.944V/1K = 3.944 mA
                      02396 ; R_sensor = 0.00005664/3.944mA = 0.0144 ohms. 
                      02397 ;------------------------------------------------------
                      02398 
                      02399         
00099C                02400 Currents_byUsingU1
                      02401 ; Algorithm: It needs to multilply (1/resistor) to get current  
                      02402 ; Voltage ---> 6 bytes.
                      02403 ; Current ----> 2 bytes
                      02404 ; Results ----> 8 bytes
                      02405 
                      02406 ;------------------testing Divide routine -------------
                      02407 
00099C                02408 testing_Divider_U1 ;    ---> tested successful
                      02409 
                      02410 ; Dividend6: MSB --> returned values
                      02411 ; Dividend1: LSB
                      02412 ; Divisor3      ; MSB   ---> Divisor (Resistor Values)
                      02413 ; Divisor1      ; LSB
                      02414 ; Product6 ; MSB
                      02415 ; Product1 ; LSB
                      02416 
                      02417 ;       banksel Divisor1
                      02418 ;       movlw   b'00000100'
                      02419 ;       movwf   Divisor1                                ; LSB
                      02420 ;       movlw   b'00010010'
                      02421 ;       movwf   Divisor2
                      02422 ;       movlw   b'00010001'
                      02423 ;       movwf   Divisor3                                ; MSB
                      02424 ;
                      02425 ;       banksel Product1
                      02426 ;       movlw   b'00010001'
                      02427 ;       movwf   Product1                        ; LSB
                      02428 ;       movlw   b'11111111'
                      02429 ;       movwf   Product2
                      02430 ;       movlw   b'11111111'
                      02431 ;       movwf   Product3
                      02432 ;       movlw   b'11111111'
                      02433 ;       movwf   Product4        
                      02434 ;       movlw   b'11111111'
                      02435 ;       movwf   Product5
                      02436 ;       movlw   b'11111111'
                      02437 ;       movwf   Product6                        ; MSB
                      02438 ;---------------------------------------------------------
                      02439 
                      02440 ;-------------------------------------------------------------------------------------------------------
MPASM  5.1    FUELGAUGEAPPNOTE_MAIN_VER1.ASM   12-18-2007  18:09:33         PAGE 51


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                            ----
                      02441 
                      02442 ; Calculate current = V/R = Dividend
                      02443 ; enter resistor value here
                      02444 ; 0.4 ohms ---> b'0000-0100' and x10
                      02445 ;----------------------------------------
00099C 010?           02446         banksel Divisor3
00099E 0E00           02447         movlw   b'00000000'
0009A0 6E??           02448         movwf   Divisor3                ; MSB
0009A2 0E00           02449         movlw   b'00000000'
0009A4 6E??           02450         movwf   Divisor2
0009A6 0E04           02451         movlw   b'00000100'             ; 0.4 ohms x 10
0009A8 0E16           02452         movlw   b'00010110'             ; 2.2 ohms x 10
0009AA 0E0F           02453         movlw   b'00001111'             ; 1.5 ohms x 10
0009AC 0E0A           02454         movlw   b'00001010'             ; 1 ohm x 10
                      02455 
0009AE 6E??           02456         movwf   Divisor1                ; LSB
                      02457 ;----------------------------------------
                      02458 
                      02459 ; 1.5 ohms --> 1500 ohms (multiplied x1000) for unit = uA
                      02460 ;1500 dec ===> 5DC in hex
                      02461 ;       banksel Divisor3
                      02462 ;       movlw   0x00
                      02463 ;       movwf   Divisor3                ; MSB
                      02464 ;       movlw   0x05
                      02465 ;       movwf   Divisor2
                      02466 ;       movlw   0xDC                    ; 1500 ohms ---> multiplied 1000 times. It use 0.015 ohms but ac
                            tual resistor value becomes much higher (1.5 ohms) due to solder resistor
                      02467 ;       movwf   Divisor1                ; LSB
                      02468 
                      02469 ;------- new: For Proto Typed Units ----------
                      02470 ; 0.015 ohms --> 15000 ohms (multiplied x1000000) for unit = uA
                      02471 ;15000 dec ===> 3A98 in hex
0009B0 010?           02472         banksel Divisor3
0009B2 0E00           02473         movlw   0x00
0009B4 6E??           02474         movwf   Divisor3                ; MSB
0009B6 0E3A           02475         movlw   0x3A
0009B8 6E??           02476         movwf   Divisor2
0009BA 0E98           02477         movlw   0x98                    ; 15000 ohms ---> multiplied 1000000 times. 
0009BC 6E??           02478         movwf   Divisor1                ; LSB
                      02479 
                      02480 
                      02481 ;------- Final_1: For 1st Production Units ----------
                      02482 ; The contact resistance is much less than protyped units
                      02483 
                      02484 ; 0.01 ohms --> 10000 ohms (multiplied x1000000) for unit = uA
                      02485 ;10000 dec ===> 2710 in hex
0009BE 010?           02486         banksel Divisor3
0009C0 0E00           02487         movlw   0x00
0009C2 6E??           02488         movwf   Divisor3                ; MSB
0009C4 0E27           02489         movlw   0x27
0009C6 6E??           02490         movwf   Divisor2
0009C8 0E10           02491         movlw   0x10                    ; 10000 ohms (actual value = 0.01 ohm) ---> multiplied 1000000 t
MPASM  5.1    FUELGAUGEAPPNOTE_MAIN_VER1.ASM   12-18-2007  18:09:33         PAGE 52


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                            imes. 
0009CA 6E??           02492         movwf   Divisor1                ; LSB
                      02493 
                      02494 
                      02495 ;------- Final_2: For 2nd Production Units ----------
                      02496 ; The contact resistance is much less than protyped units
                      02497 ; The first production unit give about 18 - 20 mA. 
                      02498 ; Expected about 15 mA. So, let me use 0.013 ohms :
                      02499 
                      02500 ; 0.0135 ohms --> 13500 ohms (multiplied x1000000) for unit = uA
                      02501 ;13500 dec ===> 32C8 in hex
0009CC 010?           02502         banksel Divisor3
0009CE 0E00           02503         movlw   0x00
0009D0 6E??           02504         movwf   Divisor3                ; MSB
0009D2 0E34           02505         movlw   0x34
0009D4 6E??           02506         movwf   Divisor2
0009D6 0EBC           02507         movlw   0xBC                    ; 13500 ohms ---> multiplied 1000000 times. 
0009D8 6E??           02508         movwf   Divisor1                ; LSB
                      02509 
                      02510 
                      02511 
                      02512 
                      02513 ;-------------------------------------------------------------------------------------------------------
                            -------
                      02514 ; Division Results:
                      02515 ; Suppose it got V = 60 uV with Gain = x8 ---> Actual V = 60 uV/8 = 7.5 uV --> 7 hex (lose 0.5)
                      02516 ; 1. Unit after Multiplication: 
                      02517 ;    ( ) x (1953125)x 10^-6 ---> (15.625/8 = 1.953125uV --> 1953125 x 10^-6 x 10^-6)
                      02518 ;    Here it was multiplied 1953125, and there is 10^-12 deficit in the register value
                      02519 ;    then, it is divided by R (15000). Actual R value = 0.015 ohms. This means it has 10^-6 deficit.
                      02520 ;    Now the resulting value is in uA. 
                      02521 ;    I = () * 10^-12/(15000 * 10^-6) = () x 10^6 = () uA
                      02522 ; 2. Maximum Values:
                      02523 ; Suppose the ADC value is 2^18 =262144
                      02524 ; Multiplication results =  262144 * 1953125 (Gain = 8) = 512000000000 (dec) = 77-35-94-00-00 (hex) = 5 
                            bytes
                      02525 ; 
                      02526 ; 3. Example:
                      02527 ; (a) if Vr = 2.047V at current sensor
                      02528 ; (a1)   2^17*15.625/8 (Vr = 0.256V) = 256000 x 10^6 uAs (Deficit -->10^-12)   
                      02529 ; (a2) (   )/15000 = 17066536(dec) = 1046A28(hex)
                      02530 ;  So, the worst case (Vr = 2.048V, I = 136.5A), the current output has 5 bytes
                      02531 ; (b) In typical cases (high side), Vr = 1.5 mV for I = 100 mA:
                      02532 ; (b1) Vr=0.0015V = 1500 x 10^6 uAs (Deficit = 10^12)
                      02533 ; (b2) (  )/15000 = 100000 (dec) = 1-86-A0 (hex) --> 3 bytes for 100 mA load. 
                      02534 ;-------------------------------------------------------------------------------------------------------
                            -------
                      02535 ; Unit of current becomes uAs
                      02536 ;-------------------------------------------------
0009DA EC?? F???      02537         call    Divide_6by_3Bytes               ; Voltage(6 bytes) div. R (3 byes) = Current
                      02538 
                      02539 
                      02540 ;-------------------------------------------------
MPASM  5.1    FUELGAUGEAPPNOTE_MAIN_VER1.ASM   12-18-2007  18:09:33         PAGE 53


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      02541 ; 
                      02542 ;  Divide_6by_3Bytes --->       Input:  Product1 (MSB) + Product2 + Product3 + Product4 + Product5 + Pro
                            duct6(LSB) 
                      02543 ;                                                                       and Divisor3 (MSB) + Divisor2 + 
                            Divisor1 (LSB)
                      02544 ;                                                       Output:         
                      02545 
                      02546 ;                                                               Dividend6       ; MSB for gain =2,4,8
                      02547 ;                                                               Dividend5       ; MSB for gain =1
                      02548 ;                                                               Dividend4
                      02549 ;                                                               Dividend3
                      02550 ;                                                               Dividend2
                      02551 ;                                                               Dividend1       ; LSB
                      02552 ;--------------------------------------------------
                      02553 
0009DE 0012           02554         return
                      02555 
                      02556 
0009E0                02557 Display_Current
                      02558 ;-----------------------------------------------
                      02559 ;       Display current in LCD Line 2
                      02560 ;-----------------------------------------------
                      02561 
                      02562 ;Enter here to display currents in LCD Line 2
                      02563 
0009E0 010?           02564         banksel countT1
0009E2 6A??           02565         clrf    countT1
0009E4 6A??           02566         clrf    countT2
0009E6 6A??           02567         clrf    countT3
0009E8 6A??           02568         clrf    countT4
0009EA 6A??           02569         clrf    countT5
0009EC 6A??           02570         clrf    countT6
                      02571 
                      02572 ; ----- Note ---------------------------------
                      02573 
                      02574 ; The unit of resulting Current is uAs
                      02575 ;---------------------------------------------
                      02576 
                      02577 
                      02578 ; Arrange Current Array for LCD display
                      02579 
0009EE 010?           02580         banksel Dividend1
0009F0 C??? F???      02581         movff   Dividend6,countT6       ; MSB for gain =2,4,8
0009F4 C??? F???      02582         movff   Dividend5,countT5       ; MSB for gain =1
0009F8 C??? F???      02583         movff   Dividend4,countT4
0009FC C??? F???      02584         movff   Dividend3,countT3
000A00 C??? F???      02585         movff   Dividend2,countT2
000A04 C??? F???      02586         movff   Dividend1,countT1       ; LSB
                      02587 
                      02588 ;       goto    Display_Results
                      02589 ;       call    Bin48_bcd_volts
000A08 EC?? F???      02590         call    Bin48_bcd_currents
000A0C EC?? F???      02591         call    Display_Results_Current
MPASM  5.1    FUELGAUGEAPPNOTE_MAIN_VER1.ASM   12-18-2007  18:09:33         PAGE 54


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      02592 ; Unit of current = uAs
                      02593 
                      02594 ;--------------------------------------------
                      02595 ;       banksel Voltage_Dispayed
                      02596 ;       bcf             Voltage_Dispayed,0      
                      02597 
000A10 0012           02598         return
                      02599 ;-------------------------------------------------------------------------------------
                      02600 
000A12                02601 Chk_BatIfLowerthan2V    
                      02602 ;--------------------------------------------------------------------------------------
                      02603 ; This routine does the followig tasks:
                      02604 ; 1. When first powered, it check if Batry is not connected or not ( Battery Volt < 1V)
                      02605 ; 2. After first powerd, it check if the battery down less than 2V (50% of 4V). 
                      02606 ; 3. It gives choice to recharge
                      02607 ;--------------------------------------------------------------------------------------
                      02608 
                      02609 ;----------- testing : Simulation with knwon ADC values -------------------------------
                      02610 
                      02611 ;       bra             skip_simulation_U5      ; Voltage
                      02612 ;Simulation
                      02613 ; for 2.048V
                      02614 ;       banksel ADC_Value1
                      02615 ;       movlw   0x01                            ; MSB
                      02616 ;       movwf   ADC_Value1
                      02617 ;       movlw   0xFF
                      02618 ;       movwf   ADC_Value2
                      02619 ;       movlw   0xFF
                      02620 ;       movwf   ADC_Value3                      ; LSB
                      02621 
                      02622 
                      02623 ; for 1.024 V
                      02624 ;       banksel ADC_Value1
                      02625 ;       movlw   0x00
                      02626 ;       movwf   ADC_Value1
                      02627 ;       movlw   0xFF                            ; MSB
                      02628 ;       movwf   ADC_Value2
                      02629 ;       movlw   0xFF                            ; LSB
                      02630 ;       movwf   ADC_Value3
                      02631 
                      02632 ;       test done
                      02633 
                      02634 ;----- Check if it needs battery charging ----------------
                      02635 ;       banksel ChargingBat
                      02636 ;       btfsc   ChargingBat,0
                      02637 ;       goto    ChargingBattery
                      02638 
                      02639 
                      02640 ;---------------- Battey Voltage below 50%? --------------
                      02641 ; for 1.024 V = 00FFFF(hex) --> 00FFFF (hex)x 15.625 (dec)uV = 1.024V  --> 
                      02642 ; Actually this equivalents to (1.024)x 2 = 2.048 V because it uses a voltage divider (50%) 
                      02643 ; and therefoer multiplying  by two for the input source.
                      02644 ; Now the following routin checks if the measured voltage is less than 2.048V (below 50% of original vol
MPASM  5.1    FUELGAUGEAPPNOTE_MAIN_VER1.ASM   12-18-2007  18:09:33         PAGE 55


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                            tage) or not.
                      02645 ; The action is as follows:
                      02646 ; (1) Measured Votage > 2.028V  --->    Keep doing the normal job as usual
                      02647 ; (2) Measured Voltage < or = 2.048V ---> Give a message for charging while doing the normal job
                      02648 ;     (a) If charging is selected, then it charge by bring done the RC6 pin (PROG pin for U3).
                      02649 ;             During the charging it shows the votlage, current and remaining fules, etc.
                      02650 ;         (b) If charging is not selected ---> Keep doing the normal job while still showing the 
                      02651 ;                 Selection choice. 
                      02652 ;---------------------------------------------------------------------------             
                      02653 
                      02654 ; Measured ADC Value
                      02655 
                      02656 ;       banksel ADC_Value1
                      02657 ;       btfsc   ADC_Value1,1                    ; 1 --> negative number, 0 --> positive number
                      02658 ;       goto    CheckIfLessThan1V               ; Its negative or close to negative: 
                      02659                                                                         ; (a) Battery is not attaced or 
                            (b) battery is fully discharged. 
                      02660                                                                         ; Consider for charging action
                      02661 ; Working fine: Verified ------------------------------------------------------
                      02662 
000A12 010?           02663         banksel ADC_Value1
000A14 6A??           02664         clrf     SubtractByteA  ; LSB
000A16 6A??           02665         clrf     SubtractByteA+1
000A18 6A??           02666         clrf     SubtractByteA+2
                      02667 
000A1A C??? F???      02668         movff   ADC_Value3_temp, SubtractByteA+3
000A1E C??? F???      02669         movff   ADC_Value2_temp, SubtractByteA+4        
000A22 C??? F???      02670         movff   ADC_Value1_temp, SubtractByteA+5 ; MSB
                      02671 
                      02672 ;----------- Reference Number for Comparison --------------
                      02673 ; 50% of 2.048 = 1.024 = (00FFFF, hex) --> actual battery voltage = 2.048 because of voltage divider
                      02674 ; ---> Put this one from MSB, and put "0s" towards LSB.
                      02675         
000A26 010?           02676         banksel SubtractByteB
000A28 0E00           02677         movlw   0x00
000A2A 6E??           02678         movwf   SubtractByteB                           ; LSB   
000A2C 6E??           02679         movwf   SubtractByteB+1
000A2E 6E??           02680         movwf   SubtractByteB+2
000A30 0EFF           02681         movlw   0xFF
000A32 6E??           02682         movwf   SubtractByteB+3 
000A34 6E??           02683         movwf   SubtractByteB+4                         
000A36 0E00           02684         movlw   0x00
000A38 6E??           02685         movwf   SubtractByteB+5                         ; MSB
                      02686 
                      02687 ;--------------------------------------------------------------
                      02688 ;       SubtractByteA+5 (MSB)  ....... SubtractByteA (LSB)
                      02689 ;     - Current_Used+5 (MSB) ......... Current_Used (LSB)
                      02690 ;    =  SubtractByteA+5 (MSB)  ....... SubtractByteA (LSB)
                      02691 ;
                      02692 ;       Note:   Carry  = 0: Success --> A > B or A == B
                      02693 ;                       Carry  = 1: Fail --->  A <  B
                      02694 ;-------------------------------------------------------------- 
000A3A EC?? F???      02695         call    Subtract_6Bytes_6Bytes   
MPASM  5.1    FUELGAUGEAPPNOTE_MAIN_VER1.ASM   12-18-2007  18:09:33         PAGE 56


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      02696 
000A3E 010?           02697         banksel SubtractByteA
000A40 6A??           02698         clrf    SubtractByteA   ; LSB
000A42 6A??           02699         clrf    SubtractByteA+1
000A44 6A??           02700         clrf    SubtractByteA+2
000A46 6A??           02701         clrf    SubtractByteA+3
000A48 6A??           02702         clrf    SubtractByteA+4
000A4A 6A??           02703         clrf    SubtractByteA+5 ; MSB
                      02704 
                      02705 ; Need to check the following return:
000A4C A0D8           02706         btfss   STATUS,C
000A4E D???           02707         bra             CheckedHigherThan2V             ; sucessful --> Battery volts > 2V
                      02708 ;       bra             CheckedLessThan2V               ; Unsuccessful --> Battery Volt < 2V
                      02709 
000A50                02710 CheckedLessThan2V
                      02711 
000A50 010?           02712         banksel LessThan1or2V
000A52 82??           02713         bsf             LessThan1or2V, 1                ;       LessThan1or2V(0) --> Battery volt less t
                            han 1V,         
                      02714                                                                         ;   LessThan1or2V(1) --> Battery
                             volt less than 2V, 
000A54 D???           02715         bra             CheckDonefor2V
000A56                02716 CheckedHigherThan2V
000A56 6A??           02717         clrf    LessThan1or2V                   ; Battery value is still good -> >50%
000A58                02718 CheckDonefor2V
000A58 0012           02719         return
                      02720 
                      02721 
                      02722 
000A5A                02723 Chk_BatIfLowerthan0_75V 
                      02724 ;--------------------------------------------------------------------------------------
                      02725 ; This routine does the followig tasks:
                      02726 ; 1. If the battery voltage (1.5V AAA Battery) is less than 0.75V (50%)
                      02727 ; 2. Or if Battery is not connected at input pin
                      02728 ; 3. It turns on Buzzer and Display Message on LCD
                      02729 ;--------------------------------------------------------------------------------------
                      02730 
                      02731 ;----------- 2.1 V Reference value at U6 --------------
                      02732 ; 4.2 V Bvat is equivalent to 2.1V at U5 input due to the voltage divider. 
                      02733 ; Hex Value of  2.1V --->  (ADC Value) * 15.625 uV = 2.1V --> ADC Value 
                      02734 ;                               = 134400 (dec)--->20D00 (hex)
                      02735 ;                       ---> (000000020D00, hex) --> put into 6 registers. 
                      02736 ;
                      02737 ; Since 4.2V is the max charging value, this demo use 4.0 V as a full charging condition. 
                      02738 ;
                      02739 ; 4.0V Battery is equivalent to 2.0V at U5 input due to the voltage divider. 
                      02740 ; Hex Value of  2.0V --->  (ADC Value) * 15.625 uV = 2.0V --> ADC Value 
                      02741 ;                               = 128000 (dec)--->1F400 (hex)
                      02742 ;                       ---> (00000001F400, hex) --> put into 6 registers.
                      02743 ; Hex value of 2.1V  --->  (ADC Value) * 15.625 uV = 2.1V --> ADC Value 
                      02744 ;                               = 134400 (dec)--->20D00 (hex)
                      02745 ;                       ---> (000000020D00, hex) --> put into 6 registers. 
                      02746 ;-------------------------------------------------------
MPASM  5.1    FUELGAUGEAPPNOTE_MAIN_VER1.ASM   12-18-2007  18:09:33         PAGE 57


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      02747 
                      02748 ;       ADC Values ---> ADC_Value1 (MSB) + ADC_Value2 + ADC_Value3 (LSB)  
                      02749 
                      02750 
                      02751 ;-------------------------------------------------------------------------------------
000A5A 010?           02752         banksel ADC_Value1
000A5C 6A??           02753         clrf     SubtractByteA  ; LSB
000A5E 6A??           02754         clrf     SubtractByteA+1
000A60 6A??           02755         clrf     SubtractByteA+2
                      02756 
000A62 C??? F???      02757         movff   ADC_Value3_temp, SubtractByteA+3
000A66 C??? F???      02758         movff   ADC_Value2_temp, SubtractByteA+4        
000A6A C??? F???      02759         movff   ADC_Value1_temp, SubtractByteA+5 ; MSB
                      02760 
                      02761 ;----------- Examples ---------------------------
                      02762 ; 50% of 2.048 = 1.024 = (00FFFF00, hex) --> actual battery voltage = 2.048 because of voltage divider
                      02763 
                      02764 ; Hex Value of  2.0V --->  (ADC Value) * 15.625 uV = 2.0V --> ADC Value 
                      02765 ;                               = 128000 (dec)--->1F400 (hex)---> (01F400, hex) --> put this value into 
                            6 registers, MSB first. 
                      02766 ;-------------> "01-F4-00-00-00-00"
                      02767         
                      02768 ; Hex value of 2.1V  --->  (ADC Value) * 15.625 uV = 2.1V --> ADC Value 
                      02769 ;                               = 134400 (dec)--->20D00 (hex)---> (020D00, hex) --> put into 6 registers
                            , MSB first
                      02770 ;------------> "02-0D-00-00-00-00"            
                      02771 
                      02772 
                      02773 ; Hex Value of  0.375V --->  (ADC Value) * 15.625 uV = 0.375V --> ADC Value 
                      02774 ;                               = 24000 (dec)--->5DC0 (hex)---> (005DC0, hex) --> put this value into 6 
                            registers, MSB first. 
                      02775 ;-------------> "00-5D-C0-00-00-00"
                      02776 
000A6E 010?           02777         banksel SubtractByteB
000A70 0E00           02778         movlw   0x00
000A72 6E??           02779         movwf   SubtractByteB                           ; LSB   
000A74 6E??           02780         movwf   SubtractByteB+1
000A76 6E??           02781         movwf   SubtractByteB+2
                      02782         
000A78 0EC0           02783         movlw   0xC0
000A7A 6E??           02784         movwf   SubtractByteB+3 
                      02785 
000A7C 0E5D           02786         movlw   0x5D
000A7E 6E??           02787         movwf   SubtractByteB+4                         
000A80 0E00           02788         movlw   0x00
000A82 6E??           02789         movwf   SubtractByteB+5                         ; MSB
                      02790 ;--------------------------------------------------------------
                      02791 
000A84 EC?? F???      02792         call    Subtract_6Bytes_6Bytes   
                      02793 ;--------------------------------------------------------------
                      02794 ;       SubtractByteA+5 (MSB)  ....... SubtractByteA (LSB)
                      02795 ;     - Current_Used+5 (MSB) ......... Current_Used (LSB)
                      02796 ;    =  SubtractByteA+5 (MSB)  ....... SubtractByteA (LSB)
MPASM  5.1    FUELGAUGEAPPNOTE_MAIN_VER1.ASM   12-18-2007  18:09:33         PAGE 58


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      02797 ;
                      02798 ;       Note:   Carry  = 0: Success --> A > B or A == B
                      02799 ;                       Carry  = 1: Fail --->  A < or  B
                      02800 ;-------------------------------------------------------------- 
000A88 010?           02801         banksel SubtractByteA
000A8A 6A??           02802         clrf    SubtractByteA   ; LSB
000A8C 6A??           02803         clrf    SubtractByteA+1
000A8E 6A??           02804         clrf    SubtractByteA+2
000A90 6A??           02805         clrf    SubtractByteA+3
000A92 6A??           02806         clrf    SubtractByteA+4
000A94 6A??           02807         clrf    SubtractByteA+5 ; MSB
                      02808 
                      02809 ; Need to check the following return:
000A96 A0D8           02810         btfss   STATUS,C
000A98 D???           02811         bra             ItsHigherThan075V                       ; Sucessful --> Battery volts > 0.75 (ac
                            tually 0.375V in ADC input)
                      02812 ;       bra             Its_LessThan075V                        ; Unsuccessful --> Battery Volt < 0.75 V
                             (actually 0.375V in ADC input)
000A9A                02813 Its_LessThan075V
000A9A 010?           02814         banksel LowerThan0_75V
000A9C 80??           02815         bsf             LowerThan0_75V,0                        ; 1: lower than 0.75V, 0: higher than 0.
                            75V
                      02816 
000A9E 0012           02817         return  
000AA0                02818 ItsHigherThan075V
000AA0 010?           02819         banksel LowerThan0_75V
000AA2 6A??           02820         clrf    LowerThan0_75V                          ; 1: lower than 0.75V, 0: higher than 0.75V
000AA4 0012           02821         return  
                      02822 
                      02823 
                      02824 
                      02825 
                      02826 ;-----------------------------------------------------------------
000AA6                02827 Disp_BatLessThan2V
                      02828 ; Indicates the Battery Volt is Below 2V and get User's Input
                      02829 
000AA6 010?           02830         banksel PORTBInt_Found
000AA8 9C??           02831         bcf             PORTBInt_Found,6                        ; SW1
                      02832         
000AAA 010?           02833         banksel ptr_pos
000AAC 0E40           02834         movlw   .64                             ;"BatteryVolt.<50%"             ;64
000AAE 6E??           02835         movwf   ptr_pos
000AB0 EC?? F???      02836         call    stan_char_1
                      02837 ;       call    delay_1s                ;delay for display
                      02838 ;       call    delay_1s                ;delay for display
                      02839 
                      02840 
000AB4 010?           02841         banksel ptr_pos
000AB6 0E50           02842         movlw   .80                             ;"SW1:for Charging"             ;80
000AB8 6E??           02843         movwf   ptr_pos
000ABA EC?? F???      02844         call    stan_char_2
000ABE 0012           02845         return
                      02846 
MPASM  5.1    FUELGAUGEAPPNOTE_MAIN_VER1.ASM   12-18-2007  18:09:33         PAGE 59


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000AC0                02847 Disp_BatLessThan1V
                      02848 
                      02849 ; Indicates the Battery Volt is Below 1V or no connected and get User's Input
                      02850 
000AC0 010?           02851         banksel PORTBInt_Found
000AC2 9C??           02852         bcf             PORTBInt_Found,6                        ; SW1
000AC4 010?           02853         banksel ptr_pos
000AC6 0EE0           02854         movlw   .224                            ;"BatteryVolt < 1V"     ;224 
000AC8 6E??           02855         movwf   ptr_pos
000ACA EC?? F???      02856         call    stan_char_1
                      02857 ;       call    delay_1s                ;delay for display
                      02858 ;       call    delay_1s                ;delay for display
000ACE 010?           02859         banksel ptr_pos
000AD0 0E50           02860         movlw   .80                             ;"SW1:for Charging"             ;80
000AD2 6E??           02861         movwf   ptr_pos
000AD4 EC?? F???      02862         call    stan_char_2
000AD8 0012           02863         return
                      02864 
                      02865 
000ADA                02866 ChekIfWantRecharge
                      02867 
                      02868 ;       bcf             PORTBInt_Found,6                        ; SW1
                      02869 ;----------     
000ADA EC?? F???      02870         call    Buzzer1p1KHz_ON
000ADE EC?? F???      02871         call    delay_100ms                     ;delay for display
                      02872 ;       call    delay_1s                        ;delay for display
000AE2 EC?? F???      02873         call    Buzzer_OFF
                      02874 ;---------
                      02875 
000AE6 EC?? F???      02876         call    delay_1s                        ;delay for displaying mesage
000AEA EC?? F???      02877         call    delay_1s                        ;delay for displaying mesage
                      02878 
                      02879 
000AEE 010?           02880         banksel temp_1
Warning[202]: Argument out of range.  Least significant bits used.
000AF0 0E00           02881         movlw   .256
000AF2 6E??           02882         movwf   temp_1
000AF4                02883 Chk_sw1forCharge
                      02884 ;       call    delay_1s                        ;delay for display
                      02885 ;       call    delay_1s                        ;delay for display
                      02886 
000AF4 010?           02887         banksel temp_1
000AF6 2E00           02888         decfsz  temp_1,1
000AF8 D???           02889         bra             sw1forCharge
                      02890 ;       goto    Continue_NormalMeas             ; time expired --> go to normal measurement mode
000AFA                02891 NotWantToCharge 
000AFA 0C00           02892         retlw   0
                      02893         
000AFC                02894 sw1forCharge
000AFC 010?           02895         banksel PORTBInt_Found
000AFE AC??           02896         btfss   PORTBInt_Found,6                ; sw1                   
000B00 EF?? F???      02897         goto    Chk_sw1forCharge
000B04                02898 WantToCharge    
MPASM  5.1    FUELGAUGEAPPNOTE_MAIN_VER1.ASM   12-18-2007  18:09:33         PAGE 60


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000B04 0C01           02899         retlw   1
                      02900 
                      02901 
                      02902 
000B06                02903 RechargeBattery
                      02904 ;-------------------------------------------------------------------------------
                      02905 ; This routin charing battery
                      02906 ;-------------------------------------------------------------------------------
000B06                02907 Start_Charging
                      02908 ;       banksel PORTC
                      02909 ;       bcf             PORTC, 6                ; Make U3 Charger output Available ---> Apply logic low 
                            at PROG pin of U3
                      02910 
000B06 010?           02911         banksel ChargingBat
000B08 6A??           02912         clrf    ChargingBat     
000B0A 80??           02913         bsf             ChargingBat,0
                      02914 
                      02915 
000B0C 010F           02916         banksel PORTC
000B0E 8C94           02917         bsf             TRISC,6                 ; tristate the PROG pin to input (high impedance) during
                             charging 
                      02918                                                         ; ---> Important to keep the PROG pin in high im
                            ped
                      02919                                                         ; during charing mode. If it is low, it draws a 
                            lot of current and the STAUS pin has
                      02920                                                         ; unpredictable value !
                      02921         
                      02922 
                      02923 ; Training and App Note version with rechargeable Battery
                      02924 ;       data    "Disconnect JP1 &"              ;160    ---> For rechargeable battery
                      02925 ;       data    "ConntJP2,Push S1"              ;176
                      02926 ;---------------------------------------
                      02927 
                      02928 
000B10 010?           02929         banksel ptr_pos
000B12 0EA0           02930         movlw   .160                            ;       "Disconnect JP1 &"      ;160    ---> For recharg
                            eable battery
000B14 6E??           02931         movwf   ptr_pos
000B16 EC?? F???      02932         call    stan_char_1
                      02933 
                      02934 
000B1A 010?           02935         banksel ptr_pos
000B1C 0EB0           02936         movlw   .176                            ;"ConntJP2,Push S1"             ;176
000B1E 6E??           02937         movwf   ptr_pos
000B20 EC?? F???      02938         call    stan_char_2
                      02939 
000B24 EC?? F???      02940         call    delay_1s                        ;delay for display
000B28 EC?? F???      02941         call    delay_1s                        ;delay for display
                      02942 
                      02943 ;--------------------------------------------------------
000B2C 010?           02944         banksel PORTBInt_Found
000B2E 6A??           02945         clrf    PORTBInt_Found
                      02946 
MPASM  5.1    FUELGAUGEAPPNOTE_MAIN_VER1.ASM   12-18-2007  18:09:33         PAGE 61


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      02947 
000B30                02948 S1forReadyToCharge                                      ; Checking SW1 (RB6)
000B30 010?           02949         banksel PORTBInt_Found
000B32 AC??           02950         btfss   PORTBInt_Found,6                ; SW1 (RB6)                             
000B34 D???           02951         bra             S1forReadyToCharge
                      02952 
000B36 010?           02953         banksel PORTBInt_Found
000B38 6A??           02954         clrf    PORTBInt_Found
                      02955 
                      02956 ;--------------------------------------------------------
000B3A                02957 ChargingBattery
000B3A EC?? F???      02958         call    Buzzer_OFF
                      02959 
000B3E 010?           02960         banksel PORTBInt_Found
000B40 9C??           02961         bcf             PORTBInt_Found,6        ; SW1
                      02962 
                      02963         
000B42                02964 Still_Charging  
000B42 010?           02965         banksel ptr_pos
000B44 0E60           02966         movlw   .96                                     ;" Under Charging "             ;96 
000B46 6E??           02967         movwf   ptr_pos
000B48 EC?? F???      02968         call    stan_char_1
                      02969 ;       call    delay_1s                        ;delay for display
                      02970 ;       call    delay_1s                        ;delay for display
                      02971 
                      02972 
000B4C 010?           02973         banksel ptr_pos
000B4E 0E70           02974         movlw   .112                            ;"SW1:StopCharging"             ;112
000B50 6E??           02975         movwf   ptr_pos
000B52 EC?? F???      02976         call    stan_char_2
000B56 EC?? F???      02977         call    delay_1s                        ;delay for display
000B5A EC?? F???      02978         call    delay_1s                        ;delay for display
                      02979 
                      02980 
                      02981 ;-------Disabled Checking PortB,3 ----------------------        
                      02982 ;       banksel PORTB
                      02983 ;       btfsc   PORTB, 3                ; Testing STATUS pin: 
                      02984                                                         ; high: Charge completed (4.2V), low: Still Char
                            ging (less than 4.2V)
                      02985                                                         ; Note that the MCP73831 start charging at below
                             4.05V and stop charging (Status Bit = high) at 4.2V
                      02986 ;       goto    Charge_Done             ;Yes, Its charged enough
                      02987 
                      02988 ;       bra             CheckIfHigerThan4V
                      02989 ;-------------------------------------------------------
                      02990 
000B5E                02991 CheckIfHigerThan4V                      ; Status bit = high, but it is not very accurate enough in the b
                            oard,
                      02992                                                         ; so here it checks battery volt also.
                      02993                                                         ; If Vbat > 4.2V ----> Charge completed. 
                      02994                                                         ; If Vbat < 4.2V ----> stay in charging loop
                      02995         
                      02996 ;-----------------------------
MPASM  5.1    FUELGAUGEAPPNOTE_MAIN_VER1.ASM   12-18-2007  18:09:33         PAGE 62


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      02997 ; Check Battery Volts and do the following actions:
                      02998 ; (a) Go to normal measurement if greater than 2V
                      02999 ; (b) Choice if User want to recharge ---> not selected --> go to normal measuremnt, if selected ---> do
                             the charging
                      03000 ;----------------------------- 
000B5E EC?? F???      03001         call    IsBatHigherThan4V       
                      03002 
000B62 010?           03003         banksel HigherThan4V
000B64 A0??           03004         btfss   HigherThan4V,0                  ;1: higher than 4V, 0: less than 4V
000B66 EF?? F???      03005         goto    Cont_ToChargeLoop               ;No, Its less than 4.0V
000B6A EF?? F???      03006         goto    Charge_Done                             ;Yes, Its higher than 4.0V
                      03007 
                      03008 ;------------------------------------------------------
                      03009 
000B6E                03010 Cont_ToChargeLoop
                      03011 
000B6E 010?           03012         banksel temp_1
Warning[202]: Argument out of range.  Least significant bits used.
000B70 0E00           03013         movlw   .256                    ;time delay for display
000B72 6E??           03014         movwf   temp_1
                      03015 
000B74                03016 Chk_forSWChargeStop
                      03017 ;       call    delay_1s                        
                      03018 
000B74 010?           03019         banksel temp_1
000B76 2E00           03020         decfsz  temp_1,1                ;time delay for display
000B78 D???           03021         bra             SwforChargeStop
000B7A EF?? F???      03022         goto    ContinueToLoop
                      03023 
000B7E                03024 SwforChargeStop
000B7E 010?           03025         banksel PORTBInt_Found
000B80 AC??           03026         btfss   PORTBInt_Found,6                ; sw1                   
000B82 EF?? F???      03027         goto    Chk_forSWChargeStop
000B86 EF?? F???      03028         goto    Stop_Charging
                      03029 
                      03030 
000B8A                03031 Charge_Done
000B8A 010?           03032         banksel ChargingBat
000B8C 90??           03033         bcf             ChargingBat,0
                      03034 
000B8E 010?           03035         banksel NotChargedBat
000B90 6A??           03036         clrf    NotChargedBat           ; Battery is fully charged.
                      03037 
                      03038 ;----------------------------------
000B92 010F           03039         banksel PORTC
000B94 9C94           03040         bcf             TRISC,6                         ; make output
000B96 8C82           03041         bsf             PORTC,6                         ; Give "High" to  U3 PROG pin ----> This will st
                            op the Charger output   
                      03042 
000B98 EC?? F???      03043         call    Init_FuelValues         ; Initialize fuel parameters
                      03044 
                      03045 ;----------------------------------
                      03046 
MPASM  5.1    FUELGAUGEAPPNOTE_MAIN_VER1.ASM   12-18-2007  18:09:33         PAGE 63


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000B9C EC?? F???      03047         call    Buzzer1p1To1p5KHz_ON
                      03048 
000BA0 010?           03049         banksel PORTBInt_Found          ; sw1                   
Warning[202]: Argument out of range.  Least significant bits used.
000BA2 6A00           03050         clrf    PORTBInt_Found,6                
                      03051                 
000BA4 EC?? F???      03052         call    Disp_ChargeCompleted            ; in Line 1     
000BA8 EC?? F???      03053         call    Disp_PressS1                            ; in Line 2     
000BAC EC?? F???      03054         call    Wait_SW1Interrupt
                      03055 
000BB0 EC?? F???      03056         call    Buzzer_OFF
                      03057 
000BB4 EC?? F???      03058         call    Disp_DisconnectJP2                      ; in Line 1
000BB8 EC?? F???      03059         call    Disp_ConnectJP1                 ; in Line 2
000BBC EC?? F???      03060         call    Wait_SW1Interrupt
                      03061 
000BC0 EF?? F???      03062         goto    Stop_Charging
                      03063 
                      03064 
                      03065 
000BC4                03066 Stop_Charging
                      03067 
                      03068 ;---------------------------
000BC4 010F           03069         banksel PORTC
000BC6 9C94           03070         bcf             TRISC,6         ; make output           
000BC8 8C82           03071         bsf             PORTC, 6        ; Give "High" to  U3 PROG pin ----> This will stop the Charger o
                            utput   
                      03072 ;---------------------------
000BCA 010?           03073         banksel ChargingBat
000BCC 6A??           03074         clrf    ChargingBat
                      03075 
000BCE 010?           03076         banksel PORTBInt_Found
000BD0 9C??           03077         bcf             PORTBInt_Found,6
                      03078 
000BD2 EC?? F???      03079         call    Buzzer1p1To1p5KHz_ON
000BD6 EC?? F???      03080         call    Buzzer_OFF
                      03081 
                      03082         
000BDA                03083 ContinueToLoop
                      03084 
000BDA 0012           03085         RETURN
                      03086 
                      03087 
                      03088 
                      03089 
                      03090 
000BDC                03091 IsBatHigherThan4V
                      03092 ; Check if Battery Volts higher than 4.2V. 
                      03093 ; This routine is called from "RechargeBattery" routine. 
                      03094 ; This routine is used to verify that the charging battery volts is no greater than 4.2V for safety. 
                      03095 
                      03096 ;----------- 2.1 V Reference value at U6 --------------
                      03097 ; 4.2 V Bvat is equivalent to 2.1V at U5 input due to the voltage divider. 
MPASM  5.1    FUELGAUGEAPPNOTE_MAIN_VER1.ASM   12-18-2007  18:09:33         PAGE 64


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      03098 ; Hex Value of  2.1V --->  (ADC Value) * 15.625 uV = 2.1V --> ADC Value 
                      03099 ;                               = 134400 (dec)--->20D00 (hex)
                      03100 ;                       ---> (000000020D00, hex) --> put into 6 registers. 
                      03101 ;
                      03102 ; Since 4.2V is the max charging value, this demo use 4.0 V as a full charging condition. 
                      03103 ;
                      03104 ; 4.0V Battery is equivalent to 2.0V at U5 input due to the voltage divider. 
                      03105 ; Hex Value of  2.0V --->  (ADC Value) * 15.625 uV = 2.0V --> ADC Value 
                      03106 ;                               = 128000 (dec)--->1F400 (hex)
                      03107 ;                       ---> (00000001F400, hex) --> put into 6 registers.
                      03108 ; Hex value of 2.1V  --->  (ADC Value) * 15.625 uV = 2.1V --> ADC Value 
                      03109 ;                               = 134400 (dec)--->20D00 (hex)
                      03110 ;                       ---> (000000020D00, hex) --> put into 6 registers. 
                      03111 ;-------------------------------------------------------
                      03112 
                      03113 ;       ADC Values ---> ADC_Value1 (MSB) + ADC_Value2 + ADC_Value3 (LSB)  
                      03114 
                      03115 
                      03116 ;-------------------------------------------------------------------------------
000BDC 010?           03117         banksel ADC_Value1
000BDE 6A??           03118         clrf     SubtractByteA  ; LSB
000BE0 6A??           03119         clrf     SubtractByteA+1
000BE2 6A??           03120         clrf     SubtractByteA+2
                      03121 
000BE4 C??? F???      03122         movff   ADC_Value3_temp, SubtractByteA+3
000BE8 C??? F???      03123         movff   ADC_Value2_temp, SubtractByteA+4        
000BEC C??? F???      03124         movff   ADC_Value1_temp, SubtractByteA+5 ; MSB
                      03125 
                      03126 ;----------- Reference Number for Comparison --------------
                      03127 ; 50% of 2.048 = 1.024 = (00FFFF00, hex) --> actual battery voltage = 2.048 because of voltage divider
                      03128 
                      03129 ; Hex Value of  2.0V --->  (ADC Value) * 15.625 uV = 2.0V --> ADC Value 
                      03130 ;                               = 128000 (dec)--->1F400 (hex)---> (01F400, hex) --> put this value into 
                            6 registers, MSB first. 
                      03131 ;-------------> "01-F4-00-00-00-00"
                      03132         
                      03133 ; Hex value of 2.1V  --->  (ADC Value) * 15.625 uV = 2.1V --> ADC Value 
                      03134 ;                               = 134400 (dec)--->20D00 (hex)---> (020D00, hex) --> put into 6 registers
                            , MSB first
                      03135 ;------------> "02-0D-00-00-00-00"            
                      03136 
                      03137 
000BF0 010?           03138         banksel SubtractByteB
000BF2 0E00           03139         movlw   0x00
000BF4 6E??           03140         movwf   SubtractByteB                           ; LSB   
000BF6 6E??           03141         movwf   SubtractByteB+1
000BF8 6E??           03142         movwf   SubtractByteB+2
000BFA 6E??           03143         movwf   SubtractByteB+3 
                      03144 
000BFC 0EF4           03145         movlw   0xF4
000BFE 6E??           03146         movwf   SubtractByteB+4                         
000C00 0E01           03147         movlw   0x01
000C02 6E??           03148         movwf   SubtractByteB+5                         ; MSB
MPASM  5.1    FUELGAUGEAPPNOTE_MAIN_VER1.ASM   12-18-2007  18:09:33         PAGE 65


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      03149 ;-------------------------------------------------------------
                      03150 
000C04 EC?? F???      03151         call    Subtract_6Bytes_6Bytes   
                      03152 ;--------------------------------------------------------------
                      03153 ;       SubtractByteA+5 (MSB)  ....... SubtractByteA (LSB)
                      03154 ;     - Current_Used+5 (MSB) ......... Current_Used (LSB)
                      03155 ;    =  SubtractByteA+5 (MSB)  ....... SubtractByteA (LSB)
                      03156 ;
                      03157 ;       Note:   Carry  = 0: Success --> A > B or A == B
                      03158 ;                       Carry  = 1: Fail --->  A < or  B
                      03159 ;-------------------------------------------------------------- 
000C08 010?           03160         banksel SubtractByteA
000C0A 6A??           03161         clrf    SubtractByteA   ; LSB
000C0C 6A??           03162         clrf    SubtractByteA+1
000C0E 6A??           03163         clrf    SubtractByteA+2
000C10 6A??           03164         clrf    SubtractByteA+3
000C12 6A??           03165         clrf    SubtractByteA+4
000C14 6A??           03166         clrf    SubtractByteA+5 ; MSB
                      03167 
                      03168 ; Need to check the following return:
000C16 A0D8           03169         btfss   STATUS,C
000C18 D???           03170         bra             ItsHigherThan4V                 ; Sucessful --> Battery volts > 4.2 (actually 2.
                            1V in ADC input)
                      03171 ;       bra             Its_LessThan4V                  ; Unsuccessful --> Battery Volt < 4.2 V (actuall
                            y 2.1V in ADC input)
000C1A                03172 Its_LessThan4V
000C1A 010?           03173         banksel HigherThan4V
000C1C 6A??           03174         clrf    HigherThan4V            ;       1: higher than 4V, 0: less than 4V
000C1E 0012           03175         return  
000C20                03176 ItsHigherThan4V
000C20 010?           03177         banksel HigherThan4V
000C22 80??           03178         bsf             HigherThan4V,0                  ;       1: higher than 4V, 0: less than 4V
000C24 0012           03179         return  
                      03180 
                      03181 
                      03182 
                      03183 
                      03184 
                      03185 ;--------------------------------------------------------------
                      03186 ;
                      03187 ; FUNCTION     : INITIALIZE ()                          
                      03188 ;
                      03189 ; DESCRIPTION  : INITIALIZE ALL REGISTERS
                      03190 ;
                      03191 ;--------------------------------------------------------------
000C26                03192 FuelGaugeInit
                      03193 ; Initializing Port A:
                      03194 
000C26 010F           03195         banksel TRISA
000C28 6A??           03196         clrf    Timer0_Interrupt
                      03197 
000C2A 010F           03198         banksel TRISA
000C2C 6A80           03199         clrf    PORTA
MPASM  5.1    FUELGAUGEAPPNOTE_MAIN_VER1.ASM   12-18-2007  18:09:33         PAGE 66


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000C2E 6A89           03200         clrf    LATA
                      03201         
000C30 0E00           03202         movlw   b'00000000'             ; for the time being. RA5--> SDA, RA4 --> SCL 
                      03203                                                         ; RA3-RA0 --> LCD data line
000C32 6E92           03204         movwf   TRISA
000C34 0ECE           03205         movlw   b'11001110'
000C36 6E80           03206         movwf   PORTA
                      03207 
                      03208 ; Initializing Port B:
000C38 010F           03209         banksel TRISB
000C3A 6A81           03210         clrf    PORTB
000C3C 6A8A           03211         clrf    LATB
                      03212 ;       movlw   b'11110111'                     
000C3E 0EFF           03213         movlw   b'11111111'             ; RB2 - RB0: Sw inputs, use RB3 for battery charger status indic
                            ator            
000C40 6E93           03214         movwf   TRISB
                      03215 ;       bcf             PORTB,3
                      03216 
000C42 6A81           03217         clrf    PORTB
000C44 6A8A           03218         clrf    LATB
                      03219         
                      03220 ;       bsf             PORTB,1
                      03221         
                      03222 ; Initializing Port C:
000C46 010F           03223         banksel TRISC
000C48 6A82           03224         clrf    PORTC
000C4A 6A8B           03225         clrf    LATC
                      03226 
                      03227 ;       movlw   b'10010001'             ;RC0, RC1 --> Unused:
                      03228 
000C4C 0ED1           03229         movlw   b'11010001'             ;RC0, RC1 --> Unused:
                      03230                                                         ;RC2 ---> PWM output
                      03231                                                         ;RC3 --->Unused
                      03232                                                         ;RC4, RC5 ---> USB
                      03233                                                         ;RC6 --> Output for U3 pin 5: Charger Prog pin.
                      03234                                                         ; During charge --> Should be kept in high imped
                            ance mode
                      03235                                                         ; ----> It may need high impedance when it first
                             powered up.
                      03236                                                         ; To stop charging ---> Apply logic high --> exi
                            t charging loop
                      03237                                                         ; This is done by tristate this pin to output an
                            d apply "high"                                          
                      03238                                                         ;RC7 ---> unused
                      03239                                                         
000C4E 6E94           03240         movwf   TRISC
000C50 6A82           03241         clrf    PORTC
                      03242 ;-------- for battery Charger ------------------------------------
000C52 9C94           03243         bcf             TRISC,6                 ; tristate to output
000C54 8C82           03244         bsf             PORTC, 6                ; No Charging output
                      03245 ;-----------------------------------------------------------------
                      03246 
                      03247 ; Initializing Port D:
MPASM  5.1    FUELGAUGEAPPNOTE_MAIN_VER1.ASM   12-18-2007  18:09:33         PAGE 67


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000C56 010F           03248         banksel TRISD
000C58 6A83           03249         clrf    PORTD
000C5A 6A8C           03250         clrf    LATD
                      03251 ;       movlw   b'11111111'             ; old -->RD pins are all grounded               
000C5C 0E00           03252         movlw   b'00000000'             ; RD4: PWM Output
000C5E 6E95           03253         movwf   TRISD
                      03254 
                      03255 
000C60 6A83           03256         clrf    PORTD
000C62 6A8C           03257         clrf    LATD
                      03258 
000C64 0EFF           03259         movlw   b'11111111'             
000C66 6E83           03260         movwf   PORTD
                      03261 
                      03262 
                      03263 ; Initializing Port E:
000C68 010F           03264         banksel TRISE
000C6A 6A84           03265         clrf    PORTE
000C6C 6A8D           03266         clrf    LATE
                      03267         
000C6E 0EFF           03268         movlw   b'11111111'             ; RD pins are all grounded              
000C70 6E96           03269         movwf   TRISE
000C72 6AD8           03270         CLRF    STATUS          ; Do initialization
000C74 6AF2           03271         CLRF    INTCON
000C76 6AF1           03272         CLRF    INTCON2
000C78 6AF0           03273         CLRF    INTCON3
000C7A 6A9E           03274         CLRF    PIR1
000C7C 6AA1           03275         CLRF    PIR2
000C7E 6A9D           03276         CLRF    PIE1            ; Disable all peripheral interrupts
000C80 6AA0           03277         Clrf    PIE2
000C82 6AD0           03278         CLRF    RCON
000C84 6A9F           03279         CLRF    IPR1
000C86 6AA2           03280         CLRF    IPR2
                      03281 
000C88 0E07           03282         movlw   b'00000111'             ; All ADC pins (RA, RB, RE,) are digital I/O
000C8A 010F           03283         banksel CMCON
000C8C 6EB4           03284         movwf   CMCON                   ; all comparators off
                      03285 ;--------------------------------------------------     
000C8E 010F           03286         banksel INTCON
000C90 6AF2           03287         clrf    INTCON          
                      03288 ;-------- Set MCU I/O to digital I/O --------------
                      03289                                                         ; PIC18F4550 has RA,RB,RC,RD,RE Ports.
                      03290                                                         ; RA,RB,RE port have analog I/O
000C92 0E0F           03291         movlw   b'00001111'             ; All ADC pins (RA, RB, RE,) are digital I/O
000C94 010F           03292         banksel ADCON1
000C96 6EC1           03293         movwf   ADCON1          
                      03294                 
                      03295 ;       movlw   b'00000000'             
000C98 6AF1           03296         clrf    INTCON2
                      03297 ;--------------------------------------------------     
                      03298 ; -- USB --> Disabled
                      03299 
                      03300 ; Oscillator set-up:
MPASM  5.1    FUELGAUGEAPPNOTE_MAIN_VER1.ASM   12-18-2007  18:09:33         PAGE 68


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000C9A 010F           03301         banksel OSCCON
000C9C 0EFF           03302         movlw   b'11111111'                     ; 8 MHz internal osc
000C9E 6ED3           03303         movwf   OSCCON
                      03304 ;---------------------------------------------------
000CA0 0E05           03305         movlw   0x05                    ;postscale 1:1, prescaler 4, Timer2 ON
000CA2 6ECA           03306         movwf   T2CON
                      03307                 
000CA4 8093           03308         bsf             TRISB,0                 ;make switch RA4 an Input
000CA6 8293           03309         bsf             TRISB,1                 ;make switch RB0 an Input
                      03310 
                      03311 ;------------------------------------------------------------
                      03312 ; Timer0 module set up
                      03313 ; Internal Clock = 8MHz, Tcy = 8Mz/4 = 0.5usec 
                      03314 ; for 1 second time delay --> 1sec/0.5usec = 2 x 10^6
                      03315 ; Required Prescale for 1 sec ---> (2^16)*(Prescale)*(0.5x10^-6) = 1sec
                      03316 ;                        ---> Prescale = 30.5 ---> use 32 ---> gives 1.0485sec
                      03317 
000CA8 0E84           03318         movlw   b'10000100'             ; Timer0 --> Enabled two 16-bit read/writable,  Prescale=1:32, r
                            un at internal clock. 
                      03319                                                         ; for overflow = 1.024 sec
                      03320 
000CAA 6ED5           03321         movwf   T0CON                   ; This gives T_Interrupt time = 1.048 seconds
                      03322 
000CAC 94F2           03323         bcf             INTCON,TMR0IF           ; Clear TMR0 overflow Interrupt Flag bit
                      03324 
000CAE EC?? F???      03325         call    Buzzer_OFF      
                      03326 
                      03327 
                      03328 ;--------------------------------------------------------------
                      03329 
                      03330 ; Initializing arrays:
000CB2 010?           03331         banksel AddByteB
000CB4 6A??           03332         clrf    AddByteB
000CB6 6A??           03333         clrf    AddByteB+1      
000CB8 6A??           03334         clrf    AddByteB+2      
000CBA 6A??           03335         clrf    AddByteB+3      
000CBC 6A??           03336         clrf    AddByteB+4      
000CBE 6A??           03337         clrf    AddByteB+5
                      03338 
000CC0 010?           03339         banksel AddByteA
000CC2 6A??           03340         clrf    AddByteA
000CC4 6A??           03341         clrf    AddByteA+1      
000CC6 6A??           03342         clrf    AddByteA+2      
000CC8 6A??           03343         clrf    AddByteA+3      
000CCA 6A??           03344         clrf    AddByteA+4      
000CCC 6A??           03345         clrf    AddByteA+5
                      03346 
                      03347 
                      03348 ;-----------------------
000CCE 010?           03349         banksel countT1
000CD0 6A??           03350         clrf    countT1
000CD2 6A??           03351         clrf    countT2
000CD4 6A??           03352         clrf    countT3
MPASM  5.1    FUELGAUGEAPPNOTE_MAIN_VER1.ASM   12-18-2007  18:09:33         PAGE 69


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000CD6 6A??           03353         clrf    countT4
000CD8 6A??           03354         clrf    countT5
000CDA 6A??           03355         clrf    countT6
                      03356 ;-----------------------
000CDC 010?           03357         banksel FirstPowered
000CDE 6A??           03358         clrf    FirstPowered
                      03359 ;----for battery Charger ------------------------------------
000CE0 010F           03360         banksel PORTC
000CE2 9C94           03361         bcf             TRISC,6                 ; tristate to output
000CE4 8C82           03362         bsf             PORTC, 6                ; No Charging output
                      03363 ;------------------------------------------------------------
000CE6 010?           03364         banksel ChargingBat
000CE8 6A??           03365         clrf    ChargingBat
                      03366 
000CEA 010?           03367         banksel PORTBInt_Found
000CEC 6A??           03368         clrf    PORTBInt_Found
                      03369         
000CEE 010?           03370         banksel LessThan1or2V
000CF0 6A??           03371         clrf    LessThan1or2V
                      03372 
000CF2 010?           03373         banksel NotChargedBat
000CF4 6A??           03374         clrf    NotChargedBat
                      03375 
                      03376 ;       call    Init_FuelValues
                      03377 ;-----------------------------------------------------------------
                      03378 ;       return
                      03379 ;-----------------------------------------------------------------
                      03380 
000CF6                03381 Init_FuelValues
                      03382 
                      03383 ;-----------------------------------------------------------------
                      03384 ;  I_Init ---> 3 bytes
                      03385 ;  example: 1000 mAH = 3E8 mAH in hex 
                      03386 ;                    170mAH = AA hex mAH        
                      03387 ;                         10 mAH = 0A hex mAH  --> tested
                      03388 ;                        100 mAH = 64 hex mAH
                      03389 ;-----------------------------------------------------------------
                      03390 
000CF6 010?           03391         banksel I_Init1_mAH
000CF8 0EAA           03392         movlw   0xAA            ; 170 mAH 
000CFA 6E??           03393         movwf   I_Init1_mAH             ; LSB
000CFC 0E00           03394         movlw   0x00
000CFE 6E??           03395         movwf   I_Init2_mAH
000D00 0E00           03396         movlw   0x00
000D02 6E??           03397         movwf   I_Init3_mAH             ; MSB
                      03398 
                      03399 
                      03400 ; put this at beginning after test -    
                      03401 ; store initial currents in 6 bytes
                      03402 ; Unit = mAseconds
                      03403 ; example: I_init_mAH = 1000 mAH = 1000mA x60x60 =  3600000mA in dec =  36EE80 hex in mA
                      03404 ;                           170mAH = 170 x 60x60 = 612000mA in dec = 956A0 hex in mA    
                      03405 ;
MPASM  5.1    FUELGAUGEAPPNOTE_MAIN_VER1.ASM   12-18-2007  18:09:33         PAGE 70


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      03406 
                      03407 ; Initial Value of T_CurrentRemain = I_Init/10 = 
                      03408 ; test with 2* Current_Used =2*( 1365322 uAs) = 29AA94 hex
                      03409 
                      03410 ; Now let start with Battery in uAseconds with:
                      03411 ;        10 mAH = 10000*3600 uASec = 3600000 dec = 2255100 hex
                      03412 ;        1000 mAH = 1000*1000*3600 uASeconds =  D693A400 in hex 
                      03413 ;        170mAH = 170*1000*3600 = 612000000 uAs in dec = 247A6100 hex in uAs
                      03414 
                      03415 ; for 170 mAH battery 
                      03416 ;       banksel I_remain_uAS
                      03417 ;       movlw   0x00
                      03418 ;       movwf   I_remain_uAS            ; LSB
                      03419 ;       movlw   0x61
                      03420 ;       movwf   I_remain_uAS+1
                      03421 ;       movlw   0x7A
                      03422 ;       movwf   I_remain_uAS+2
                      03423 ;       movlw   0x24
                      03424 ;       movwf   I_remain_uAS+3
                      03425 ;       movlw   0x00
                      03426 ;       movwf   I_remain_uAS+4
                      03427 ;       movlw   0x00
                      03428 ;       movwf   I_remain_uAS+5          ; MSB
                      03429 ;
                      03430 ;
000D04 010?           03431         banksel I_Init_uAS
000D06 0E00           03432         movlw   0x00
000D08 6E??           03433         movwf   I_Init_uAS              ; LSB
000D0A 0E61           03434         movlw   0x61
000D0C 6E??           03435         movwf   I_Init_uAS+1
000D0E 0E7A           03436         movlw   0x7A
000D10 6E??           03437         movwf   I_Init_uAS+2
000D12 0E24           03438         movlw   0x24
000D14 6E??           03439         movwf   I_Init_uAS+3
000D16 0E00           03440         movlw   0x00
000D18 6E??           03441         movwf   I_Init_uAS+4
000D1A 0E00           03442         movlw   0x00
000D1C 6E??           03443         movwf   I_Init_uAS+5            ; MSB
                      03444 ;------------------------------------
                      03445 
000D1E 010?           03446         banksel Current_Used                    ; Current_used = Total current used
000D20 6A??           03447         clrf    Current_Used    ; LSB
000D22 6A??           03448         clrf    Current_Used+1  
000D24 6A??           03449         clrf    Current_Used+2  
000D26 6A??           03450         clrf    Current_Used+3  
000D28 6A??           03451         clrf    Current_Used+4  
000D2A 6A??           03452         clrf    Current_Used+5  ; MSB
                      03453 
                      03454 ; Initializing current arrays:
000D2C 010?           03455         banksel Current_Used
000D2E 6A??           03456         clrf    Current_Used    
000D30 6A??           03457         clrf    Current_Used+1  
000D32 6A??           03458         clrf    Current_Used+2  
MPASM  5.1    FUELGAUGEAPPNOTE_MAIN_VER1.ASM   12-18-2007  18:09:33         PAGE 71


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000D34 6A??           03459         clrf    Current_Used+3  
000D36 6A??           03460         clrf    Current_Used+4  
000D38 6A??           03461         clrf    Current_Used+5
                      03462 
                      03463 
000D3A 0012           03464         return
                      03465 
                      03466 
                      03467 
                      03468 
                      03469 ;/******** Transform binary 40 bits to BCD *****************/
                      03470 ;/      This routine converts 5 registers (=40 bits) in binary to BCD. 
                      03471 ;/
                      03472 ;/  - YBL - 
                      03473 ;/**********************************************************/
                      03474 
000D3C                03475 Bin48_bcd_volts
000D3C                03476 Bin48_bcd_currents
                      03477 
000D3C                03478 bin48dec        
000D3C EC?? F???      03479         call    Tclrdig
                      03480 ;       movlw   40              ; for Gain =1 --> need only 5 bytes --> 40 bits
000D40 0E30           03481         movlw   48              ; for gain = 2,4,8 --> need 6 bytes ---> 48 bits
                      03482 
000D42 010?           03483         banksel bitcnt
000D44 6E??           03484         movwf   bitcnt
                      03485 
000D46                03486 Tbitlp
000D46 010?           03487         banksel countT1
000D48 36??           03488         rlcf    countT1         ;Shift msb into carry
000D4A 36??           03489         rlcf    countT2
000D4C 36??           03490         rlcf    countT3
000D4E 36??           03491         rlcf    countT4
000D50 36??           03492         rlcf    countT5         ; for Gain=1
000D52 36??           03493         rlcf    countT6         ; for Gain=2,4,8
                      03494 
                      03495 
000D54 010?           03496         banksel digitT1
000D56 EE?? F0??      03497         lfsr    FSR0,digitT1            ; load FSR0 with digit1
                      03498 
000D5A 010?           03499         banksel digcnt
000D5C 0E0D           03500         movlw   d'13'           ;
                      03501 
000D5E 6E??           03502         movwf   digcnt
000D60                03503 Tadjlp  
                      03504 
                      03505 ;       banksel INDF0
000D60 36EF           03506         rlcf    INDF0           ;Shift digit 1 bit left
000D62 0EF6           03507         movlw   -d'10'
000D64 24EF           03508         addwf   INDF0,w,0 ;Check and adjust for decimal overflow
000D66 B0D8           03509         btfsc   STATUS,0
                      03510         
000D68 6EEF           03511         movwf   INDF0
MPASM  5.1    FUELGAUGEAPPNOTE_MAIN_VER1.ASM   12-18-2007  18:09:33         PAGE 72


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000D6A 50EE           03512         movf    POSTINC0,w
                      03513 
000D6C 010?           03514         banksel digcnt
000D6E 2E??           03515         decfsz  digcnt
000D70 EF?? F???      03516         goto    Tadjlp
000D74 2E??           03517         decfsz  bitcnt          ;Next bit
000D76 EF?? F???      03518         goto    Tbitlp
000D7A 0012           03519         return
                      03520 
000D7C                03521 Tclrdig:        
000D7C 010?           03522         banksel digitT1
000D7E 6A??           03523         clrf    digitT1         ; ones
000D80 6A??           03524         clrf    digitT2         ; tens
000D82 6A??           03525         clrf    digitT3         ; hundreds
000D84 6A??           03526         clrf    digitT4         ; thousands
000D86 6A??           03527         clrf    digitT5         ; Ten_Thousands
000D88 6A??           03528         clrf    digitT6         ; OneHundreds_Thousands
000D8A 6A??           03529         clrf    digitT7         ; One_million
000D8C 6A??           03530         clrf    digitT8         ; Ten_million
000D8E 6A??           03531         clrf    digitT9         ; 
000D90 6A??           03532         clrf    digitT10        ; 
000D92 6A??           03533         clrf    digitT11        ; 
000D94 6A??           03534         clrf    digitT12        ; 
000D96 6A??           03535         clrf    digitT13        ; 
                      03536 
000D98 0012           03537         return
                      03538 
                      03539 ;-----------------
                      03540         end
MPASM  5.1    FUELGAUGEAPPNOTE_MAIN_VER1.ASM   12-18-2007  18:09:33         PAGE 73


SYMBOL TABLE
  LABEL                             VALUE 

A                                 00000000
ABDEN                             00000000
ABDOVF                            00000007
ACCESS                            00000000
ACKDT                             00000005
ACKEN                             00000004
ACKSTAT                           00000006
ACQT0                             00000003
ACQT1                             00000004
ACQT2                             00000005
ACTVIE                            00000002
ACTVIF                            00000002
ADCON0                            00000FC2
ADCON1                            00000FC1
ADCON2                            00000FC0
ADCS0                             00000000
ADCS1                             00000001
ADCS2                             00000002
ADC_Read_400KHz                   00000000
ADC_Sign                          00000035
ADC_Value1                        0000002D
ADC_Value1_temp                   00000030
ADC_Value2                        0000002E
ADC_Value2_temp                   00000031
ADC_Value3                        0000002F
ADC_Value3_temp                   00000032
ADC_Write_Config                  00000000
ADDEN                             00000003
ADDR0                             00000000
ADDR1                             00000001
ADDR2                             00000002
ADDR3                             00000003
ADDR4                             00000004
ADDR5                             00000005
ADDR6                             00000006
ADEN                              00000003
ADFM                              00000007
ADIE                              00000006
ADIF                              00000006
ADIP                              00000006
ADON                              00000000
ADRES                             00000FC3
ADRESH                            00000FC4
ADRESL                            00000FC3
AN0                               00000000
AN1                               00000001
AN2                               00000002
AN3                               00000003
AN4                               00000005
AddByteA                          00000048
AddByteB                          0000004E
Add_IforNtimes                    0000044A
Add_Two_6Bytes                    00000000
MPASM  5.1    FUELGAUGEAPPNOTE_MAIN_VER1.ASM   12-18-2007  18:09:33         PAGE 74


SYMBOL TABLE
  LABEL                             VALUE 

Add_toTotalCurrentRemain          000004BE
Add_toTotalCurrentUsed            00000482
BANKED                            00000001
BAUDCON                           00000FB8
BCLIE                             00000003
BCLIF                             00000003
BCLIP                             00000003
BF                                00000000
BGST                              00000005
BOR                               00000000
BRG16                             00000003
BRGH                              00000002
BSR                               00000FE0
BSR_Temp                          00000046
BTOEE                             00000004
BTOEF                             00000004
BTSEE                             00000007
BTSEF                             00000007
Bat_AAA1_5V                       00000224
Bat_LiPoly170mAH                  0000024E
BatterySelted_1000mAh             000002B4
BatterySelted_170mAh              00000288
Battery_Inused                    0000024E
Bin48_bcd_currents                00000D3C
Bin48_bcd_volts                   00000D3C
Buzzer1p1KHz_ON                   00000000
Buzzer1p1To1p5KHz_ON              00000000
Buzzer1p2KHz_ON                   00000000
BuzzerStartUp_ON                  00000000
Buzzer_OFF                        00000000
Buzzer_ON                         00000000
C                                 00000000
C1INV                             00000004
C1OUT                             00000006
C2INV                             00000005
C2OUT                             00000007
CCP1                              00000002
CCP1AS                            00000FB6
CCP1CON                           00000FBD
CCP1DEL                           00000FB7
CCP1IE                            00000002
CCP1IF                            00000002
CCP1IP                            00000002
CCP1M0                            00000000
CCP1M1                            00000001
CCP1M2                            00000002
CCP1M3                            00000003
CCP2CON                           00000FBA
CCP2IE                            00000000
CCP2IF                            00000000
CCP2IP                            00000000
CCP2M0                            00000000
CCP2M1                            00000001
MPASM  5.1    FUELGAUGEAPPNOTE_MAIN_VER1.ASM   12-18-2007  18:09:33         PAGE 75


SYMBOL TABLE
  LABEL                             VALUE 

CCP2M2                            00000002
CCP2M3                            00000003
CCPR1                             00000FBE
CCPR1H                            00000FBF
CCPR1L                            00000FBE
CCPR2                             00000FBB
CCPR2H                            00000FBC
CCPR2L                            00000FBB
CFGS                              00000006
CHS0                              00000002
CHS1                              00000003
CHS2                              00000004
CHS3                              00000005
CIS                               00000003
CK                                00000006
CK1SPP                            00000000
CK2SPP                            00000001
CKE                               00000006
CKP                               00000004
CLK1EN                            00000004
CLKCFG0                           00000006
CLKCFG1                           00000007
CM0                               00000000
CM1                               00000001
CM2                               00000002
CMCON                             00000FB4
CMIE                              00000006
CMIF                              00000006
CMIP                              00000006
CRC16EE                           00000002
CRC16EF                           00000002
CRC5EE                            00000001
CRC5EF                            00000001
CREN                              00000004
CSEN                              00000005
CSRC                              00000007
CVR0                              00000000
CVR1                              00000001
CVR2                              00000002
CVR3                              00000003
CVRCON                            00000FB5
CVREF                             00000004
CVREN                             00000007
CVROE                             00000006
CVRR                              00000005
CVRSS                             00000004
Calc_RemainFuels                  000005AE
Carry_AddTotal                    00000040
Carry_fromAdd                     00000054
Charge_Done                       00000B8A
ChargingBat                       0000007B
ChargingBattery                   00000B3A
CheckDonefor2V                    00000A58
MPASM  5.1    FUELGAUGEAPPNOTE_MAIN_VER1.ASM   12-18-2007  18:09:33         PAGE 76


SYMBOL TABLE
  LABEL                             VALUE 

CheckINT1_Int                     0000005A
CheckINT2_Int                     00000092
CheckIfHigerThan4V                00000B5E
CheckIfLessThan2V                 000003DE
CheckRB0orRB1                     000001F8
CheckRB4567_4_Interrupt           0000012A
CheckRB4567_5_Interrupt           00000152
CheckRB4567_6_Interrupt           000000DA
CheckRB4567_7_Interrupt           00000102
CheckRB4567_Int                   000000CE
CheckRBO_Int                      00000024
CheckTIMER0_Int                   00000014
Check_IfOverCharging              000004C2
CheckedHigherThan2V               00000A56
CheckedLessThan2V                 00000A50
CheckifSW2Selected                00000210
ChekIfWantRecharge                00000ADA
ChkIfChargedBat                   000003BA
Chk_BatIfLowerthan0_75V           00000A5A
Chk_BatIfLowerthan2V              00000A12
Chk_forSWChargeStop               00000B74
Chk_sw1forCharge                  00000AF4
Closed                            000007E2
Closed_RB1                        000007F6
Closed_RB2                        0000080A
Closed_RB4                        0000081E
Closed_RB5                        00000832
Closed_RB6                        00000846
Closed_RB7                        0000085A
Comput_BatteryFuel                00000406
Config_Data                       00000033
Cont_ToChargeLoop                 00000B6E
ContinueToLoop                    00000BDA
Continue_NormalMeas               00000406
Convert_ADCvalues                 00000878
Convert_uATomAH                   00000634
CurrentMult_Timer0Int             00000406
Current_Measurement               000008D4
Current_NoTimerInt                00000478
Current_Used                      00000055
Currents_byUsingU1                0000099C
D                                 00000005
D1                                00000868
D2                                0000086E
DATA_ADDRESS                      00000005
DC                                00000001
DC1B0                             00000004
DC1B1                             00000005
DC2B0                             00000004
DC2B1                             00000005
DDRA                              TRISA
DDRB                              TRISB
DDRC                              TRISC
MPASM  5.1    FUELGAUGEAPPNOTE_MAIN_VER1.ASM   12-18-2007  18:09:33         PAGE 77


SYMBOL TABLE
  LABEL                             VALUE 

DDRD                              TRISD
DDRE                              TRISE
DELAYTIME                         .50
DFN8EE                            00000003
DFN8EF                            00000003
DIR                               00000002
DONE                              00000001
D_A                               00000005
Debounce_RB0                      000007D4
Debounce_RB1                      000007E6
Debounce_RB2                      000007FA
Debounce_RB4                      0000080E
Debounce_RB5                      00000822
Debounce_RB6                      00000836
Debounce_RB7                      0000084A
Delay                             0000085E
Delay_Returned                    00000077
Delay_SW1Interrupt                0000079C
Delay_SW3Interrupt                000007AC
Disp_AtTP9_PressS1                00000000
Disp_BatLessThan1V                00000AC0
Disp_BatLessThan2V                00000AA6
Disp_BatLowerThan0_75V            00000000
Disp_ChargeCompleted              00000000
Disp_ConnectJP1                   00000000
Disp_ConntBattery                 00000000
Disp_DisconnectJP2                00000000
Disp_FuelRemPerct                 00000000
Disp_FuelRemmAH                   00000000
Disp_FuelUsed                     00000073
Disp_InitAtL2                     00000000
Disp_PlseWaitAtL1                 00000000
Disp_PressS1                      00000000
Disp_RemainFuel                   00000074
Disp_StdUnderCharged              00000000
Display_Current                   000009E0
Display_FuelUsed                  00000000
Display_Results                   00000000
Display_Results_Current           00000000
Display_Results_Volts             00000000
Display_TotalUsedFuel             00000540
Display_UsedFuel                  00000598
Display_Voltage                   000008B0
Divide_6by_3Bytes                 00000000
Dividend1                         00000037
Dividend2                         00000038
Dividend3                         00000039
Dividend4                         0000003A
Dividend5                         0000003B
Dividend6                         0000003C
Divisor1                          0000003D
Divisor2                          0000003E
Divisor3                          0000003F
MPASM  5.1    FUELGAUGEAPPNOTE_MAIN_VER1.ASM   12-18-2007  18:09:33         PAGE 78


SYMBOL TABLE
  LABEL                             VALUE 

DoCalRemainFuels                  000005D4
DoforAAABattery                   0000037A
DoforLiPolymer                    0000039A
Done_CurrentXInt                  00000478
ECCP1AS                           00000FB6
ECCP1CON                          00000FBD
ECCP1DEL                          00000FB7
ECCPAS0                           00000004
ECCPAS1                           00000005
ECCPAS2                           00000006
ECCPASE                           00000007
EEADR                             00000FA9
EECON1                            00000FA6
EECON2                            00000FA7
EEDATA                            00000FA8
EEIE                              00000004
EEIF                              00000004
EEIP                              00000004
EEPGD                             00000007
ENDP0                             00000003
ENDP1                             00000004
ENDP2                             00000005
ENDP3                             00000006
EPCONDIS                          00000003
EPHSHK                            00000004
EPINEN                            00000001
EPOUTEN                           00000002
EPSTALL                           00000000
End_RB0_Interrupt                 00000054
End_RB1_Interrupt                 00000086
End_RB2_Interrupt                 000000C4
End_RB4_Interrupt                 0000014C
End_RB5_Interrupt                 00000174
End_RB6_Interrupt                 000000FC
End_RB7_Interrupt                 00000124
Endisr                            0000017A
FAST                              00000001
FERR                              00000002
FLTS                              00000002
FREE                              00000004
FRM0                              00000000
FRM1                              00000001
FRM10                             00000002
FRM2                              00000002
FRM3                              00000003
FRM4                              00000004
FRM5                              00000005
FRM6                              00000006
FRM7                              00000007
FRM8                              00000000
FRM9                              00000001
FSEN                              00000002
FSR0                              00000000
MPASM  5.1    FUELGAUGEAPPNOTE_MAIN_VER1.ASM   12-18-2007  18:09:33         PAGE 79


SYMBOL TABLE
  LABEL                             VALUE 

FSR0H                             00000FEA
FSR0L                             00000FE9
FSR0_TEMP                         00000042
FSR1                              00000001
FSR1H                             00000FE2
FSR1L                             00000FE1
FSR2                              00000002
FSR2H                             00000FDA
FSR2L                             00000FD9
FirstPowered                      0000007C
For_0587mV                        00000940
For_2_408v                        0000092E
FoundFistDigit                    00000015
FuelGaugeInit                     00000C26
FullyCharged                      00000504
FullyDischarged                   00000616
GCEN                              00000007
GIE                               00000007
GIEH                              00000007
GIEL                              00000006
GO                                00000001
GO_DONE                           00000001
Gain_Selected                     00000036
HLVDCON                           00000FD2
HLVDEN                            00000004
HLVDIE                            00000002
HLVDIF                            00000002
HLVDIN                            00000005
HLVDIP                            00000002
HLVDL0                            00000000
HLVDL1                            00000001
HLVDL2                            00000002
HLVDL3                            00000003
HigherThan4V                      0000007F
I2C_DAT                           00000005
I2C_READ                          00000002
I2C_START                         00000003
I2C_STOP                          00000004
IDLEIE                            00000004
IDLEIF                            00000004
IDLEN                             00000007
INDF0                             00000FEF
INDF1                             00000FE7
INDF2                             00000FDF
INNER                             00000079
INT0                              00000000
INT0E                             00000004
INT0F                             00000001
INT0IE                            00000004
INT0IF                            00000001
INT1                              00000001
INT1E                             00000003
INT1F                             00000000
MPASM  5.1    FUELGAUGEAPPNOTE_MAIN_VER1.ASM   12-18-2007  18:09:33         PAGE 80


SYMBOL TABLE
  LABEL                             VALUE 

INT1IE                            00000003
INT1IF                            00000000
INT1IP                            00000006
INT1P                             00000006
INT2                              00000002
INT2E                             00000004
INT2F                             00000001
INT2IE                            00000004
INT2IF                            00000001
INT2IP                            00000007
INT2P                             00000007
INTCON                            00000FF2
INTCON2                           00000FF1
INTCON3                           00000FF0
INTEDG0                           00000006
INTEDG1                           00000005
INTEDG2                           00000004
INTSRC                            00000007
IOFS                              00000002
IPEN                              00000007
IPR1                              00000F9F
IPR2                              00000FA2
IRCF0                             00000004
IRCF1                             00000005
IRCF2                             00000006
IRVST                             00000005
ISR                               00000000
IVRST                             00000005
I_Init1_mAH                       00000067
I_Init2_mAH                       00000068
I_Init3_mAH                       00000069
I_Init4_mAH                       0000006A
I_Init5_mAH                       0000006B
I_Init6_mAH                       0000006C
I_Init_uAS                        0000006D
I_remain_mAH1                     00000061
I_remain_mAH2                     00000062
I_remain_mAH3                     00000063
I_remain_mAH4                     00000064
I_remain_mAH5                     00000065
I_remain_mAH6                     00000066
I_remain_uAS                      0000005B
Init_FuelValues                   00000CF6
IsBatHigherThan4V                 00000BDC
IsitForU5_Volt                    00000034
ItsFullyChargedBat                000003D6
ItsHigherThan075V                 00000AA0
ItsHigherThan4V                   00000C20
ItsUnderChaging                   000003A6
Its_LessThan075V                  00000A9A
Its_LessThan4V                    00000C1A
Its_NegativeSignA                 00000892
Its_Negative_Sign_U1              00000966
MPASM  5.1    FUELGAUGEAPPNOTE_MAIN_VER1.ASM   12-18-2007  18:09:33         PAGE 81


SYMBOL TABLE
  LABEL                             VALUE 

Its_PositiveSignA                 0000088A
Its_Positive_Sign_U1              00000960
Keep_AddsCurrents                 00000456
LATA                              00000F89
LATA0                             00000000
LATA1                             00000001
LATA2                             00000002
LATA3                             00000003
LATA4                             00000004
LATA5                             00000005
LATA6                             00000006
LATB                              00000F8A
LATB0                             00000000
LATB1                             00000001
LATB2                             00000002
LATB3                             00000003
LATB4                             00000004
LATB5                             00000005
LATB6                             00000006
LATB7                             00000007
LATC                              00000F8B
LATC0                             00000000
LATC1                             00000001
LATC2                             00000002
LATC6                             00000006
LATC7                             00000007
LATD                              00000F8C
LATD0                             00000000
LATD1                             00000001
LATD2                             00000002
LATD3                             00000003
LATD4                             00000004
LATD5                             00000005
LATD6                             00000006
LATD7                             00000007
LATE                              00000F8D
LATE0                             00000000
LATE1                             00000001
LATE2                             00000002
LCDInit                           00000000
LCDLine_1                         00000000
LCDLine_2                         00000000
LVDCON                            00000FD2
LVDEN                             00000004
LVDIE                             00000002
LVDIF                             00000002
LVDIN                             00000005
LVDIP                             00000002
LVDL0                             00000000
LVDL1                             00000001
LVDL2                             00000002
LVDL3                             00000003
LVV0                              00000000
MPASM  5.1    FUELGAUGEAPPNOTE_MAIN_VER1.ASM   12-18-2007  18:09:33         PAGE 82


SYMBOL TABLE
  LABEL                             VALUE 

LVV1                              00000001
LVV2                              00000002
LVV3                              00000003
LessThan1or2V                     0000007D
LowerThan0_75V                    0000007E
Multipland1                       00000021
Multipland2                       00000022
Multipland3                       00000023
Multiplier1                       00000024
Multiplier2                       00000027
Multiplier3                       0000002A
Multiply_24x24Bits_ADC            00000000
Multiply_3x3bytes                 00000000
N                                 00000004
NOT_A                             00000005
NOT_ADDRESS                       00000005
NOT_BOR                           00000000
NOT_DONE                          00000001
NOT_IPEN                          00000007
NOT_PD                            00000002
NOT_POR                           00000001
NOT_RBPU                          00000007
NOT_RI                            00000004
NOT_T1SYNC                        00000002
NOT_T3SYNC                        00000002
NOT_TO                            00000003
NOT_W                             00000002
NOT_WRITE                         00000002
NotChargedBat                     00000080
NotInChargingMode                 000003AE
NotWantToCharge                   00000AFA
Now_WriteConf                     0000033A
Now_WriteConf_U1                  0000091A
OERR                              00000001
OESPP                             00000002
OSC2                              00000006
OSCCON                            00000FD3
OSCFIE                            00000007
OSCFIF                            00000007
OSCFIP                            00000007
OSCTUNE                           00000F9B
OSTS                              00000003
OUTER                             00000078
OV                                00000003
Ok_ToAddCurrent                   00000508
Open                              000007E4
Open_RB1                          000007F8
Open_RB2                          0000080C
Open_RB4                          00000820
Open_RB5                          00000834
Open_RB6                          00000848
Open_RB7                          0000085C
P                                 00000004
MPASM  5.1    FUELGAUGEAPPNOTE_MAIN_VER1.ASM   12-18-2007  18:09:33         PAGE 83


SYMBOL TABLE
  LABEL                             VALUE 

P1A                               00000002
P1M0                              00000006
P1M1                              00000007
PC                                00000FF9
PCFG0                             00000000
PCFG1                             00000001
PCFG2                             00000002
PCFG3                             00000003
PCL                               00000FF9
PCLATH                            00000FFA
PCLATH_TEMP                       00000043
PCLATU                            00000FFB
PD                                00000002
PDC0                              00000000
PDC1                              00000001
PDC2                              00000002
PDC3                              00000003
PDC4                              00000004
PDC5                              00000005
PDC6                              00000006
PEIE                              00000006
PEN                               00000002
PGC                               00000006
PGD                               00000007
PGM                               00000005
PIDEE                             00000000
PIDEF                             00000000
PIE1                              00000F9D
PIE2                              00000FA0
PIR1                              00000F9E
PIR2                              00000FA1
PKTDIS                            00000004
PLUSW0                            00000FEB
PLUSW1                            00000FE3
PLUSW2                            00000FDB
POR                               00000001
PORTA                             00000F80
PORTB                             00000F81
PORTBInt_Found                    0000007A
PORTC                             00000F82
PORTD                             00000F83
PORTE                             00000F84
POSTDEC0                          00000FED
POSTDEC1                          00000FE5
POSTDEC2                          00000FDD
POSTINC0                          00000FEE
POSTINC1                          00000FE6
POSTINC2                          00000FDE
PPB0                              00000000
PPB1                              00000001
PPBI                              00000001
PPBRST                            00000006
PR2                               00000FCB
MPASM  5.1    FUELGAUGEAPPNOTE_MAIN_VER1.ASM   12-18-2007  18:09:33         PAGE 84


SYMBOL TABLE
  LABEL                             VALUE 

PREINC0                           00000FEC
PREINC1                           00000FE4
PREINC2                           00000FDC
PROD                              00000FF3
PRODH                             00000FF4
PRODL                             00000FF3
PRSEN                             00000007
PSA                               00000003
PSSAC0                            00000002
PSSAC1                            00000003
PSSBD0                            00000000
PSSBD1                            00000001
Prepare_ToBegin                   0000027C
Product1                          0000001B
Product2                          0000001C
Product3                          0000001D
Product4                          0000001E
Product5                          0000001F
Product6                          00000020
R                                 00000002
RA0                               00000000
RA1                               00000001
RA2                               00000002
RA3                               00000003
RA4                               00000004
RA5                               00000005
RA6                               00000006
RB0                               00000000
RB0Int_Found                      00000075
RB0_Interrupt                     00000032
RB1                               00000001
RB1_Interrupt                     00000066
RB2                               00000002
RB2_Interrupt                     000000A0
RB3                               00000003
RB4                               00000004
RB5                               00000005
RB6                               00000006
RB7                               00000007
RBIE                              00000003
RBIF                              00000000
RBIP                              00000000
RBPU                              00000007
RC0                               00000000
RC1                               00000001
RC2                               00000002
RC4                               00000004
RC5                               00000005
RC6                               00000006
RC7                               00000007
RCEN                              00000003
RCIDL                             00000006
RCIE                              00000005
MPASM  5.1    FUELGAUGEAPPNOTE_MAIN_VER1.ASM   12-18-2007  18:09:33         PAGE 85


SYMBOL TABLE
  LABEL                             VALUE 

RCIF                              00000005
RCIP                              00000005
RCMT                              00000006
RCON                              00000FD0
RCREG                             00000FAE
RCSTA                             00000FAB
RD                                00000000
RD0                               00000000
RD1                               00000001
RD16                              00000007
RD2                               00000002
RD3                               00000003
RD4                               00000004
RD5                               00000005
RD6                               00000006
RD7                               00000007
RDPU                              00000007
RDSPP                             00000007
RE0                               00000000
RE1                               00000001
RE2                               00000002
RE3                               00000003
READ_WRITE                        00000002
RESET_VECTOR                      00000000
RESUME                            00000002
RI                                00000004
RSEN                              00000001
RX                                00000007
RX9                               00000006
RX9D                              00000000
R_W                               00000002
Reading_ADC_U1                    00000926
Reading_ADC_Value                 00000346
RechargeBattery                   00000B06
S                                 00000003
S1forBatteryConnect               000001D2
S1forReadyToCharge                00000B30
S1forReadyToStart                 000001BA
SBOREN                            00000006
SCKP                              00000004
SCLK_I2C                          PORTA,4
SCL_dir                           TRISA,4
SCS0                              00000000
SCS1                              00000001
SDA_I2C                           PORTA,5
SDA_dir                           TRISA,5
SE0                               00000005
SEN                               00000000
SENDB                             00000003
SMP                               00000007
SOFIE                             00000006
SOFIF                             00000006
SPBRG                             00000FAF
MPASM  5.1    FUELGAUGEAPPNOTE_MAIN_VER1.ASM   12-18-2007  18:09:33         PAGE 86


SYMBOL TABLE
  LABEL                             VALUE 

SPBRGH                            00000FB0
SPEN                              00000007
SPP0                              00000000
SPP1                              00000001
SPP2                              00000002
SPP3                              00000003
SPP4                              00000004
SPP5                              00000005
SPP6                              00000006
SPP7                              00000007
SPPBUSY                           00000004
SPPCFG                            00000F63
SPPCON                            00000F65
SPPDATA                           00000F62
SPPEN                             00000000
SPPEPS                            00000F64
SPPIE                             00000007
SPPIF                             00000007
SPPIP                             00000007
SPPOWN                            00000001
SREN                              00000005
SSPADD                            00000FC8
SSPBUF                            00000FC9
SSPCON1                           00000FC6
SSPCON2                           00000FC5
SSPEN                             00000005
SSPIE                             00000003
SSPIF                             00000003
SSPIP                             00000003
SSPM0                             00000000
SSPM1                             00000001
SSPM2                             00000002
SSPM3                             00000003
SSPOV                             00000006
SSPSTAT                           00000FC7
STALLIE                           00000005
STALLIF                           00000005
STATUS                            00000FD8
STATUS_TEMP                       00000044
STKFUL                            00000007
STKPTR                            00000FFC
STKPTR0                           00000000
STKPTR1                           00000001
STKPTR2                           00000002
STKPTR3                           00000003
STKPTR4                           00000004
STKUNF                            00000006
SUSPND                            00000001
SWDTE                             00000000
SWDTEN                            00000000
SYNC                              00000004
SelBettryType                     00000076
SelectBatteryType                 000001DC
MPASM  5.1    FUELGAUGEAPPNOTE_MAIN_VER1.ASM   12-18-2007  18:09:33         PAGE 87


SYMBOL TABLE
  LABEL                             VALUE 

Set_Gain_1                        0000031A
Set_Gain_1_U1                     000008F2
Set_Gain_2                        00000322
Set_Gain_2_U1                     000008FC
Set_Gain_4                        0000032A
Set_Gain_4_U1                     00000906
Set_Gain_8                        00000332
Set_Gain_8_U1                     00000910
Simulation_U1                     0000092E
SkipCalRemainFuels                000005B6
Skip_DispFuelUsed                 0000070A
Start                             00000104
Start_Charging                    00000B06
Start_VoltMeasurement             000002E4
Still_Charging                    00000B42
Stop_Charging                     00000BC4
SubtractByteA                     00000000
SubtractByteB                     00000000
Subtract_6Bytes_6Bytes            00000000
Successful_sub                    0000061A
SwforChargeStop                   00000B7E
Sync_LED11                        PORTD,6
T08BIT                            00000006
T0CKI                             00000004
T0CON                             00000FD5
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0IP                              00000002
T0PS0                             00000000
T0PS1                             00000001
T0PS2                             00000002
T0SE                              00000004
T13CKI                            00000000
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000FCD
T1OSCEN                           00000003
T1OSI                             00000001
T1OSO                             00000000
T1RUN                             00000006
T1SYNC                            00000002
T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             00000FCA
T2OUTPS0                          00000003
T2OUTPS1                          00000004
T2OUTPS2                          00000005
T2OUTPS3                          00000006
T3CCP1                            00000003
T3CCP2                            00000006
T3CKPS0                           00000004
T3CKPS1                           00000005
MPASM  5.1    FUELGAUGEAPPNOTE_MAIN_VER1.ASM   12-18-2007  18:09:33         PAGE 88


SYMBOL TABLE
  LABEL                             VALUE 

T3CON                             00000FB1
T3NSYNC                           00000002
T3SYNC                            00000002
TABLAT                            00000FF5
TBLPTR                            00000FF6
TBLPTRH                           00000FF7
TBLPTRL                           00000FF6
TBLPTRU                           00000FF8
TC24_Exit                         000007D2
TMR0H                             00000FD7
TMR0IE                            00000005
TMR0IF                            00000002
TMR0IP                            00000002
TMR0L                             00000FD6
TMR0ON                            00000007
TMR1CS                            00000001
TMR1H                             00000FCF
TMR1IE                            00000000
TMR1IF                            00000000
TMR1IP                            00000000
TMR1L                             00000FCE
TMR1ON                            00000000
TMR2                              00000FCC
TMR2IE                            00000001
TMR2IF                            00000001
TMR2IP                            00000001
TMR2ON                            00000002
TMR3CS                            00000001
TMR3H                             00000FB3
TMR3IE                            00000001
TMR3IF                            00000001
TMR3IP                            00000001
TMR3L                             00000FB2
TMR3ON                            00000000
TO                                00000003
TOS                               00000FFD
TOSH                              00000FFE
TOSL                              00000FFD
TOSU                              00000FFF
TP16_LED12                        PORTD,7
TP17_LED13                        PORTD,3
TRISA                             00000F92
TRISA0                            00000000
TRISA1                            00000001
TRISA2                            00000002
TRISA3                            00000003
TRISA4                            00000004
TRISA5                            00000005
TRISA6                            00000006
TRISB                             00000F93
TRISB0                            00000000
TRISB1                            00000001
TRISB2                            00000002
MPASM  5.1    FUELGAUGEAPPNOTE_MAIN_VER1.ASM   12-18-2007  18:09:33         PAGE 89


SYMBOL TABLE
  LABEL                             VALUE 

TRISB3                            00000003
TRISB4                            00000004
TRISB5                            00000005
TRISB6                            00000006
TRISB7                            00000007
TRISC                             00000F94
TRISC0                            00000000
TRISC1                            00000001
TRISC2                            00000002
TRISC6                            00000006
TRISC7                            00000007
TRISD                             00000F95
TRISD0                            00000000
TRISD1                            00000001
TRISD2                            00000002
TRISD3                            00000003
TRISD4                            00000004
TRISD5                            00000005
TRISD6                            00000006
TRISD7                            00000007
TRISE                             00000F96
TRISE0                            00000000
TRISE1                            00000001
TRISE2                            00000002
TRMT                              00000001
TRNIE                             00000003
TRNIF                             00000003
TUN0                              00000000
TUN1                              00000001
TUN2                              00000002
TUN3                              00000003
TUN4                              00000004
TX                                00000006
TX9                               00000006
TX9D                              00000000
TXEN                              00000005
TXIE                              00000004
TXIF                              00000004
TXIP                              00000004
TXREG                             00000FAD
TXSTA                             00000FAC
Tadjlp                            00000D60
Tbitlp                            00000D46
Tclrdig                           00000D7C
Test_Bit16A                       00000898
Test_Bit16_U1                     0000096C
Timer0_Interrupt                  00000047
TwosComp24                        000007BC
UA                                00000001
UADDR                             00000F6E
UCFG                              00000F6F
UCON                              00000F6D
UEIE                              00000F6B
MPASM  5.1    FUELGAUGEAPPNOTE_MAIN_VER1.ASM   12-18-2007  18:09:33         PAGE 90


SYMBOL TABLE
  LABEL                             VALUE 

UEIR                              00000F6A
UEP0                              00000F70
UEP1                              00000F71
UEP10                             00000F7A
UEP11                             00000F7B
UEP12                             00000F7C
UEP13                             00000F7D
UEP14                             00000F7E
UEP15                             00000F7F
UEP2                              00000F72
UEP3                              00000F73
UEP4                              00000F74
UEP5                              00000F75
UEP6                              00000F76
UEP7                              00000F77
UEP8                              00000F78
UEP9                              00000F79
UERRIE                            00000001
UERRIF                            00000001
UFRM                              00000F66
UFRMH                             00000F67
UFRML                             00000F66
UIE                               00000F69
UIR                               00000F68
UOEMON                            00000006
UPUEN                             00000004
URSTIE                            00000000
URSTIF                            00000000
USBEN                             00000003
USBIE                             00000005
USBIF                             00000005
USBIP                             00000005
USTAT                             00000F6C
UTEYE                             00000007
UTRDIS                            00000003
VCFG0                             00000004
VCFG1                             00000005
VDIRMAG                           00000007
VREFM                             00000002
VREFP                             00000003
Voltage_Dispayed                  00000041
Volts_Measurement                 00000304
W                                 00000000
WCOL                              00000007
WDTCON                            00000FD1
WR                                00000001
WREG                              00000FE8
WREN                              00000002
WRERR                             00000003
WRSPP                             00000006
WS0                               00000000
WS1                               00000001
WS2                               00000002
MPASM  5.1    FUELGAUGEAPPNOTE_MAIN_VER1.ASM   12-18-2007  18:09:33         PAGE 91


SYMBOL TABLE
  LABEL                             VALUE 

WS3                               00000003
WUE                               00000001
W_TEMP                            00000045
Wait_ForTMR0Int                   0000043A
Wait_RB1SW_done                   0000007C
Wait_RB2SW_done                   000000BA
Wait_RBOSW_done                   0000004A
Wait_SW1Interrupt                 0000079C
Wait_SW3Interrupt                 000007A8
Wait_till_RB4SW_done              00000142
Wait_till_RB5SW_done              0000016A
Wait_till_RB6SW_done              000000F2
Wait_till_RB7SW_done              0000011A
WantToCharge                      00000B04
Z                                 00000002
_BORV_0_2L                        000000E7
_BORV_1_2L                        000000EF
_BORV_2_2L                        000000F7
_BORV_3_2L                        000000FF
_BOR_OFF_2L                       000000F9
_BOR_ON_2L                        000000FF
_BOR_ON_ACTIVE_2L                 000000FD
_BOR_SOFT_2L                      000000FB
_CCP2MX_OFF_3H                    000000FE
_CCP2MX_ON_3H                     000000FF
_CONFIG1H                         00300001
_CONFIG1L                         00300000
_CONFIG2H                         00300003
_CONFIG2L                         00300002
_CONFIG3H                         00300005
_CONFIG4L                         00300006
_CONFIG5H                         00300009
_CONFIG5L                         00300008
_CONFIG6H                         0030000B
_CONFIG6L                         0030000A
_CONFIG7H                         0030000D
_CONFIG7L                         0030000C
_CP0_OFF_5L                       000000FF
_CP0_ON_5L                        000000FE
_CP1_OFF_5L                       000000FF
_CP1_ON_5L                        000000FD
_CP2_OFF_5L                       000000FF
_CP2_ON_5L                        000000FB
_CP3_OFF_5L                       000000FF
_CP3_ON_5L                        000000F7
_CPB_OFF_5H                       000000FF
_CPB_ON_5H                        000000BF
_CPD_OFF_5H                       000000FF
_CPD_ON_5H                        0000007F
_CPUDIV_OSC1_PLL2_1L              000000E7
_CPUDIV_OSC2_PLL3_1L              000000EF
_CPUDIV_OSC3_PLL4_1L              000000F7
_CPUDIV_OSC4_PLL6_1L              000000FF
MPASM  5.1    FUELGAUGEAPPNOTE_MAIN_VER1.ASM   12-18-2007  18:09:33         PAGE 92


SYMBOL TABLE
  LABEL                             VALUE 

_DEBUG_OFF_4L                     000000FF
_DEBUG_ON_4L                      0000007F
_DEVID1                           003FFFFE
_DEVID2                           003FFFFF
_EBTR0_OFF_7L                     000000FF
_EBTR0_ON_7L                      000000FE
_EBTR1_OFF_7L                     000000FF
_EBTR1_ON_7L                      000000FD
_EBTR2_OFF_7L                     000000FF
_EBTR2_ON_7L                      000000FB
_EBTR3_OFF_7L                     000000FF
_EBTR3_ON_7L                      000000F7
_EBTRB_OFF_7H                     000000FF
_EBTRB_ON_7H                      000000BF
_FCMEN_OFF_1H                     000000BF
_FCMEN_ON_1H                      000000FF
_FOSC_ECIO_EC_1H                  000000F4
_FOSC_ECPLLIO_EC_1H               000000F6
_FOSC_ECPLL_EC_1H                 000000F7
_FOSC_EC_EC_1H                    000000F5
_FOSC_HSPLL_HS_1H                 000000FE
_FOSC_HS_1H                       000000FC
_FOSC_INTOSCIO_EC_1H              000000F8
_FOSC_INTOSC_EC_1H                000000F9
_FOSC_INTOSC_HS_1H                000000FB
_FOSC_INTOSC_XT_1H                000000FA
_FOSC_XTPLL_XT_1H                 000000F2
_FOSC_XT_XT_1H                    000000F0
_ICPRT_OFF_4L                     000000DF
_ICPRT_ON_4L                      000000FF
_IDLOC0                           00200000
_IDLOC1                           00200001
_IDLOC2                           00200002
_IDLOC3                           00200003
_IDLOC4                           00200004
_IDLOC5                           00200005
_IDLOC6                           00200006
_IDLOC7                           00200007
_IESO_OFF_1H                      0000007F
_IESO_ON_1H                       000000FF
_LPT1OSC_OFF_3H                   000000FB
_LPT1OSC_ON_3H                    000000FF
_LVP_OFF_4L                       000000FB
_LVP_ON_4L                        000000FF
_MCLRE_OFF_3H                     0000007F
_MCLRE_ON_3H                      000000FF
_PBADEN_OFF_3H                    000000FD
_PBADEN_ON_3H                     000000FF
_PLLDIV_10_1L                     000000FE
_PLLDIV_12_1L                     000000FF
_PLLDIV_1_1L                      000000F8
_PLLDIV_2_1L                      000000F9
_PLLDIV_3_1L                      000000FA
MPASM  5.1    FUELGAUGEAPPNOTE_MAIN_VER1.ASM   12-18-2007  18:09:33         PAGE 93


SYMBOL TABLE
  LABEL                             VALUE 

_PLLDIV_4_1L                      000000FB
_PLLDIV_5_1L                      000000FC
_PLLDIV_6_1L                      000000FD
_PWRT_OFF_2L                      000000FF
_PWRT_ON_2L                       000000FE
_STVREN_OFF_4L                    000000FE
_STVREN_ON_4L                     000000FF
_USBDIV_1_1L                      000000DF
_USBDIV_2_1L                      000000FF
_VREGEN_OFF_2L                    000000DF
_VREGEN_ON_2L                     000000FF
_WDTPS_1024_2H                    000000F5
_WDTPS_128_2H                     000000EF
_WDTPS_16384_2H                   000000FD
_WDTPS_16_2H                      000000E9
_WDTPS_1_2H                       000000E1
_WDTPS_2048_2H                    000000F7
_WDTPS_256_2H                     000000F1
_WDTPS_2_2H                       000000E3
_WDTPS_32768_2H                   000000FF
_WDTPS_32_2H                      000000EB
_WDTPS_4096_2H                    000000F9
_WDTPS_4_2H                       000000E5
_WDTPS_512_2H                     000000F3
_WDTPS_64_2H                      000000ED
_WDTPS_8192_2H                    000000FB
_WDTPS_8_2H                       000000E7
_WDT_OFF_2H                       000000FE
_WDT_ON_2H                        000000FF
_WRT0_OFF_6L                      000000FF
_WRT0_ON_6L                       000000FE
_WRT1_OFF_6L                      000000FF
_WRT1_ON_6L                       000000FD
_WRT2_OFF_6L                      000000FF
_WRT2_ON_6L                       000000FB
_WRT3_OFF_6L                      000000FF
_WRT3_ON_6L                       000000F7
_WRTB_OFF_6H                      000000FF
_WRTB_ON_6H                       000000BF
_WRTC_OFF_6H                      000000FF
_WRTC_ON_6H                       000000DF
_WRTD_OFF_6H                      000000FF
_WRTD_ON_6H                       0000007F
_XINST_OFF_4L                     000000BF
_XINST_ON_4L                      000000FF
__18F4550                         00000001
bin48dec                          00000D3C
bitcnt                            00000000
countT1                           00000002
countT2                           00000003
countT3                           00000004
countT4                           00000005
countT5                           00000006
MPASM  5.1    FUELGAUGEAPPNOTE_MAIN_VER1.ASM   12-18-2007  18:09:33         PAGE 94


SYMBOL TABLE
  LABEL                             VALUE 

countT6                           00000007
d100l1                            00000778
d1l1                              0000078E
d_write                           00000000
delay_100ms                       0000076E
delay_1s                          00000782
digcnt                            00000001
digitT1                           00000008
digitT10                          00000011
digitT11                          00000012
digitT12                          00000013
digitT13                          00000014
digitT2                           00000009
digitT3                           0000000A
digitT4                           0000000B
digitT5                           0000000C
digitT6                           0000000D
digitT7                           0000000E
digitT8                           0000000F
digitT9                           00000010
i_write                           00000000
ptr_count                         00000017
ptr_pos                           00000016
skip_simulation_U1                0000094E
skip_simulation_U5                00000406
stan_char_1                       0000070E
stan_char_2                       00000740
stan_next_char_1                  00000730
stan_next_char_2                  0000075E
stan_table                        00000000
sw1forCharge                      00000AFC
sw_1                              PORTC,7
sw_1_dir                          TRISC,7
sw_2                              PORTB,0
sw_2_dir                          TRISB,0
sw_3                              PORTB,1
sw_3_dir                          TRISB,1
sw_4                              PORTB,2
sw_4_dir                          TRISB,2
temp_1                            00000018
temp_2                            00000019
temp_3                            0000001A
temp_wr                           00000000
test_buzzer1                      000002EA
testing_Divider_U1                0000099C

Errors   :     0
Warnings :     4 reported,     0 suppressed
Messages :     0 reported,     0 suppressed

